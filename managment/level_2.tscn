[gd_scene load_steps=149 format=3 uid="uid://bjpnikn01bnj1"]

[ext_resource type="Script" path="res://managment/level_2.gd" id="1_y7p2d"]
[ext_resource type="PackedScene" uid="uid://cyak5axceban7" path="res://managment/interface.tscn" id="2_hxkxe"]
[ext_resource type="Texture2D" uid="uid://218ydr7vij4c" path="res://assets/Nature_environment_01.png" id="3_0g8wt"]
[ext_resource type="Texture2D" uid="uid://o4px6emyuep6" path="res://assets/Nature_props_01.png" id="4_ehobp"]
[ext_resource type="Script" path="res://Characters/player.gd" id="4_l5m5t"]
[ext_resource type="Script" path="res://managment/deadfloor.gd" id="5_s186n"]
[ext_resource type="Texture2D" uid="uid://nxdv5lyuxrup" path="res://assets/craftpix-net-352322-nature-pixel-art-environment-free-assets-pack/craftpix-net-358112-free-street-animal-pixel-art-asset-pack/8 Bird 2/Idle.png" id="5_toxdn"]
[ext_resource type="Texture2D" uid="uid://cndvgvrmskc66" path="res://assets/craftpix-net-352322-nature-pixel-art-environment-free-assets-pack/PNG/Tiles/tile14.png" id="6_5ck32"]
[ext_resource type="Texture2D" uid="uid://qn8tdytsm21e" path="res://assets/craftpix-net-352322-nature-pixel-art-environment-free-assets-pack/craftpix-net-358112-free-street-animal-pixel-art-asset-pack/8 Bird 2/Death.png" id="6_j38ry"]
[ext_resource type="Texture2D" uid="uid://hs50r8am7fje" path="res://assets/craftpix-net-352322-nature-pixel-art-environment-free-assets-pack/craftpix-net-358112-free-street-animal-pixel-art-asset-pack/8 Bird 2/Walk.png" id="7_dwihk"]
[ext_resource type="AudioStream" uid="uid://bk6qbjitkwtt" path="res://assets/SFX/deathfloor.wav" id="7_lej7j"]
[ext_resource type="Texture2D" uid="uid://qk4p7psjept6" path="res://assets/craftpix-net-352322-nature-pixel-art-environment-free-assets-pack/craftpix-net-358112-free-street-animal-pixel-art-asset-pack/8 Bird 2/Hurt.png" id="8_s3tnm"]
[ext_resource type="Texture2D" uid="uid://b2eu30iwcjkg5" path="res://assets/dust.png" id="9_0rqtk"]
[ext_resource type="AudioStream" uid="uid://c1at1vliq2tyh" path="res://assets/SFX/jump.wav" id="10_nixei"]
[ext_resource type="AudioStream" uid="uid://b5kf5xpkjvo7k" path="res://assets/SFX/heal.wav" id="11_jyhvo"]
[ext_resource type="AudioStream" uid="uid://dslithgy2o0tr" path="res://assets/SFX/coin.wav" id="12_f6fcy"]
[ext_resource type="AudioStream" uid="uid://bxks4hivj5udn" path="res://assets/SFX/poop.wav" id="13_mtpvu"]
[ext_resource type="AudioStream" uid="uid://dnxq5kii1s8tg" path="res://assets/SFX/EternityLivesLoop.wav" id="17_y8oql"]
[ext_resource type="Texture2D" uid="uid://wtgilxnvu5n7" path="res://assets/Assets/rain/tile005.png" id="19_0e5mp"]
[ext_resource type="Shader" path="res://managment/level_2.gdshader" id="20_ax55e"]
[ext_resource type="Script" path="res://managment/ColorRect.gd" id="20_l6nvm"]
[ext_resource type="AudioStream" uid="uid://cbyopiudvca0d" path="res://assets/SFX/short_blop.wav" id="22_7cm1m"]
[ext_resource type="PackedScene" uid="uid://doi6cqd68mpjh" path="res://managment/storm.tscn" id="22_ahv13"]
[ext_resource type="Texture2D" uid="uid://cyutcolwkn42p" path="res://assets/Assets/smoke_07.png" id="23_bwkiv"]
[ext_resource type="AudioStream" uid="uid://xh53qil7frb4" path="res://assets/SFX/wind-falling.wav" id="23_hsg01"]
[ext_resource type="AudioStream" uid="uid://wsijr22kptpg" path="res://assets/SFX/summon.wav" id="24_wumsw"]
[ext_resource type="Texture2D" uid="uid://dibda8wh5nmnr" path="res://assets/Assets/Green Portal Sprite Sheet.png" id="25_6w6m1"]
[ext_resource type="Texture2D" uid="uid://fbc5wnabq0fn" path="res://assets/dialogues/4-Interrogation Dialog/textbox.png" id="25_gfsnp"]
[ext_resource type="AudioStream" uid="uid://bq2cft78unb5a" path="res://assets/SFX/hit-ground.wav" id="25_qw8hc"]
[ext_resource type="Texture2D" uid="uid://db6dg2ls4ybnd" path="res://assets/Assets/GUI.png" id="26_g3boc"]
[ext_resource type="Texture2D" uid="uid://barr75h8oc5kj" path="res://assets/dialogues/5-Exclamation Dialog/1-Opening/1.png" id="26_lnyvi"]
[ext_resource type="AudioStream" uid="uid://dpeb02pr143ts" path="res://assets/SFX/craw.wav" id="27_0t7cb"]
[ext_resource type="Texture2D" uid="uid://ckiucx0wqhs7y" path="res://assets/dialogues/5-Exclamation Dialog/1-Opening/2.png" id="27_cr0n0"]
[ext_resource type="Texture2D" uid="uid://c5ej3v5v42ck7" path="res://assets/dialogues/5-Exclamation Dialog/1-Opening/3.png" id="28_3j6fu"]
[ext_resource type="Texture2D" uid="uid://b6wu2iwtg0wle" path="res://assets/Assets/warloclSpriteSheet.png" id="29_0qnps"]
[ext_resource type="Texture2D" uid="uid://d18vcwxgxka3f" path="res://assets/dialogues/5-Exclamation Dialog/1-Opening/4.png" id="29_2aju2"]
[ext_resource type="AudioStream" uid="uid://bxrr57qlt8lnl" path="res://assets/SFX/Thunder.wav" id="30_7y4q2"]
[ext_resource type="Script" path="res://enemys/crow_explodes.gd" id="33_ql0pw"]
[ext_resource type="Texture2D" uid="uid://gnoj7lgt71iu" path="res://assets/Assets/Crow.png" id="34_2iw1i"]
[ext_resource type="Texture2D" uid="uid://duxet062431xj" path="res://assets/dialogues/4-Interrogation Dialog/1-Opening/1.png" id="40_dquev"]
[ext_resource type="Texture2D" uid="uid://bb5x4s5u3w0hv" path="res://assets/dialogues/4-Interrogation Dialog/1-Opening/2.png" id="41_731e1"]
[ext_resource type="Texture2D" uid="uid://bu06hiy2hhrk8" path="res://assets/dialogues/4-Interrogation Dialog/1-Opening/3.png" id="42_i6yo3"]
[ext_resource type="Texture2D" uid="uid://ckmm31pmje3hh" path="res://assets/dialogues/4-Interrogation Dialog/1-Opening/4.png" id="43_fu0mb"]
[ext_resource type="AudioStream" uid="uid://cs46bf6fc472o" path="res://assets/SFX/explosion.wav" id="44_eqtr5"]
[ext_resource type="Texture2D" uid="uid://cx42qs58bdgf5" path="res://assets/Assets/GUI-flip.png" id="45_8jv61"]
[ext_resource type="Texture2D" uid="uid://dk0x20njpu78k" path="res://assets/Assets/magics/Effect_BigHit_1_557x553.png" id="46_ly46a"]

[sub_resource type="TileSetAtlasSource" id="TileSetAtlasSource_djjt6"]
texture = ExtResource("3_0g8wt")
7:1/0 = 0
7:1/0/physics_layer_0/linear_velocity = Vector2(0, 0)
7:1/0/physics_layer_0/angular_velocity = 0.0
7:1/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
8:1/0 = 0
8:1/0/physics_layer_0/linear_velocity = Vector2(0, 0)
8:1/0/physics_layer_0/angular_velocity = 0.0
8:1/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
9:1/0 = 0
9:1/0/physics_layer_0/linear_velocity = Vector2(0, 0)
9:1/0/physics_layer_0/angular_velocity = 0.0
9:1/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
10:1/0 = 0
10:1/0/physics_layer_0/linear_velocity = Vector2(0, 0)
10:1/0/physics_layer_0/angular_velocity = 0.0
10:1/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
11:1/0 = 0
11:1/0/physics_layer_0/linear_velocity = Vector2(0, 0)
11:1/0/physics_layer_0/angular_velocity = 0.0
11:1/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
12:1/0 = 0
12:1/0/physics_layer_0/linear_velocity = Vector2(0, 0)
12:1/0/physics_layer_0/angular_velocity = 0.0
12:1/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
15:1/0 = 0
15:1/0/physics_layer_0/linear_velocity = Vector2(0, 0)
15:1/0/physics_layer_0/angular_velocity = 0.0
15:1/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
16:1/0 = 0
16:1/0/physics_layer_0/linear_velocity = Vector2(0, 0)
16:1/0/physics_layer_0/angular_velocity = 0.0
16:1/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
17:1/0 = 0
17:1/0/physics_layer_0/linear_velocity = Vector2(0, 0)
17:1/0/physics_layer_0/angular_velocity = 0.0
17:1/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
18:1/0 = 0
18:1/0/physics_layer_0/linear_velocity = Vector2(0, 0)
18:1/0/physics_layer_0/angular_velocity = 0.0
18:1/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
19:1/0 = 0
19:1/0/physics_layer_0/linear_velocity = Vector2(0, 0)
19:1/0/physics_layer_0/angular_velocity = 0.0
19:1/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
20:1/0 = 0
20:1/0/physics_layer_0/linear_velocity = Vector2(0, 0)
20:1/0/physics_layer_0/angular_velocity = 0.0
20:1/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
21:1/0 = 0
21:1/0/physics_layer_0/linear_velocity = Vector2(0, 0)
21:1/0/physics_layer_0/angular_velocity = 0.0
21:1/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
22:1/0 = 0
22:1/0/physics_layer_0/linear_velocity = Vector2(0, 0)
22:1/0/physics_layer_0/angular_velocity = 0.0
22:1/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
25:1/0 = 0
25:1/0/physics_layer_0/linear_velocity = Vector2(0, 0)
25:1/0/physics_layer_0/angular_velocity = 0.0
25:1/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
26:1/0 = 0
26:1/0/physics_layer_0/linear_velocity = Vector2(0, 0)
26:1/0/physics_layer_0/angular_velocity = 0.0
26:1/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
27:1/0 = 0
27:1/0/physics_layer_0/linear_velocity = Vector2(0, 0)
27:1/0/physics_layer_0/angular_velocity = 0.0
27:1/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
28:1/0 = 0
28:1/0/physics_layer_0/linear_velocity = Vector2(0, 0)
28:1/0/physics_layer_0/angular_velocity = 0.0
28:1/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
29:1/0 = 0
29:1/0/physics_layer_0/linear_velocity = Vector2(0, 0)
29:1/0/physics_layer_0/angular_velocity = 0.0
29:1/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
30:1/0 = 0
30:1/0/physics_layer_0/linear_velocity = Vector2(0, 0)
30:1/0/physics_layer_0/angular_velocity = 0.0
30:1/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
31:1/0 = 0
31:1/0/physics_layer_0/linear_velocity = Vector2(0, 0)
31:1/0/physics_layer_0/angular_velocity = 0.0
31:1/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
32:1/0 = 0
32:1/0/physics_layer_0/linear_velocity = Vector2(0, 0)
32:1/0/physics_layer_0/angular_velocity = 0.0
32:1/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
33:1/0 = 0
33:1/0/physics_layer_0/linear_velocity = Vector2(0, 0)
33:1/0/physics_layer_0/angular_velocity = 0.0
33:1/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
34:1/0 = 0
34:1/0/physics_layer_0/linear_velocity = Vector2(0, 0)
34:1/0/physics_layer_0/angular_velocity = 0.0
34:1/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
35:1/0 = 0
35:1/0/physics_layer_0/linear_velocity = Vector2(0, 0)
35:1/0/physics_layer_0/angular_velocity = 0.0
35:1/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
36:1/0 = 0
36:1/0/physics_layer_0/linear_velocity = Vector2(0, 0)
36:1/0/physics_layer_0/angular_velocity = 0.0
36:1/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
37:1/0 = 0
37:1/0/physics_layer_0/linear_velocity = Vector2(0, 0)
37:1/0/physics_layer_0/angular_velocity = 0.0
37:1/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
38:1/0 = 0
38:1/0/physics_layer_0/linear_velocity = Vector2(0, 0)
38:1/0/physics_layer_0/angular_velocity = 0.0
38:1/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
39:1/0 = 0
39:1/0/physics_layer_0/linear_velocity = Vector2(0, 0)
39:1/0/physics_layer_0/angular_velocity = 0.0
39:1/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
40:1/0 = 0
40:1/0/physics_layer_0/linear_velocity = Vector2(0, 0)
40:1/0/physics_layer_0/angular_velocity = 0.0
40:1/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
41:1/0 = 0
41:1/0/physics_layer_0/linear_velocity = Vector2(0, 0)
41:1/0/physics_layer_0/angular_velocity = 0.0
41:1/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
42:1/0 = 0
42:1/0/physics_layer_0/linear_velocity = Vector2(0, 0)
42:1/0/physics_layer_0/angular_velocity = 0.0
42:1/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
7:2/0 = 0
7:2/0/physics_layer_0/linear_velocity = Vector2(0, 0)
7:2/0/physics_layer_0/angular_velocity = 0.0
7:2/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
8:2/0 = 0
8:2/0/physics_layer_0/linear_velocity = Vector2(0, 0)
8:2/0/physics_layer_0/angular_velocity = 0.0
8:2/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
9:2/0 = 0
9:2/0/physics_layer_0/linear_velocity = Vector2(0, 0)
9:2/0/physics_layer_0/angular_velocity = 0.0
9:2/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
10:2/0 = 0
10:2/0/physics_layer_0/linear_velocity = Vector2(0, 0)
10:2/0/physics_layer_0/angular_velocity = 0.0
10:2/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
11:2/0 = 0
11:2/0/physics_layer_0/linear_velocity = Vector2(0, 0)
11:2/0/physics_layer_0/angular_velocity = 0.0
11:2/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
12:2/0 = 0
12:2/0/physics_layer_0/linear_velocity = Vector2(0, 0)
12:2/0/physics_layer_0/angular_velocity = 0.0
12:2/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
14:2/0 = 0
14:2/0/physics_layer_0/linear_velocity = Vector2(0, 0)
14:2/0/physics_layer_0/angular_velocity = 0.0
14:2/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
15:2/0 = 0
15:2/0/physics_layer_0/linear_velocity = Vector2(0, 0)
15:2/0/physics_layer_0/angular_velocity = 0.0
15:2/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
16:2/0 = 0
16:2/0/physics_layer_0/linear_velocity = Vector2(0, 0)
16:2/0/physics_layer_0/angular_velocity = 0.0
16:2/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
17:2/0 = 0
17:2/0/physics_layer_0/linear_velocity = Vector2(0, 0)
17:2/0/physics_layer_0/angular_velocity = 0.0
17:2/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
18:2/0 = 0
18:2/0/physics_layer_0/linear_velocity = Vector2(0, 0)
18:2/0/physics_layer_0/angular_velocity = 0.0
18:2/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
19:2/0 = 0
19:2/0/physics_layer_0/linear_velocity = Vector2(0, 0)
19:2/0/physics_layer_0/angular_velocity = 0.0
19:2/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
20:2/0 = 0
20:2/0/physics_layer_0/linear_velocity = Vector2(0, 0)
20:2/0/physics_layer_0/angular_velocity = 0.0
20:2/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
21:2/0 = 0
21:2/0/physics_layer_0/linear_velocity = Vector2(0, 0)
21:2/0/physics_layer_0/angular_velocity = 0.0
21:2/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
22:2/0 = 0
22:2/0/physics_layer_0/linear_velocity = Vector2(0, 0)
22:2/0/physics_layer_0/angular_velocity = 0.0
22:2/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
23:2/0 = 0
23:2/0/physics_layer_0/linear_velocity = Vector2(0, 0)
23:2/0/physics_layer_0/angular_velocity = 0.0
23:2/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
25:2/0 = 0
25:2/0/physics_layer_0/linear_velocity = Vector2(0, 0)
25:2/0/physics_layer_0/angular_velocity = 0.0
25:2/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
26:2/0 = 0
26:2/0/physics_layer_0/linear_velocity = Vector2(0, 0)
26:2/0/physics_layer_0/angular_velocity = 0.0
26:2/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
27:2/0 = 0
27:2/0/physics_layer_0/linear_velocity = Vector2(0, 0)
27:2/0/physics_layer_0/angular_velocity = 0.0
27:2/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
28:2/0 = 0
28:2/0/physics_layer_0/linear_velocity = Vector2(0, 0)
28:2/0/physics_layer_0/angular_velocity = 0.0
28:2/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
29:2/0 = 0
29:2/0/physics_layer_0/linear_velocity = Vector2(0, 0)
29:2/0/physics_layer_0/angular_velocity = 0.0
29:2/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
30:2/0 = 0
30:2/0/physics_layer_0/linear_velocity = Vector2(0, 0)
30:2/0/physics_layer_0/angular_velocity = 0.0
30:2/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
31:2/0 = 0
31:2/0/physics_layer_0/linear_velocity = Vector2(0, 0)
31:2/0/physics_layer_0/angular_velocity = 0.0
31:2/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
32:2/0 = 0
32:2/0/physics_layer_0/linear_velocity = Vector2(0, 0)
32:2/0/physics_layer_0/angular_velocity = 0.0
32:2/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
33:2/0 = 0
33:2/0/physics_layer_0/linear_velocity = Vector2(0, 0)
33:2/0/physics_layer_0/angular_velocity = 0.0
33:2/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
34:2/0 = 0
34:2/0/physics_layer_0/linear_velocity = Vector2(0, 0)
34:2/0/physics_layer_0/angular_velocity = 0.0
34:2/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
35:2/0 = 0
35:2/0/physics_layer_0/linear_velocity = Vector2(0, 0)
35:2/0/physics_layer_0/angular_velocity = 0.0
35:2/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
36:2/0 = 0
36:2/0/physics_layer_0/linear_velocity = Vector2(0, 0)
36:2/0/physics_layer_0/angular_velocity = 0.0
36:2/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
37:2/0 = 0
37:2/0/physics_layer_0/linear_velocity = Vector2(0, 0)
37:2/0/physics_layer_0/angular_velocity = 0.0
37:2/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
38:2/0 = 0
38:2/0/physics_layer_0/linear_velocity = Vector2(0, 0)
38:2/0/physics_layer_0/angular_velocity = 0.0
38:2/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
39:2/0 = 0
39:2/0/physics_layer_0/linear_velocity = Vector2(0, 0)
39:2/0/physics_layer_0/angular_velocity = 0.0
39:2/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
40:2/0 = 0
40:2/0/physics_layer_0/linear_velocity = Vector2(0, 0)
40:2/0/physics_layer_0/angular_velocity = 0.0
40:2/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
41:2/0 = 0
41:2/0/physics_layer_0/linear_velocity = Vector2(0, 0)
41:2/0/physics_layer_0/angular_velocity = 0.0
41:2/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
42:2/0 = 0
42:2/0/physics_layer_0/linear_velocity = Vector2(0, 0)
42:2/0/physics_layer_0/angular_velocity = 0.0
42:2/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
7:3/0 = 0
7:3/0/physics_layer_0/linear_velocity = Vector2(0, 0)
7:3/0/physics_layer_0/angular_velocity = 0.0
7:3/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
8:3/0 = 0
8:3/0/physics_layer_0/linear_velocity = Vector2(0, 0)
8:3/0/physics_layer_0/angular_velocity = 0.0
8:3/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
9:3/0 = 0
9:3/0/physics_layer_0/linear_velocity = Vector2(0, 0)
9:3/0/physics_layer_0/angular_velocity = 0.0
9:3/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
10:3/0 = 0
10:3/0/physics_layer_0/linear_velocity = Vector2(0, 0)
10:3/0/physics_layer_0/angular_velocity = 0.0
10:3/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
11:3/0 = 0
11:3/0/physics_layer_0/linear_velocity = Vector2(0, 0)
11:3/0/physics_layer_0/angular_velocity = 0.0
11:3/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
12:3/0 = 0
12:3/0/physics_layer_0/linear_velocity = Vector2(0, 0)
12:3/0/physics_layer_0/angular_velocity = 0.0
12:3/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
13:3/0 = 0
13:3/0/physics_layer_0/linear_velocity = Vector2(0, 0)
13:3/0/physics_layer_0/angular_velocity = 0.0
13:3/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
14:3/0 = 0
14:3/0/physics_layer_0/linear_velocity = Vector2(0, 0)
14:3/0/physics_layer_0/angular_velocity = 0.0
14:3/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
15:3/0 = 0
15:3/0/physics_layer_0/linear_velocity = Vector2(0, 0)
15:3/0/physics_layer_0/angular_velocity = 0.0
15:3/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
16:3/0 = 0
16:3/0/physics_layer_0/linear_velocity = Vector2(0, 0)
16:3/0/physics_layer_0/angular_velocity = 0.0
16:3/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
17:3/0 = 0
17:3/0/physics_layer_0/linear_velocity = Vector2(0, 0)
17:3/0/physics_layer_0/angular_velocity = 0.0
17:3/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
18:3/0 = 0
18:3/0/physics_layer_0/linear_velocity = Vector2(0, 0)
18:3/0/physics_layer_0/angular_velocity = 0.0
18:3/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
19:3/0 = 0
19:3/0/physics_layer_0/linear_velocity = Vector2(0, 0)
19:3/0/physics_layer_0/angular_velocity = 0.0
19:3/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
20:3/0 = 0
20:3/0/physics_layer_0/linear_velocity = Vector2(0, 0)
20:3/0/physics_layer_0/angular_velocity = 0.0
20:3/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
21:3/0 = 0
21:3/0/physics_layer_0/linear_velocity = Vector2(0, 0)
21:3/0/physics_layer_0/angular_velocity = 0.0
21:3/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
22:3/0 = 0
22:3/0/physics_layer_0/linear_velocity = Vector2(0, 0)
22:3/0/physics_layer_0/angular_velocity = 0.0
22:3/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
23:3/0 = 0
23:3/0/physics_layer_0/linear_velocity = Vector2(0, 0)
23:3/0/physics_layer_0/angular_velocity = 0.0
23:3/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
24:3/0 = 0
24:3/0/physics_layer_0/linear_velocity = Vector2(0, 0)
24:3/0/physics_layer_0/angular_velocity = 0.0
24:3/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
25:3/0 = 0
25:3/0/physics_layer_0/linear_velocity = Vector2(0, 0)
25:3/0/physics_layer_0/angular_velocity = 0.0
25:3/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
26:3/0 = 0
26:3/0/physics_layer_0/linear_velocity = Vector2(0, 0)
26:3/0/physics_layer_0/angular_velocity = 0.0
26:3/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
27:3/0 = 0
27:3/0/physics_layer_0/linear_velocity = Vector2(0, 0)
27:3/0/physics_layer_0/angular_velocity = 0.0
27:3/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
28:3/0 = 0
28:3/0/physics_layer_0/linear_velocity = Vector2(0, 0)
28:3/0/physics_layer_0/angular_velocity = 0.0
28:3/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
29:3/0 = 0
29:3/0/physics_layer_0/linear_velocity = Vector2(0, 0)
29:3/0/physics_layer_0/angular_velocity = 0.0
29:3/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
30:3/0 = 0
30:3/0/physics_layer_0/linear_velocity = Vector2(0, 0)
30:3/0/physics_layer_0/angular_velocity = 0.0
30:3/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
31:3/0 = 0
31:3/0/physics_layer_0/linear_velocity = Vector2(0, 0)
31:3/0/physics_layer_0/angular_velocity = 0.0
31:3/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
32:3/0 = 0
32:3/0/physics_layer_0/linear_velocity = Vector2(0, 0)
32:3/0/physics_layer_0/angular_velocity = 0.0
32:3/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
33:3/0 = 0
33:3/0/physics_layer_0/linear_velocity = Vector2(0, 0)
33:3/0/physics_layer_0/angular_velocity = 0.0
33:3/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
34:3/0 = 0
34:3/0/physics_layer_0/linear_velocity = Vector2(0, 0)
34:3/0/physics_layer_0/angular_velocity = 0.0
34:3/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
35:3/0 = 0
35:3/0/physics_layer_0/linear_velocity = Vector2(0, 0)
35:3/0/physics_layer_0/angular_velocity = 0.0
35:3/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
36:3/0 = 0
36:3/0/physics_layer_0/linear_velocity = Vector2(0, 0)
36:3/0/physics_layer_0/angular_velocity = 0.0
36:3/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
37:3/0 = 0
37:3/0/physics_layer_0/linear_velocity = Vector2(0, 0)
37:3/0/physics_layer_0/angular_velocity = 0.0
37:3/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
38:3/0 = 0
38:3/0/physics_layer_0/linear_velocity = Vector2(0, 0)
38:3/0/physics_layer_0/angular_velocity = 0.0
38:3/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
39:3/0 = 0
39:3/0/physics_layer_0/linear_velocity = Vector2(0, 0)
39:3/0/physics_layer_0/angular_velocity = 0.0
39:3/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
40:3/0 = 0
40:3/0/physics_layer_0/linear_velocity = Vector2(0, 0)
40:3/0/physics_layer_0/angular_velocity = 0.0
40:3/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
41:3/0 = 0
41:3/0/physics_layer_0/linear_velocity = Vector2(0, 0)
41:3/0/physics_layer_0/angular_velocity = 0.0
41:3/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
42:3/0 = 0
42:3/0/physics_layer_0/linear_velocity = Vector2(0, 0)
42:3/0/physics_layer_0/angular_velocity = 0.0
42:3/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
7:4/0 = 0
7:4/0/physics_layer_0/linear_velocity = Vector2(0, 0)
7:4/0/physics_layer_0/angular_velocity = 0.0
7:4/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
8:4/0 = 0
8:4/0/physics_layer_0/linear_velocity = Vector2(0, 0)
8:4/0/physics_layer_0/angular_velocity = 0.0
8:4/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
9:4/0 = 0
9:4/0/physics_layer_0/linear_velocity = Vector2(0, 0)
9:4/0/physics_layer_0/angular_velocity = 0.0
9:4/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
10:4/0 = 0
10:4/0/physics_layer_0/linear_velocity = Vector2(0, 0)
10:4/0/physics_layer_0/angular_velocity = 0.0
10:4/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
11:4/0 = 0
11:4/0/physics_layer_0/linear_velocity = Vector2(0, 0)
11:4/0/physics_layer_0/angular_velocity = 0.0
11:4/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
12:4/0 = 0
12:4/0/physics_layer_0/linear_velocity = Vector2(0, 0)
12:4/0/physics_layer_0/angular_velocity = 0.0
12:4/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
13:4/0 = 0
13:4/0/physics_layer_0/linear_velocity = Vector2(0, 0)
13:4/0/physics_layer_0/angular_velocity = 0.0
13:4/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
14:4/0 = 0
14:4/0/physics_layer_0/linear_velocity = Vector2(0, 0)
14:4/0/physics_layer_0/angular_velocity = 0.0
14:4/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
15:4/0 = 0
15:4/0/physics_layer_0/linear_velocity = Vector2(0, 0)
15:4/0/physics_layer_0/angular_velocity = 0.0
15:4/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
22:4/0 = 0
22:4/0/physics_layer_0/linear_velocity = Vector2(0, 0)
22:4/0/physics_layer_0/angular_velocity = 0.0
22:4/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
23:4/0 = 0
23:4/0/physics_layer_0/linear_velocity = Vector2(0, 0)
23:4/0/physics_layer_0/angular_velocity = 0.0
23:4/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
24:4/0 = 0
24:4/0/physics_layer_0/linear_velocity = Vector2(0, 0)
24:4/0/physics_layer_0/angular_velocity = 0.0
24:4/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
25:4/0 = 0
25:4/0/physics_layer_0/linear_velocity = Vector2(0, 0)
25:4/0/physics_layer_0/angular_velocity = 0.0
25:4/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
26:4/0 = 0
26:4/0/physics_layer_0/linear_velocity = Vector2(0, 0)
26:4/0/physics_layer_0/angular_velocity = 0.0
26:4/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
27:4/0 = 0
27:4/0/physics_layer_0/linear_velocity = Vector2(0, 0)
27:4/0/physics_layer_0/angular_velocity = 0.0
27:4/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
28:4/0 = 0
28:4/0/physics_layer_0/linear_velocity = Vector2(0, 0)
28:4/0/physics_layer_0/angular_velocity = 0.0
28:4/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
29:4/0 = 0
29:4/0/physics_layer_0/linear_velocity = Vector2(0, 0)
29:4/0/physics_layer_0/angular_velocity = 0.0
29:4/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
30:4/0 = 0
30:4/0/physics_layer_0/linear_velocity = Vector2(0, 0)
30:4/0/physics_layer_0/angular_velocity = 0.0
30:4/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
31:4/0 = 0
31:4/0/physics_layer_0/linear_velocity = Vector2(0, 0)
31:4/0/physics_layer_0/angular_velocity = 0.0
31:4/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 3.5, -8, 8)
32:4/0 = 0
32:4/0/physics_layer_0/linear_velocity = Vector2(0, 0)
32:4/0/physics_layer_0/angular_velocity = 0.0
32:4/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, -2.5, -8, 3)
33:4/0 = 0
33:4/0/physics_layer_0/linear_velocity = Vector2(0, 0)
33:4/0/physics_layer_0/angular_velocity = 0.0
33:4/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, -8, -8, -3)
34:4/0 = 0
34:4/0/physics_layer_0/linear_velocity = Vector2(0, 0)
34:4/0/physics_layer_0/angular_velocity = 0.0
34:4/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, -2.5, -8, -8)
35:4/0 = 0
35:4/0/physics_layer_0/linear_velocity = Vector2(0, 0)
35:4/0/physics_layer_0/angular_velocity = 0.0
35:4/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 3, -8, -2.5)
36:4/0 = 0
36:4/0/physics_layer_0/linear_velocity = Vector2(0, 0)
36:4/0/physics_layer_0/angular_velocity = 0.0
36:4/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 2.5)
37:4/0 = 0
37:4/0/physics_layer_0/linear_velocity = Vector2(0, 0)
37:4/0/physics_layer_0/angular_velocity = 0.0
37:4/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
38:4/0 = 0
38:4/0/physics_layer_0/linear_velocity = Vector2(0, 0)
38:4/0/physics_layer_0/angular_velocity = 0.0
38:4/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
39:4/0 = 0
39:4/0/physics_layer_0/linear_velocity = Vector2(0, 0)
39:4/0/physics_layer_0/angular_velocity = 0.0
39:4/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
40:4/0 = 0
40:4/0/physics_layer_0/linear_velocity = Vector2(0, 0)
40:4/0/physics_layer_0/angular_velocity = 0.0
40:4/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
41:4/0 = 0
41:4/0/physics_layer_0/linear_velocity = Vector2(0, 0)
41:4/0/physics_layer_0/angular_velocity = 0.0
41:4/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
42:4/0 = 0
42:4/0/physics_layer_0/linear_velocity = Vector2(0, 0)
42:4/0/physics_layer_0/angular_velocity = 0.0
42:4/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
7:5/0 = 0
7:5/0/physics_layer_0/linear_velocity = Vector2(0, 0)
7:5/0/physics_layer_0/angular_velocity = 0.0
7:5/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
8:5/0 = 0
8:5/0/physics_layer_0/linear_velocity = Vector2(0, 0)
8:5/0/physics_layer_0/angular_velocity = 0.0
8:5/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
11:5/0 = 0
11:5/0/physics_layer_0/linear_velocity = Vector2(0, 0)
11:5/0/physics_layer_0/angular_velocity = 0.0
11:5/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
12:5/0 = 0
12:5/0/physics_layer_0/linear_velocity = Vector2(0, 0)
12:5/0/physics_layer_0/angular_velocity = 0.0
12:5/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
13:5/0 = 0
13:5/0/physics_layer_0/linear_velocity = Vector2(0, 0)
13:5/0/physics_layer_0/angular_velocity = 0.0
13:5/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
14:5/0 = 0
14:5/0/physics_layer_0/linear_velocity = Vector2(0, 0)
14:5/0/physics_layer_0/angular_velocity = 0.0
14:5/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
15:5/0 = 0
15:5/0/physics_layer_0/linear_velocity = Vector2(0, 0)
15:5/0/physics_layer_0/angular_velocity = 0.0
15:5/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
22:5/0 = 0
22:5/0/physics_layer_0/linear_velocity = Vector2(0, 0)
22:5/0/physics_layer_0/angular_velocity = 0.0
22:5/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
23:5/0 = 0
23:5/0/physics_layer_0/linear_velocity = Vector2(0, 0)
23:5/0/physics_layer_0/angular_velocity = 0.0
23:5/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
24:5/0 = 0
24:5/0/physics_layer_0/linear_velocity = Vector2(0, 0)
24:5/0/physics_layer_0/angular_velocity = 0.0
24:5/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
25:5/0 = 0
25:5/0/physics_layer_0/linear_velocity = Vector2(0, 0)
25:5/0/physics_layer_0/angular_velocity = 0.0
25:5/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
26:5/0 = 0
26:5/0/physics_layer_0/linear_velocity = Vector2(0, 0)
26:5/0/physics_layer_0/angular_velocity = 0.0
26:5/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
27:5/0 = 0
27:5/0/physics_layer_0/linear_velocity = Vector2(0, 0)
27:5/0/physics_layer_0/angular_velocity = 0.0
27:5/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
28:5/0 = 0
28:5/0/physics_layer_0/linear_velocity = Vector2(0, 0)
28:5/0/physics_layer_0/angular_velocity = 0.0
28:5/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 3, -8, 8)
29:5/0 = 0
29:5/0/physics_layer_0/linear_velocity = Vector2(0, 0)
29:5/0/physics_layer_0/angular_velocity = 0.0
29:5/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, -2.5, -8, 2.5)
30:5/0 = 0
30:5/0/physics_layer_0/linear_velocity = Vector2(0, 0)
30:5/0/physics_layer_0/angular_velocity = 0.0
30:5/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, -8, -8, -2)
37:5/0 = 0
37:5/0/physics_layer_0/linear_velocity = Vector2(0, 0)
37:5/0/physics_layer_0/angular_velocity = 0.0
37:5/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, -3, -8, -8)
38:5/0 = 0
38:5/0/physics_layer_0/linear_velocity = Vector2(0, 0)
38:5/0/physics_layer_0/angular_velocity = 0.0
38:5/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 3, -8, -2.5)
39:5/0 = 0
39:5/0/physics_layer_0/linear_velocity = Vector2(0, 0)
39:5/0/physics_layer_0/angular_velocity = 0.0
39:5/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 2.5)
40:5/0 = 0
40:5/0/physics_layer_0/linear_velocity = Vector2(0, 0)
40:5/0/physics_layer_0/angular_velocity = 0.0
40:5/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
41:5/0 = 0
41:5/0/physics_layer_0/linear_velocity = Vector2(0, 0)
41:5/0/physics_layer_0/angular_velocity = 0.0
41:5/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
42:5/0 = 0
42:5/0/physics_layer_0/linear_velocity = Vector2(0, 0)
42:5/0/physics_layer_0/angular_velocity = 0.0
42:5/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
7:6/0 = 0
7:6/0/physics_layer_0/linear_velocity = Vector2(0, 0)
7:6/0/physics_layer_0/angular_velocity = 0.0
7:6/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
12:6/0 = 0
12:6/0/physics_layer_0/linear_velocity = Vector2(0, 0)
12:6/0/physics_layer_0/angular_velocity = 0.0
12:6/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
13:6/0 = 0
13:6/0/physics_layer_0/linear_velocity = Vector2(0, 0)
13:6/0/physics_layer_0/angular_velocity = 0.0
13:6/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
14:6/0 = 0
14:6/0/physics_layer_0/linear_velocity = Vector2(0, 0)
14:6/0/physics_layer_0/angular_velocity = 0.0
14:6/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
15:6/0 = 0
15:6/0/physics_layer_0/linear_velocity = Vector2(0, 0)
15:6/0/physics_layer_0/angular_velocity = 0.0
15:6/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
22:6/0 = 0
22:6/0/physics_layer_0/linear_velocity = Vector2(0, 0)
22:6/0/physics_layer_0/angular_velocity = 0.0
22:6/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
23:6/0 = 0
23:6/0/physics_layer_0/linear_velocity = Vector2(0, 0)
23:6/0/physics_layer_0/angular_velocity = 0.0
23:6/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
24:6/0 = 0
24:6/0/physics_layer_0/linear_velocity = Vector2(0, 0)
24:6/0/physics_layer_0/angular_velocity = 0.0
24:6/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
25:6/0 = 0
25:6/0/physics_layer_0/linear_velocity = Vector2(0, 0)
25:6/0/physics_layer_0/angular_velocity = 0.0
25:6/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 3, -8, 8)
26:6/0 = 0
26:6/0/physics_layer_0/linear_velocity = Vector2(0, 0)
26:6/0/physics_layer_0/angular_velocity = 0.0
26:6/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, -2.5, -8, 2.5)
27:6/0 = 0
27:6/0/physics_layer_0/linear_velocity = Vector2(0, 0)
27:6/0/physics_layer_0/angular_velocity = 0.0
27:6/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, -8, -8, -2)
40:6/0 = 0
40:6/0/physics_layer_0/linear_velocity = Vector2(0, 0)
40:6/0/physics_layer_0/angular_velocity = 0.0
40:6/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, -2.5, -8, -8)
41:6/0 = 0
41:6/0/physics_layer_0/linear_velocity = Vector2(0, 0)
41:6/0/physics_layer_0/angular_velocity = 0.0
41:6/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 2, -8, -3)
42:6/0 = 0
42:6/0/physics_layer_0/linear_velocity = Vector2(0, 0)
42:6/0/physics_layer_0/angular_velocity = 0.0
42:6/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 2.5)
1:7/0 = 0
1:7/0/physics_layer_0/linear_velocity = Vector2(0, 0)
1:7/0/physics_layer_0/angular_velocity = 0.0
1:7/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
2:7/0 = 0
2:7/0/physics_layer_0/linear_velocity = Vector2(0, 0)
2:7/0/physics_layer_0/angular_velocity = 0.0
2:7/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
3:7/0 = 0
3:7/0/physics_layer_0/linear_velocity = Vector2(0, 0)
3:7/0/physics_layer_0/angular_velocity = 0.0
3:7/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
4:7/0 = 0
4:7/0/physics_layer_0/linear_velocity = Vector2(0, 0)
4:7/0/physics_layer_0/angular_velocity = 0.0
4:7/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
5:7/0 = 0
5:7/0/physics_layer_0/linear_velocity = Vector2(0, 0)
5:7/0/physics_layer_0/angular_velocity = 0.0
5:7/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
6:7/0 = 0
6:7/0/physics_layer_0/linear_velocity = Vector2(0, 0)
6:7/0/physics_layer_0/angular_velocity = 0.0
6:7/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
7:7/0 = 0
7:7/0/physics_layer_0/linear_velocity = Vector2(0, 0)
7:7/0/physics_layer_0/angular_velocity = 0.0
7:7/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
8:7/0 = 0
8:7/0/physics_layer_0/linear_velocity = Vector2(0, 0)
8:7/0/physics_layer_0/angular_velocity = 0.0
8:7/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
9:7/0 = 0
9:7/0/physics_layer_0/linear_velocity = Vector2(0, 0)
9:7/0/physics_layer_0/angular_velocity = 0.0
9:7/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
10:7/0 = 0
10:7/0/physics_layer_0/linear_velocity = Vector2(0, 0)
10:7/0/physics_layer_0/angular_velocity = 0.0
10:7/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
11:7/0 = 0
11:7/0/physics_layer_0/linear_velocity = Vector2(0, 0)
11:7/0/physics_layer_0/angular_velocity = 0.0
11:7/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
12:7/0 = 0
12:7/0/physics_layer_0/linear_velocity = Vector2(0, 0)
12:7/0/physics_layer_0/angular_velocity = 0.0
12:7/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
13:7/0 = 0
13:7/0/physics_layer_0/linear_velocity = Vector2(0, 0)
13:7/0/physics_layer_0/angular_velocity = 0.0
13:7/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
14:7/0 = 0
14:7/0/physics_layer_0/linear_velocity = Vector2(0, 0)
14:7/0/physics_layer_0/angular_velocity = 0.0
14:7/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
15:7/0 = 0
15:7/0/physics_layer_0/linear_velocity = Vector2(0, 0)
15:7/0/physics_layer_0/angular_velocity = 0.0
15:7/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
16:7/0 = 0
16:7/0/physics_layer_0/linear_velocity = Vector2(0, 0)
16:7/0/physics_layer_0/angular_velocity = 0.0
16:7/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
17:7/0 = 0
17:7/0/physics_layer_0/linear_velocity = Vector2(0, 0)
17:7/0/physics_layer_0/angular_velocity = 0.0
17:7/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
18:7/0 = 0
18:7/0/physics_layer_0/linear_velocity = Vector2(0, 0)
18:7/0/physics_layer_0/angular_velocity = 0.0
18:7/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
19:7/0 = 0
19:7/0/physics_layer_0/linear_velocity = Vector2(0, 0)
19:7/0/physics_layer_0/angular_velocity = 0.0
19:7/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
20:7/0 = 0
20:7/0/physics_layer_0/linear_velocity = Vector2(0, 0)
20:7/0/physics_layer_0/angular_velocity = 0.0
20:7/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
21:7/0 = 0
21:7/0/physics_layer_0/linear_velocity = Vector2(0, 0)
21:7/0/physics_layer_0/angular_velocity = 0.0
21:7/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
22:7/0 = 0
22:7/0/physics_layer_0/linear_velocity = Vector2(0, 0)
22:7/0/physics_layer_0/angular_velocity = 0.0
22:7/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
23:7/0 = 0
23:7/0/physics_layer_0/linear_velocity = Vector2(0, 0)
23:7/0/physics_layer_0/angular_velocity = 0.0
23:7/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
24:7/0 = 0
24:7/0/physics_layer_0/linear_velocity = Vector2(0, 0)
24:7/0/physics_layer_0/angular_velocity = 0.0
24:7/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
31:7/0 = 0
31:7/0/physics_layer_0/linear_velocity = Vector2(0, 0)
31:7/0/physics_layer_0/angular_velocity = 0.0
31:7/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, 8, 8, 2, 8, 8, -8, 8)
32:7/0 = 0
32:7/0/physics_layer_0/linear_velocity = Vector2(0, 0)
32:7/0/physics_layer_0/angular_velocity = 0.0
32:7/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, 2.5, 8, -3, 8, 8, -8, 8)
33:7/0 = 0
33:7/0/physics_layer_0/linear_velocity = Vector2(0, 0)
33:7/0/physics_layer_0/angular_velocity = 0.0
33:7/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -3, 8, -8, 8, 8, -8, 8)
34:7/0 = 0
34:7/0/physics_layer_0/linear_velocity = Vector2(0, 0)
34:7/0/physics_layer_0/angular_velocity = 0.0
34:7/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -2.5, 8, 8, -8, 8)
35:7/0 = 0
35:7/0/physics_layer_0/linear_velocity = Vector2(0, 0)
35:7/0/physics_layer_0/angular_velocity = 0.0
35:7/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -2.5, 8, 2.5, 8, 8, -8, 8)
36:7/0 = 0
36:7/0/physics_layer_0/linear_velocity = Vector2(0, 0)
36:7/0/physics_layer_0/angular_velocity = 0.0
36:7/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, 2.5, 8, 8, 8, 8, -8, 8)
43:7/0 = 0
43:7/0/physics_layer_0/linear_velocity = Vector2(0, 0)
43:7/0/physics_layer_0/angular_velocity = 0.0
44:7/0 = 0
44:7/0/physics_layer_0/linear_velocity = Vector2(0, 0)
44:7/0/physics_layer_0/angular_velocity = 0.0
45:7/0 = 0
45:7/0/physics_layer_0/linear_velocity = Vector2(0, 0)
45:7/0/physics_layer_0/angular_velocity = 0.0
46:7/0 = 0
46:7/0/physics_layer_0/linear_velocity = Vector2(0, 0)
46:7/0/physics_layer_0/angular_velocity = 0.0
47:7/0 = 0
47:7/0/physics_layer_0/linear_velocity = Vector2(0, 0)
47:7/0/physics_layer_0/angular_velocity = 0.0
48:7/0 = 0
48:7/0/physics_layer_0/linear_velocity = Vector2(0, 0)
48:7/0/physics_layer_0/angular_velocity = 0.0
49:7/0 = 0
49:7/0/physics_layer_0/linear_velocity = Vector2(0, 0)
49:7/0/physics_layer_0/angular_velocity = 0.0
50:7/0 = 0
50:7/0/physics_layer_0/linear_velocity = Vector2(0, 0)
50:7/0/physics_layer_0/angular_velocity = 0.0
51:7/0 = 0
51:7/0/physics_layer_0/linear_velocity = Vector2(0, 0)
51:7/0/physics_layer_0/angular_velocity = 0.0
52:7/0 = 0
52:7/0/physics_layer_0/linear_velocity = Vector2(0, 0)
52:7/0/physics_layer_0/angular_velocity = 0.0
53:7/0 = 0
53:7/0/physics_layer_0/linear_velocity = Vector2(0, 0)
53:7/0/physics_layer_0/angular_velocity = 0.0
54:7/0 = 0
54:7/0/physics_layer_0/linear_velocity = Vector2(0, 0)
54:7/0/physics_layer_0/angular_velocity = 0.0
55:7/0 = 0
55:7/0/physics_layer_0/linear_velocity = Vector2(0, 0)
55:7/0/physics_layer_0/angular_velocity = 0.0
55:7/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
56:7/0 = 0
56:7/0/physics_layer_0/linear_velocity = Vector2(0, 0)
56:7/0/physics_layer_0/angular_velocity = 0.0
56:7/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
57:7/0 = 0
57:7/0/physics_layer_0/linear_velocity = Vector2(0, 0)
57:7/0/physics_layer_0/angular_velocity = 0.0
57:7/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
1:8/0 = 0
1:8/0/physics_layer_0/linear_velocity = Vector2(0, 0)
1:8/0/physics_layer_0/angular_velocity = 0.0
1:8/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
2:8/0 = 0
2:8/0/physics_layer_0/linear_velocity = Vector2(0, 0)
2:8/0/physics_layer_0/angular_velocity = 0.0
2:8/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
3:8/0 = 0
3:8/0/physics_layer_0/linear_velocity = Vector2(0, 0)
3:8/0/physics_layer_0/angular_velocity = 0.0
3:8/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
4:8/0 = 0
4:8/0/physics_layer_0/linear_velocity = Vector2(0, 0)
4:8/0/physics_layer_0/angular_velocity = 0.0
4:8/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
5:8/0 = 0
5:8/0/physics_layer_0/linear_velocity = Vector2(0, 0)
5:8/0/physics_layer_0/angular_velocity = 0.0
5:8/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
6:8/0 = 0
6:8/0/physics_layer_0/linear_velocity = Vector2(0, 0)
6:8/0/physics_layer_0/angular_velocity = 0.0
6:8/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
7:8/0 = 0
7:8/0/physics_layer_0/linear_velocity = Vector2(0, 0)
7:8/0/physics_layer_0/angular_velocity = 0.0
7:8/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
8:8/0 = 0
8:8/0/physics_layer_0/linear_velocity = Vector2(0, 0)
8:8/0/physics_layer_0/angular_velocity = 0.0
8:8/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
9:8/0 = 0
9:8/0/physics_layer_0/linear_velocity = Vector2(0, 0)
9:8/0/physics_layer_0/angular_velocity = 0.0
9:8/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
10:8/0 = 0
10:8/0/physics_layer_0/linear_velocity = Vector2(0, 0)
10:8/0/physics_layer_0/angular_velocity = 0.0
10:8/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
11:8/0 = 0
11:8/0/physics_layer_0/linear_velocity = Vector2(0, 0)
11:8/0/physics_layer_0/angular_velocity = 0.0
11:8/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
12:8/0 = 0
12:8/0/physics_layer_0/linear_velocity = Vector2(0, 0)
12:8/0/physics_layer_0/angular_velocity = 0.0
12:8/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
13:8/0 = 0
13:8/0/physics_layer_0/linear_velocity = Vector2(0, 0)
13:8/0/physics_layer_0/angular_velocity = 0.0
13:8/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
14:8/0 = 0
14:8/0/physics_layer_0/linear_velocity = Vector2(0, 0)
14:8/0/physics_layer_0/angular_velocity = 0.0
14:8/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
15:8/0 = 0
15:8/0/physics_layer_0/linear_velocity = Vector2(0, 0)
15:8/0/physics_layer_0/angular_velocity = 0.0
15:8/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
16:8/0 = 0
16:8/0/physics_layer_0/linear_velocity = Vector2(0, 0)
16:8/0/physics_layer_0/angular_velocity = 0.0
16:8/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
17:8/0 = 0
17:8/0/physics_layer_0/linear_velocity = Vector2(0, 0)
17:8/0/physics_layer_0/angular_velocity = 0.0
17:8/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
18:8/0 = 0
18:8/0/physics_layer_0/linear_velocity = Vector2(0, 0)
18:8/0/physics_layer_0/angular_velocity = 0.0
18:8/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
19:8/0 = 0
19:8/0/physics_layer_0/linear_velocity = Vector2(0, 0)
19:8/0/physics_layer_0/angular_velocity = 0.0
19:8/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
20:8/0 = 0
20:8/0/physics_layer_0/linear_velocity = Vector2(0, 0)
20:8/0/physics_layer_0/angular_velocity = 0.0
20:8/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
21:8/0 = 0
21:8/0/physics_layer_0/linear_velocity = Vector2(0, 0)
21:8/0/physics_layer_0/angular_velocity = 0.0
21:8/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
22:8/0 = 0
22:8/0/physics_layer_0/linear_velocity = Vector2(0, 0)
22:8/0/physics_layer_0/angular_velocity = 0.0
22:8/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
23:8/0 = 0
23:8/0/physics_layer_0/linear_velocity = Vector2(0, 0)
23:8/0/physics_layer_0/angular_velocity = 0.0
23:8/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
24:8/0 = 0
24:8/0/physics_layer_0/linear_velocity = Vector2(0, 0)
24:8/0/physics_layer_0/angular_velocity = 0.0
24:8/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
28:8/0 = 0
28:8/0/physics_layer_0/linear_velocity = Vector2(0, 0)
28:8/0/physics_layer_0/angular_velocity = 0.0
28:8/0/physics_layer_0/polygon_0/points = PackedVector2Array(8, 2.5, 8, 8, -8, 8)
29:8/0 = 0
29:8/0/physics_layer_0/linear_velocity = Vector2(0, 0)
29:8/0/physics_layer_0/angular_velocity = 0.0
29:8/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, 2.5, 8, -3, 8, 8, -8, 8)
30:8/0 = 0
30:8/0/physics_layer_0/linear_velocity = Vector2(0, 0)
30:8/0/physics_layer_0/angular_velocity = 0.0
30:8/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -3.5, 8, -8, 8, 8, -8, 8)
31:8/0 = 0
31:8/0/physics_layer_0/linear_velocity = Vector2(0, 0)
31:8/0/physics_layer_0/angular_velocity = 0.0
31:8/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
32:8/0 = 0
32:8/0/physics_layer_0/linear_velocity = Vector2(0, 0)
32:8/0/physics_layer_0/angular_velocity = 0.0
32:8/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
33:8/0 = 0
33:8/0/physics_layer_0/linear_velocity = Vector2(0, 0)
33:8/0/physics_layer_0/angular_velocity = 0.0
33:8/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
34:8/0 = 0
34:8/0/physics_layer_0/linear_velocity = Vector2(0, 0)
34:8/0/physics_layer_0/angular_velocity = 0.0
34:8/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
35:8/0 = 0
35:8/0/physics_layer_0/linear_velocity = Vector2(0, 0)
35:8/0/physics_layer_0/angular_velocity = 0.0
35:8/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
36:8/0 = 0
36:8/0/physics_layer_0/linear_velocity = Vector2(0, 0)
36:8/0/physics_layer_0/angular_velocity = 0.0
36:8/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
37:8/0 = 0
37:8/0/physics_layer_0/linear_velocity = Vector2(0, 0)
37:8/0/physics_layer_0/angular_velocity = 0.0
37:8/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -2.5, 8, 8, -8, 8)
38:8/0 = 0
38:8/0/physics_layer_0/linear_velocity = Vector2(0, 0)
38:8/0/physics_layer_0/angular_velocity = 0.0
38:8/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -3, 8, 2.5, 8, 8, -8, 8)
39:8/0 = 0
39:8/0/physics_layer_0/linear_velocity = Vector2(0, 0)
39:8/0/physics_layer_0/angular_velocity = 0.0
39:8/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, 2, 8, 8, 8, 8, -8, 8)
43:8/0 = 0
43:8/0/physics_layer_0/linear_velocity = Vector2(0, 0)
43:8/0/physics_layer_0/angular_velocity = 0.0
44:8/0 = 0
44:8/0/physics_layer_0/linear_velocity = Vector2(0, 0)
44:8/0/physics_layer_0/angular_velocity = 0.0
45:8/0 = 0
45:8/0/physics_layer_0/linear_velocity = Vector2(0, 0)
45:8/0/physics_layer_0/angular_velocity = 0.0
46:8/0 = 0
46:8/0/physics_layer_0/linear_velocity = Vector2(0, 0)
46:8/0/physics_layer_0/angular_velocity = 0.0
47:8/0 = 0
47:8/0/physics_layer_0/linear_velocity = Vector2(0, 0)
47:8/0/physics_layer_0/angular_velocity = 0.0
48:8/0 = 0
48:8/0/physics_layer_0/linear_velocity = Vector2(0, 0)
48:8/0/physics_layer_0/angular_velocity = 0.0
49:8/0 = 0
49:8/0/physics_layer_0/linear_velocity = Vector2(0, 0)
49:8/0/physics_layer_0/angular_velocity = 0.0
50:8/0 = 0
50:8/0/physics_layer_0/linear_velocity = Vector2(0, 0)
50:8/0/physics_layer_0/angular_velocity = 0.0
51:8/0 = 0
51:8/0/physics_layer_0/linear_velocity = Vector2(0, 0)
51:8/0/physics_layer_0/angular_velocity = 0.0
52:8/0 = 0
52:8/0/physics_layer_0/linear_velocity = Vector2(0, 0)
52:8/0/physics_layer_0/angular_velocity = 0.0
53:8/0 = 0
53:8/0/physics_layer_0/linear_velocity = Vector2(0, 0)
53:8/0/physics_layer_0/angular_velocity = 0.0
54:8/0 = 0
54:8/0/physics_layer_0/linear_velocity = Vector2(0, 0)
54:8/0/physics_layer_0/angular_velocity = 0.0
55:8/0 = 0
55:8/0/physics_layer_0/linear_velocity = Vector2(0, 0)
55:8/0/physics_layer_0/angular_velocity = 0.0
55:8/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
56:8/0 = 0
56:8/0/physics_layer_0/linear_velocity = Vector2(0, 0)
56:8/0/physics_layer_0/angular_velocity = 0.0
56:8/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
57:8/0 = 0
57:8/0/physics_layer_0/linear_velocity = Vector2(0, 0)
57:8/0/physics_layer_0/angular_velocity = 0.0
57:8/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
1:9/0 = 0
1:9/0/physics_layer_0/linear_velocity = Vector2(0, 0)
1:9/0/physics_layer_0/angular_velocity = 0.0
1:9/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
2:9/0 = 0
2:9/0/physics_layer_0/linear_velocity = Vector2(0, 0)
2:9/0/physics_layer_0/angular_velocity = 0.0
2:9/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
3:9/0 = 0
3:9/0/physics_layer_0/linear_velocity = Vector2(0, 0)
3:9/0/physics_layer_0/angular_velocity = 0.0
3:9/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
4:9/0 = 0
4:9/0/physics_layer_0/linear_velocity = Vector2(0, 0)
4:9/0/physics_layer_0/angular_velocity = 0.0
4:9/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
5:9/0 = 0
5:9/0/physics_layer_0/linear_velocity = Vector2(0, 0)
5:9/0/physics_layer_0/angular_velocity = 0.0
5:9/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
6:9/0 = 0
6:9/0/physics_layer_0/linear_velocity = Vector2(0, 0)
6:9/0/physics_layer_0/angular_velocity = 0.0
6:9/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
7:9/0 = 0
7:9/0/physics_layer_0/linear_velocity = Vector2(0, 0)
7:9/0/physics_layer_0/angular_velocity = 0.0
7:9/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
8:9/0 = 0
8:9/0/physics_layer_0/linear_velocity = Vector2(0, 0)
8:9/0/physics_layer_0/angular_velocity = 0.0
8:9/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
9:9/0 = 0
9:9/0/physics_layer_0/linear_velocity = Vector2(0, 0)
9:9/0/physics_layer_0/angular_velocity = 0.0
9:9/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
10:9/0 = 0
10:9/0/physics_layer_0/linear_velocity = Vector2(0, 0)
10:9/0/physics_layer_0/angular_velocity = 0.0
10:9/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
11:9/0 = 0
11:9/0/physics_layer_0/linear_velocity = Vector2(0, 0)
11:9/0/physics_layer_0/angular_velocity = 0.0
11:9/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
12:9/0 = 0
12:9/0/physics_layer_0/linear_velocity = Vector2(0, 0)
12:9/0/physics_layer_0/angular_velocity = 0.0
12:9/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
13:9/0 = 0
13:9/0/physics_layer_0/linear_velocity = Vector2(0, 0)
13:9/0/physics_layer_0/angular_velocity = 0.0
13:9/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
14:9/0 = 0
14:9/0/physics_layer_0/linear_velocity = Vector2(0, 0)
14:9/0/physics_layer_0/angular_velocity = 0.0
14:9/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
15:9/0 = 0
15:9/0/physics_layer_0/linear_velocity = Vector2(0, 0)
15:9/0/physics_layer_0/angular_velocity = 0.0
15:9/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
16:9/0 = 0
16:9/0/physics_layer_0/linear_velocity = Vector2(0, 0)
16:9/0/physics_layer_0/angular_velocity = 0.0
16:9/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
17:9/0 = 0
17:9/0/physics_layer_0/linear_velocity = Vector2(0, 0)
17:9/0/physics_layer_0/angular_velocity = 0.0
17:9/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
18:9/0 = 0
18:9/0/physics_layer_0/linear_velocity = Vector2(0, 0)
18:9/0/physics_layer_0/angular_velocity = 0.0
18:9/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
19:9/0 = 0
19:9/0/physics_layer_0/linear_velocity = Vector2(0, 0)
19:9/0/physics_layer_0/angular_velocity = 0.0
19:9/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
20:9/0 = 0
20:9/0/physics_layer_0/linear_velocity = Vector2(0, 0)
20:9/0/physics_layer_0/angular_velocity = 0.0
20:9/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
21:9/0 = 0
21:9/0/physics_layer_0/linear_velocity = Vector2(0, 0)
21:9/0/physics_layer_0/angular_velocity = 0.0
21:9/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
22:9/0 = 0
22:9/0/physics_layer_0/linear_velocity = Vector2(0, 0)
22:9/0/physics_layer_0/angular_velocity = 0.0
22:9/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
23:9/0 = 0
23:9/0/physics_layer_0/linear_velocity = Vector2(0, 0)
23:9/0/physics_layer_0/angular_velocity = 0.0
23:9/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
24:9/0 = 0
24:9/0/physics_layer_0/linear_velocity = Vector2(0, 0)
24:9/0/physics_layer_0/angular_velocity = 0.0
24:9/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
25:9/0 = 0
25:9/0/physics_layer_0/linear_velocity = Vector2(0, 0)
25:9/0/physics_layer_0/angular_velocity = 0.0
25:9/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, 8, 8, 2.5, 8, 8, -8, 8)
26:9/0 = 0
26:9/0/physics_layer_0/linear_velocity = Vector2(0, 0)
26:9/0/physics_layer_0/angular_velocity = 0.0
26:9/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, 2.5, 8, -3, 8, 8, -8, 8)
27:9/0 = 0
27:9/0/physics_layer_0/linear_velocity = Vector2(0, 0)
27:9/0/physics_layer_0/angular_velocity = 0.0
27:9/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -3.5, 8, -8, 8, 8, -8, 8)
28:9/0 = 0
28:9/0/physics_layer_0/linear_velocity = Vector2(0, 0)
28:9/0/physics_layer_0/angular_velocity = 0.0
28:9/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
29:9/0 = 0
29:9/0/physics_layer_0/linear_velocity = Vector2(0, 0)
29:9/0/physics_layer_0/angular_velocity = 0.0
29:9/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
30:9/0 = 0
30:9/0/physics_layer_0/linear_velocity = Vector2(0, 0)
30:9/0/physics_layer_0/angular_velocity = 0.0
30:9/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
31:9/0 = 0
31:9/0/physics_layer_0/linear_velocity = Vector2(0, 0)
31:9/0/physics_layer_0/angular_velocity = 0.0
31:9/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
32:9/0 = 0
32:9/0/physics_layer_0/linear_velocity = Vector2(0, 0)
32:9/0/physics_layer_0/angular_velocity = 0.0
32:9/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
33:9/0 = 0
33:9/0/physics_layer_0/linear_velocity = Vector2(0, 0)
33:9/0/physics_layer_0/angular_velocity = 0.0
33:9/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
34:9/0 = 0
34:9/0/physics_layer_0/linear_velocity = Vector2(0, 0)
34:9/0/physics_layer_0/angular_velocity = 0.0
34:9/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
35:9/0 = 0
35:9/0/physics_layer_0/linear_velocity = Vector2(0, 0)
35:9/0/physics_layer_0/angular_velocity = 0.0
35:9/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
36:9/0 = 0
36:9/0/physics_layer_0/linear_velocity = Vector2(0, 0)
36:9/0/physics_layer_0/angular_velocity = 0.0
36:9/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
37:9/0 = 0
37:9/0/physics_layer_0/linear_velocity = Vector2(0, 0)
37:9/0/physics_layer_0/angular_velocity = 0.0
37:9/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
38:9/0 = 0
38:9/0/physics_layer_0/linear_velocity = Vector2(0, 0)
38:9/0/physics_layer_0/angular_velocity = 0.0
38:9/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
39:9/0 = 0
39:9/0/physics_layer_0/linear_velocity = Vector2(0, 0)
39:9/0/physics_layer_0/angular_velocity = 0.0
39:9/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -6, 8, 8, -8, 8)
40:9/0 = 0
40:9/0/physics_layer_0/linear_velocity = Vector2(0, 0)
40:9/0/physics_layer_0/angular_velocity = 0.0
40:9/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -3, 8, 8, -8, 8)
41:9/0 = 0
41:9/0/physics_layer_0/linear_velocity = Vector2(0, 0)
41:9/0/physics_layer_0/angular_velocity = 0.0
41:9/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -3, 8, 2.5, 8, 8, -8, 8)
42:9/0 = 0
42:9/0/physics_layer_0/linear_velocity = Vector2(0, 0)
42:9/0/physics_layer_0/angular_velocity = 0.0
42:9/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, 2, 8, 8, 8, 8, -8, 8)
43:9/0 = 0
43:9/0/physics_layer_0/linear_velocity = Vector2(0, 0)
43:9/0/physics_layer_0/angular_velocity = 0.0
44:9/0 = 0
44:9/0/physics_layer_0/linear_velocity = Vector2(0, 0)
44:9/0/physics_layer_0/angular_velocity = 0.0
45:9/0 = 0
45:9/0/physics_layer_0/linear_velocity = Vector2(0, 0)
45:9/0/physics_layer_0/angular_velocity = 0.0
46:9/0 = 0
46:9/0/physics_layer_0/linear_velocity = Vector2(0, 0)
46:9/0/physics_layer_0/angular_velocity = 0.0
47:9/0 = 0
47:9/0/physics_layer_0/linear_velocity = Vector2(0, 0)
47:9/0/physics_layer_0/angular_velocity = 0.0
48:9/0 = 0
48:9/0/physics_layer_0/linear_velocity = Vector2(0, 0)
48:9/0/physics_layer_0/angular_velocity = 0.0
49:9/0 = 0
49:9/0/physics_layer_0/linear_velocity = Vector2(0, 0)
49:9/0/physics_layer_0/angular_velocity = 0.0
50:9/0 = 0
50:9/0/physics_layer_0/linear_velocity = Vector2(0, 0)
50:9/0/physics_layer_0/angular_velocity = 0.0
51:9/0 = 0
51:9/0/physics_layer_0/linear_velocity = Vector2(0, 0)
51:9/0/physics_layer_0/angular_velocity = 0.0
52:9/0 = 0
52:9/0/physics_layer_0/linear_velocity = Vector2(0, 0)
52:9/0/physics_layer_0/angular_velocity = 0.0
53:9/0 = 0
53:9/0/physics_layer_0/linear_velocity = Vector2(0, 0)
53:9/0/physics_layer_0/angular_velocity = 0.0
54:9/0 = 0
54:9/0/physics_layer_0/linear_velocity = Vector2(0, 0)
54:9/0/physics_layer_0/angular_velocity = 0.0
55:9/0 = 0
55:9/0/physics_layer_0/linear_velocity = Vector2(0, 0)
55:9/0/physics_layer_0/angular_velocity = 0.0
55:9/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
56:9/0 = 0
56:9/0/physics_layer_0/linear_velocity = Vector2(0, 0)
56:9/0/physics_layer_0/angular_velocity = 0.0
56:9/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
57:9/0 = 0
57:9/0/physics_layer_0/linear_velocity = Vector2(0, 0)
57:9/0/physics_layer_0/angular_velocity = 0.0
57:9/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
1:10/0 = 0
1:10/0/physics_layer_0/linear_velocity = Vector2(0, 0)
1:10/0/physics_layer_0/angular_velocity = 0.0
1:10/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
2:10/0 = 0
2:10/0/physics_layer_0/linear_velocity = Vector2(0, 0)
2:10/0/physics_layer_0/angular_velocity = 0.0
2:10/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
3:10/0 = 0
3:10/0/physics_layer_0/linear_velocity = Vector2(0, 0)
3:10/0/physics_layer_0/angular_velocity = 0.0
3:10/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
4:10/0 = 0
4:10/0/physics_layer_0/linear_velocity = Vector2(0, 0)
4:10/0/physics_layer_0/angular_velocity = 0.0
4:10/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
5:10/0 = 0
5:10/0/physics_layer_0/linear_velocity = Vector2(0, 0)
5:10/0/physics_layer_0/angular_velocity = 0.0
5:10/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
6:10/0 = 0
6:10/0/physics_layer_0/linear_velocity = Vector2(0, 0)
6:10/0/physics_layer_0/angular_velocity = 0.0
6:10/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
7:10/0 = 0
7:10/0/physics_layer_0/linear_velocity = Vector2(0, 0)
7:10/0/physics_layer_0/angular_velocity = 0.0
7:10/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
8:10/0 = 0
8:10/0/physics_layer_0/linear_velocity = Vector2(0, 0)
8:10/0/physics_layer_0/angular_velocity = 0.0
8:10/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
9:10/0 = 0
9:10/0/physics_layer_0/linear_velocity = Vector2(0, 0)
9:10/0/physics_layer_0/angular_velocity = 0.0
9:10/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
10:10/0 = 0
10:10/0/physics_layer_0/linear_velocity = Vector2(0, 0)
10:10/0/physics_layer_0/angular_velocity = 0.0
10:10/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
11:10/0 = 0
11:10/0/physics_layer_0/linear_velocity = Vector2(0, 0)
11:10/0/physics_layer_0/angular_velocity = 0.0
11:10/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
12:10/0 = 0
12:10/0/physics_layer_0/linear_velocity = Vector2(0, 0)
12:10/0/physics_layer_0/angular_velocity = 0.0
12:10/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
13:10/0 = 0
13:10/0/physics_layer_0/linear_velocity = Vector2(0, 0)
13:10/0/physics_layer_0/angular_velocity = 0.0
13:10/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
14:10/0 = 0
14:10/0/physics_layer_0/linear_velocity = Vector2(0, 0)
14:10/0/physics_layer_0/angular_velocity = 0.0
14:10/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
15:10/0 = 0
15:10/0/physics_layer_0/linear_velocity = Vector2(0, 0)
15:10/0/physics_layer_0/angular_velocity = 0.0
15:10/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
16:10/0 = 0
16:10/0/physics_layer_0/linear_velocity = Vector2(0, 0)
16:10/0/physics_layer_0/angular_velocity = 0.0
16:10/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
17:10/0 = 0
17:10/0/physics_layer_0/linear_velocity = Vector2(0, 0)
17:10/0/physics_layer_0/angular_velocity = 0.0
17:10/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
18:10/0 = 0
18:10/0/physics_layer_0/linear_velocity = Vector2(0, 0)
18:10/0/physics_layer_0/angular_velocity = 0.0
18:10/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
19:10/0 = 0
19:10/0/physics_layer_0/linear_velocity = Vector2(0, 0)
19:10/0/physics_layer_0/angular_velocity = 0.0
19:10/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
20:10/0 = 0
20:10/0/physics_layer_0/linear_velocity = Vector2(0, 0)
20:10/0/physics_layer_0/angular_velocity = 0.0
20:10/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
21:10/0 = 0
21:10/0/physics_layer_0/linear_velocity = Vector2(0, 0)
21:10/0/physics_layer_0/angular_velocity = 0.0
21:10/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
22:10/0 = 0
22:10/0/physics_layer_0/linear_velocity = Vector2(0, 0)
22:10/0/physics_layer_0/angular_velocity = 0.0
22:10/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
23:10/0 = 0
23:10/0/physics_layer_0/linear_velocity = Vector2(0, 0)
23:10/0/physics_layer_0/angular_velocity = 0.0
23:10/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
24:10/0 = 0
24:10/0/physics_layer_0/linear_velocity = Vector2(0, 0)
24:10/0/physics_layer_0/angular_velocity = 0.0
24:10/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
25:10/0 = 0
25:10/0/physics_layer_0/linear_velocity = Vector2(0, 0)
25:10/0/physics_layer_0/angular_velocity = 0.0
25:10/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
26:10/0 = 0
26:10/0/physics_layer_0/linear_velocity = Vector2(0, 0)
26:10/0/physics_layer_0/angular_velocity = 0.0
26:10/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
27:10/0 = 0
27:10/0/physics_layer_0/linear_velocity = Vector2(0, 0)
27:10/0/physics_layer_0/angular_velocity = 0.0
27:10/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
28:10/0 = 0
28:10/0/physics_layer_0/linear_velocity = Vector2(0, 0)
28:10/0/physics_layer_0/angular_velocity = 0.0
28:10/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
29:10/0 = 0
29:10/0/physics_layer_0/linear_velocity = Vector2(0, 0)
29:10/0/physics_layer_0/angular_velocity = 0.0
29:10/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
30:10/0 = 0
30:10/0/physics_layer_0/linear_velocity = Vector2(0, 0)
30:10/0/physics_layer_0/angular_velocity = 0.0
30:10/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
31:10/0 = 0
31:10/0/physics_layer_0/linear_velocity = Vector2(0, 0)
31:10/0/physics_layer_0/angular_velocity = 0.0
31:10/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
32:10/0 = 0
32:10/0/physics_layer_0/linear_velocity = Vector2(0, 0)
32:10/0/physics_layer_0/angular_velocity = 0.0
32:10/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
33:10/0 = 0
33:10/0/physics_layer_0/linear_velocity = Vector2(0, 0)
33:10/0/physics_layer_0/angular_velocity = 0.0
33:10/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
34:10/0 = 0
34:10/0/physics_layer_0/linear_velocity = Vector2(0, 0)
34:10/0/physics_layer_0/angular_velocity = 0.0
34:10/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
35:10/0 = 0
35:10/0/physics_layer_0/linear_velocity = Vector2(0, 0)
35:10/0/physics_layer_0/angular_velocity = 0.0
35:10/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
36:10/0 = 0
36:10/0/physics_layer_0/linear_velocity = Vector2(0, 0)
36:10/0/physics_layer_0/angular_velocity = 0.0
36:10/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
37:10/0 = 0
37:10/0/physics_layer_0/linear_velocity = Vector2(0, 0)
37:10/0/physics_layer_0/angular_velocity = 0.0
37:10/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
38:10/0 = 0
38:10/0/physics_layer_0/linear_velocity = Vector2(0, 0)
38:10/0/physics_layer_0/angular_velocity = 0.0
38:10/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
39:10/0 = 0
39:10/0/physics_layer_0/linear_velocity = Vector2(0, 0)
39:10/0/physics_layer_0/angular_velocity = 0.0
39:10/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
40:10/0 = 0
40:10/0/physics_layer_0/linear_velocity = Vector2(0, 0)
40:10/0/physics_layer_0/angular_velocity = 0.0
40:10/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
41:10/0 = 0
41:10/0/physics_layer_0/linear_velocity = Vector2(0, 0)
41:10/0/physics_layer_0/angular_velocity = 0.0
41:10/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
42:10/0 = 0
42:10/0/physics_layer_0/linear_velocity = Vector2(0, 0)
42:10/0/physics_layer_0/angular_velocity = 0.0
42:10/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
43:10/0 = 0
43:10/0/physics_layer_0/linear_velocity = Vector2(0, 0)
43:10/0/physics_layer_0/angular_velocity = 0.0
44:10/0 = 0
44:10/0/physics_layer_0/linear_velocity = Vector2(0, 0)
44:10/0/physics_layer_0/angular_velocity = 0.0
45:10/0 = 0
45:10/0/physics_layer_0/linear_velocity = Vector2(0, 0)
45:10/0/physics_layer_0/angular_velocity = 0.0
46:10/0 = 0
46:10/0/physics_layer_0/linear_velocity = Vector2(0, 0)
46:10/0/physics_layer_0/angular_velocity = 0.0
47:10/0 = 0
47:10/0/physics_layer_0/linear_velocity = Vector2(0, 0)
47:10/0/physics_layer_0/angular_velocity = 0.0
48:10/0 = 0
48:10/0/physics_layer_0/linear_velocity = Vector2(0, 0)
48:10/0/physics_layer_0/angular_velocity = 0.0
49:10/0 = 0
49:10/0/physics_layer_0/linear_velocity = Vector2(0, 0)
49:10/0/physics_layer_0/angular_velocity = 0.0
50:10/0 = 0
50:10/0/physics_layer_0/linear_velocity = Vector2(0, 0)
50:10/0/physics_layer_0/angular_velocity = 0.0
51:10/0 = 0
51:10/0/physics_layer_0/linear_velocity = Vector2(0, 0)
51:10/0/physics_layer_0/angular_velocity = 0.0
52:10/0 = 0
52:10/0/physics_layer_0/linear_velocity = Vector2(0, 0)
52:10/0/physics_layer_0/angular_velocity = 0.0
53:10/0 = 0
53:10/0/physics_layer_0/linear_velocity = Vector2(0, 0)
53:10/0/physics_layer_0/angular_velocity = 0.0
54:10/0 = 0
54:10/0/physics_layer_0/linear_velocity = Vector2(0, 0)
54:10/0/physics_layer_0/angular_velocity = 0.0
55:10/0 = 0
55:10/0/physics_layer_0/linear_velocity = Vector2(0, 0)
55:10/0/physics_layer_0/angular_velocity = 0.0
56:10/0 = 0
56:10/0/physics_layer_0/linear_velocity = Vector2(0, 0)
56:10/0/physics_layer_0/angular_velocity = 0.0
57:10/0 = 0
57:10/0/physics_layer_0/linear_velocity = Vector2(0, 0)
57:10/0/physics_layer_0/angular_velocity = 0.0
58:10/0 = 0
58:10/0/physics_layer_0/linear_velocity = Vector2(0, 0)
58:10/0/physics_layer_0/angular_velocity = 0.0
58:10/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
59:10/0 = 0
59:10/0/physics_layer_0/linear_velocity = Vector2(0, 0)
59:10/0/physics_layer_0/angular_velocity = 0.0
59:10/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
60:10/0 = 0
60:10/0/physics_layer_0/linear_velocity = Vector2(0, 0)
60:10/0/physics_layer_0/angular_velocity = 0.0
60:10/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
61:10/0 = 0
61:10/0/physics_layer_0/linear_velocity = Vector2(0, 0)
61:10/0/physics_layer_0/angular_velocity = 0.0
61:10/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
62:10/0 = 0
62:10/0/physics_layer_0/linear_velocity = Vector2(0, 0)
62:10/0/physics_layer_0/angular_velocity = 0.0
62:10/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
63:10/0 = 0
63:10/0/physics_layer_0/linear_velocity = Vector2(0, 0)
63:10/0/physics_layer_0/angular_velocity = 0.0
63:10/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
64:10/0 = 0
64:10/0/physics_layer_0/linear_velocity = Vector2(0, 0)
64:10/0/physics_layer_0/angular_velocity = 0.0
64:10/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
65:10/0 = 0
65:10/0/physics_layer_0/linear_velocity = Vector2(0, 0)
65:10/0/physics_layer_0/angular_velocity = 0.0
65:10/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
66:10/0 = 0
66:10/0/physics_layer_0/linear_velocity = Vector2(0, 0)
66:10/0/physics_layer_0/angular_velocity = 0.0
66:10/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
1:11/0 = 0
1:11/0/physics_layer_0/linear_velocity = Vector2(0, 0)
1:11/0/physics_layer_0/angular_velocity = 0.0
1:11/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
2:11/0 = 0
2:11/0/physics_layer_0/linear_velocity = Vector2(0, 0)
2:11/0/physics_layer_0/angular_velocity = 0.0
2:11/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
3:11/0 = 0
3:11/0/physics_layer_0/linear_velocity = Vector2(0, 0)
3:11/0/physics_layer_0/angular_velocity = 0.0
3:11/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
4:11/0 = 0
4:11/0/physics_layer_0/linear_velocity = Vector2(0, 0)
4:11/0/physics_layer_0/angular_velocity = 0.0
4:11/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
5:11/0 = 0
5:11/0/physics_layer_0/linear_velocity = Vector2(0, 0)
5:11/0/physics_layer_0/angular_velocity = 0.0
5:11/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
6:11/0 = 0
6:11/0/physics_layer_0/linear_velocity = Vector2(0, 0)
6:11/0/physics_layer_0/angular_velocity = 0.0
6:11/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
7:11/0 = 0
7:11/0/physics_layer_0/linear_velocity = Vector2(0, 0)
7:11/0/physics_layer_0/angular_velocity = 0.0
7:11/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
8:11/0 = 0
8:11/0/physics_layer_0/linear_velocity = Vector2(0, 0)
8:11/0/physics_layer_0/angular_velocity = 0.0
8:11/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
9:11/0 = 0
9:11/0/physics_layer_0/linear_velocity = Vector2(0, 0)
9:11/0/physics_layer_0/angular_velocity = 0.0
9:11/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
10:11/0 = 0
10:11/0/physics_layer_0/linear_velocity = Vector2(0, 0)
10:11/0/physics_layer_0/angular_velocity = 0.0
10:11/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
11:11/0 = 0
11:11/0/physics_layer_0/linear_velocity = Vector2(0, 0)
11:11/0/physics_layer_0/angular_velocity = 0.0
11:11/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
12:11/0 = 0
12:11/0/physics_layer_0/linear_velocity = Vector2(0, 0)
12:11/0/physics_layer_0/angular_velocity = 0.0
12:11/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
13:11/0 = 0
13:11/0/physics_layer_0/linear_velocity = Vector2(0, 0)
13:11/0/physics_layer_0/angular_velocity = 0.0
13:11/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
14:11/0 = 0
14:11/0/physics_layer_0/linear_velocity = Vector2(0, 0)
14:11/0/physics_layer_0/angular_velocity = 0.0
14:11/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
15:11/0 = 0
15:11/0/physics_layer_0/linear_velocity = Vector2(0, 0)
15:11/0/physics_layer_0/angular_velocity = 0.0
15:11/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
16:11/0 = 0
16:11/0/physics_layer_0/linear_velocity = Vector2(0, 0)
16:11/0/physics_layer_0/angular_velocity = 0.0
16:11/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
17:11/0 = 0
17:11/0/physics_layer_0/linear_velocity = Vector2(0, 0)
17:11/0/physics_layer_0/angular_velocity = 0.0
17:11/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
18:11/0 = 0
18:11/0/physics_layer_0/linear_velocity = Vector2(0, 0)
18:11/0/physics_layer_0/angular_velocity = 0.0
18:11/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
19:11/0 = 0
19:11/0/physics_layer_0/linear_velocity = Vector2(0, 0)
19:11/0/physics_layer_0/angular_velocity = 0.0
19:11/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
20:11/0 = 0
20:11/0/physics_layer_0/linear_velocity = Vector2(0, 0)
20:11/0/physics_layer_0/angular_velocity = 0.0
20:11/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
21:11/0 = 0
21:11/0/physics_layer_0/linear_velocity = Vector2(0, 0)
21:11/0/physics_layer_0/angular_velocity = 0.0
21:11/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
22:11/0 = 0
22:11/0/physics_layer_0/linear_velocity = Vector2(0, 0)
22:11/0/physics_layer_0/angular_velocity = 0.0
22:11/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
23:11/0 = 0
23:11/0/physics_layer_0/linear_velocity = Vector2(0, 0)
23:11/0/physics_layer_0/angular_velocity = 0.0
23:11/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
24:11/0 = 0
24:11/0/physics_layer_0/linear_velocity = Vector2(0, 0)
24:11/0/physics_layer_0/angular_velocity = 0.0
24:11/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
25:11/0 = 0
25:11/0/physics_layer_0/linear_velocity = Vector2(0, 0)
25:11/0/physics_layer_0/angular_velocity = 0.0
25:11/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
26:11/0 = 0
26:11/0/physics_layer_0/linear_velocity = Vector2(0, 0)
26:11/0/physics_layer_0/angular_velocity = 0.0
26:11/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
27:11/0 = 0
27:11/0/physics_layer_0/linear_velocity = Vector2(0, 0)
27:11/0/physics_layer_0/angular_velocity = 0.0
27:11/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
28:11/0 = 0
28:11/0/physics_layer_0/linear_velocity = Vector2(0, 0)
28:11/0/physics_layer_0/angular_velocity = 0.0
28:11/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
29:11/0 = 0
29:11/0/physics_layer_0/linear_velocity = Vector2(0, 0)
29:11/0/physics_layer_0/angular_velocity = 0.0
29:11/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
30:11/0 = 0
30:11/0/physics_layer_0/linear_velocity = Vector2(0, 0)
30:11/0/physics_layer_0/angular_velocity = 0.0
30:11/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
31:11/0 = 0
31:11/0/physics_layer_0/linear_velocity = Vector2(0, 0)
31:11/0/physics_layer_0/angular_velocity = 0.0
31:11/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
32:11/0 = 0
32:11/0/physics_layer_0/linear_velocity = Vector2(0, 0)
32:11/0/physics_layer_0/angular_velocity = 0.0
32:11/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
33:11/0 = 0
33:11/0/physics_layer_0/linear_velocity = Vector2(0, 0)
33:11/0/physics_layer_0/angular_velocity = 0.0
33:11/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
34:11/0 = 0
34:11/0/physics_layer_0/linear_velocity = Vector2(0, 0)
34:11/0/physics_layer_0/angular_velocity = 0.0
34:11/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
35:11/0 = 0
35:11/0/physics_layer_0/linear_velocity = Vector2(0, 0)
35:11/0/physics_layer_0/angular_velocity = 0.0
35:11/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
36:11/0 = 0
36:11/0/physics_layer_0/linear_velocity = Vector2(0, 0)
36:11/0/physics_layer_0/angular_velocity = 0.0
36:11/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
37:11/0 = 0
37:11/0/physics_layer_0/linear_velocity = Vector2(0, 0)
37:11/0/physics_layer_0/angular_velocity = 0.0
37:11/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
38:11/0 = 0
38:11/0/physics_layer_0/linear_velocity = Vector2(0, 0)
38:11/0/physics_layer_0/angular_velocity = 0.0
38:11/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
39:11/0 = 0
39:11/0/physics_layer_0/linear_velocity = Vector2(0, 0)
39:11/0/physics_layer_0/angular_velocity = 0.0
39:11/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
40:11/0 = 0
40:11/0/physics_layer_0/linear_velocity = Vector2(0, 0)
40:11/0/physics_layer_0/angular_velocity = 0.0
40:11/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
41:11/0 = 0
41:11/0/physics_layer_0/linear_velocity = Vector2(0, 0)
41:11/0/physics_layer_0/angular_velocity = 0.0
41:11/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
42:11/0 = 0
42:11/0/physics_layer_0/linear_velocity = Vector2(0, 0)
42:11/0/physics_layer_0/angular_velocity = 0.0
42:11/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
43:11/0 = 0
43:11/0/physics_layer_0/linear_velocity = Vector2(0, 0)
43:11/0/physics_layer_0/angular_velocity = 0.0
44:11/0 = 0
44:11/0/physics_layer_0/linear_velocity = Vector2(0, 0)
44:11/0/physics_layer_0/angular_velocity = 0.0
45:11/0 = 0
45:11/0/physics_layer_0/linear_velocity = Vector2(0, 0)
45:11/0/physics_layer_0/angular_velocity = 0.0
46:11/0 = 0
46:11/0/physics_layer_0/linear_velocity = Vector2(0, 0)
46:11/0/physics_layer_0/angular_velocity = 0.0
47:11/0 = 0
47:11/0/physics_layer_0/linear_velocity = Vector2(0, 0)
47:11/0/physics_layer_0/angular_velocity = 0.0
48:11/0 = 0
48:11/0/physics_layer_0/linear_velocity = Vector2(0, 0)
48:11/0/physics_layer_0/angular_velocity = 0.0
49:11/0 = 0
49:11/0/physics_layer_0/linear_velocity = Vector2(0, 0)
49:11/0/physics_layer_0/angular_velocity = 0.0
50:11/0 = 0
50:11/0/physics_layer_0/linear_velocity = Vector2(0, 0)
50:11/0/physics_layer_0/angular_velocity = 0.0
51:11/0 = 0
51:11/0/physics_layer_0/linear_velocity = Vector2(0, 0)
51:11/0/physics_layer_0/angular_velocity = 0.0
52:11/0 = 0
52:11/0/physics_layer_0/linear_velocity = Vector2(0, 0)
52:11/0/physics_layer_0/angular_velocity = 0.0
53:11/0 = 0
53:11/0/physics_layer_0/linear_velocity = Vector2(0, 0)
53:11/0/physics_layer_0/angular_velocity = 0.0
54:11/0 = 0
54:11/0/physics_layer_0/linear_velocity = Vector2(0, 0)
54:11/0/physics_layer_0/angular_velocity = 0.0
55:11/0 = 0
55:11/0/physics_layer_0/linear_velocity = Vector2(0, 0)
55:11/0/physics_layer_0/angular_velocity = 0.0
56:11/0 = 0
56:11/0/physics_layer_0/linear_velocity = Vector2(0, 0)
56:11/0/physics_layer_0/angular_velocity = 0.0
57:11/0 = 0
57:11/0/physics_layer_0/linear_velocity = Vector2(0, 0)
57:11/0/physics_layer_0/angular_velocity = 0.0
58:11/0 = 0
58:11/0/physics_layer_0/linear_velocity = Vector2(0, 0)
58:11/0/physics_layer_0/angular_velocity = 0.0
58:11/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
59:11/0 = 0
59:11/0/physics_layer_0/linear_velocity = Vector2(0, 0)
59:11/0/physics_layer_0/angular_velocity = 0.0
59:11/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
60:11/0 = 0
60:11/0/physics_layer_0/linear_velocity = Vector2(0, 0)
60:11/0/physics_layer_0/angular_velocity = 0.0
60:11/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
61:11/0 = 0
61:11/0/physics_layer_0/linear_velocity = Vector2(0, 0)
61:11/0/physics_layer_0/angular_velocity = 0.0
61:11/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
62:11/0 = 0
62:11/0/physics_layer_0/linear_velocity = Vector2(0, 0)
62:11/0/physics_layer_0/angular_velocity = 0.0
62:11/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
63:11/0 = 0
63:11/0/physics_layer_0/linear_velocity = Vector2(0, 0)
63:11/0/physics_layer_0/angular_velocity = 0.0
63:11/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
64:11/0 = 0
64:11/0/physics_layer_0/linear_velocity = Vector2(0, 0)
64:11/0/physics_layer_0/angular_velocity = 0.0
64:11/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
65:11/0 = 0
65:11/0/physics_layer_0/linear_velocity = Vector2(0, 0)
65:11/0/physics_layer_0/angular_velocity = 0.0
65:11/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
66:11/0 = 0
66:11/0/physics_layer_0/linear_velocity = Vector2(0, 0)
66:11/0/physics_layer_0/angular_velocity = 0.0
66:11/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
1:12/0 = 0
1:12/0/physics_layer_0/linear_velocity = Vector2(0, 0)
1:12/0/physics_layer_0/angular_velocity = 0.0
1:12/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
2:12/0 = 0
2:12/0/physics_layer_0/linear_velocity = Vector2(0, 0)
2:12/0/physics_layer_0/angular_velocity = 0.0
2:12/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
3:12/0 = 0
3:12/0/physics_layer_0/linear_velocity = Vector2(0, 0)
3:12/0/physics_layer_0/angular_velocity = 0.0
3:12/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
4:12/0 = 0
4:12/0/physics_layer_0/linear_velocity = Vector2(0, 0)
4:12/0/physics_layer_0/angular_velocity = 0.0
4:12/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
5:12/0 = 0
5:12/0/physics_layer_0/linear_velocity = Vector2(0, 0)
5:12/0/physics_layer_0/angular_velocity = 0.0
5:12/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
6:12/0 = 0
6:12/0/physics_layer_0/linear_velocity = Vector2(0, 0)
6:12/0/physics_layer_0/angular_velocity = 0.0
6:12/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
7:12/0 = 0
7:12/0/physics_layer_0/linear_velocity = Vector2(0, 0)
7:12/0/physics_layer_0/angular_velocity = 0.0
7:12/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
8:12/0 = 0
8:12/0/physics_layer_0/linear_velocity = Vector2(0, 0)
8:12/0/physics_layer_0/angular_velocity = 0.0
8:12/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
9:12/0 = 0
9:12/0/physics_layer_0/linear_velocity = Vector2(0, 0)
9:12/0/physics_layer_0/angular_velocity = 0.0
9:12/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
10:12/0 = 0
10:12/0/physics_layer_0/linear_velocity = Vector2(0, 0)
10:12/0/physics_layer_0/angular_velocity = 0.0
10:12/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
11:12/0 = 0
11:12/0/physics_layer_0/linear_velocity = Vector2(0, 0)
11:12/0/physics_layer_0/angular_velocity = 0.0
11:12/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
12:12/0 = 0
12:12/0/physics_layer_0/linear_velocity = Vector2(0, 0)
12:12/0/physics_layer_0/angular_velocity = 0.0
12:12/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
13:12/0 = 0
13:12/0/physics_layer_0/linear_velocity = Vector2(0, 0)
13:12/0/physics_layer_0/angular_velocity = 0.0
13:12/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
14:12/0 = 0
14:12/0/physics_layer_0/linear_velocity = Vector2(0, 0)
14:12/0/physics_layer_0/angular_velocity = 0.0
14:12/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
15:12/0 = 0
15:12/0/physics_layer_0/linear_velocity = Vector2(0, 0)
15:12/0/physics_layer_0/angular_velocity = 0.0
15:12/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
16:12/0 = 0
16:12/0/physics_layer_0/linear_velocity = Vector2(0, 0)
16:12/0/physics_layer_0/angular_velocity = 0.0
16:12/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
17:12/0 = 0
17:12/0/physics_layer_0/linear_velocity = Vector2(0, 0)
17:12/0/physics_layer_0/angular_velocity = 0.0
17:12/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
18:12/0 = 0
18:12/0/physics_layer_0/linear_velocity = Vector2(0, 0)
18:12/0/physics_layer_0/angular_velocity = 0.0
18:12/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
19:12/0 = 0
19:12/0/physics_layer_0/linear_velocity = Vector2(0, 0)
19:12/0/physics_layer_0/angular_velocity = 0.0
19:12/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
20:12/0 = 0
20:12/0/physics_layer_0/linear_velocity = Vector2(0, 0)
20:12/0/physics_layer_0/angular_velocity = 0.0
20:12/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
21:12/0 = 0
21:12/0/physics_layer_0/linear_velocity = Vector2(0, 0)
21:12/0/physics_layer_0/angular_velocity = 0.0
21:12/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
22:12/0 = 0
22:12/0/physics_layer_0/linear_velocity = Vector2(0, 0)
22:12/0/physics_layer_0/angular_velocity = 0.0
22:12/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
23:12/0 = 0
23:12/0/physics_layer_0/linear_velocity = Vector2(0, 0)
23:12/0/physics_layer_0/angular_velocity = 0.0
23:12/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
24:12/0 = 0
24:12/0/physics_layer_0/linear_velocity = Vector2(0, 0)
24:12/0/physics_layer_0/angular_velocity = 0.0
24:12/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
25:12/0 = 0
25:12/0/physics_layer_0/linear_velocity = Vector2(0, 0)
25:12/0/physics_layer_0/angular_velocity = 0.0
25:12/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
26:12/0 = 0
26:12/0/physics_layer_0/linear_velocity = Vector2(0, 0)
26:12/0/physics_layer_0/angular_velocity = 0.0
26:12/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
27:12/0 = 0
27:12/0/physics_layer_0/linear_velocity = Vector2(0, 0)
27:12/0/physics_layer_0/angular_velocity = 0.0
27:12/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
28:12/0 = 0
28:12/0/physics_layer_0/linear_velocity = Vector2(0, 0)
28:12/0/physics_layer_0/angular_velocity = 0.0
28:12/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
29:12/0 = 0
29:12/0/physics_layer_0/linear_velocity = Vector2(0, 0)
29:12/0/physics_layer_0/angular_velocity = 0.0
29:12/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
30:12/0 = 0
30:12/0/physics_layer_0/linear_velocity = Vector2(0, 0)
30:12/0/physics_layer_0/angular_velocity = 0.0
30:12/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
31:12/0 = 0
31:12/0/physics_layer_0/linear_velocity = Vector2(0, 0)
31:12/0/physics_layer_0/angular_velocity = 0.0
31:12/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
32:12/0 = 0
32:12/0/physics_layer_0/linear_velocity = Vector2(0, 0)
32:12/0/physics_layer_0/angular_velocity = 0.0
32:12/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
33:12/0 = 0
33:12/0/physics_layer_0/linear_velocity = Vector2(0, 0)
33:12/0/physics_layer_0/angular_velocity = 0.0
33:12/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
34:12/0 = 0
34:12/0/physics_layer_0/linear_velocity = Vector2(0, 0)
34:12/0/physics_layer_0/angular_velocity = 0.0
34:12/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
35:12/0 = 0
35:12/0/physics_layer_0/linear_velocity = Vector2(0, 0)
35:12/0/physics_layer_0/angular_velocity = 0.0
35:12/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
36:12/0 = 0
36:12/0/physics_layer_0/linear_velocity = Vector2(0, 0)
36:12/0/physics_layer_0/angular_velocity = 0.0
36:12/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
37:12/0 = 0
37:12/0/physics_layer_0/linear_velocity = Vector2(0, 0)
37:12/0/physics_layer_0/angular_velocity = 0.0
37:12/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
38:12/0 = 0
38:12/0/physics_layer_0/linear_velocity = Vector2(0, 0)
38:12/0/physics_layer_0/angular_velocity = 0.0
38:12/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
39:12/0 = 0
39:12/0/physics_layer_0/linear_velocity = Vector2(0, 0)
39:12/0/physics_layer_0/angular_velocity = 0.0
39:12/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
40:12/0 = 0
40:12/0/physics_layer_0/linear_velocity = Vector2(0, 0)
40:12/0/physics_layer_0/angular_velocity = 0.0
40:12/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
41:12/0 = 0
41:12/0/physics_layer_0/linear_velocity = Vector2(0, 0)
41:12/0/physics_layer_0/angular_velocity = 0.0
41:12/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
42:12/0 = 0
42:12/0/physics_layer_0/linear_velocity = Vector2(0, 0)
42:12/0/physics_layer_0/angular_velocity = 0.0
42:12/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
43:12/0 = 0
43:12/0/physics_layer_0/linear_velocity = Vector2(0, 0)
43:12/0/physics_layer_0/angular_velocity = 0.0
44:12/0 = 0
44:12/0/physics_layer_0/linear_velocity = Vector2(0, 0)
44:12/0/physics_layer_0/angular_velocity = 0.0
45:12/0 = 0
45:12/0/physics_layer_0/linear_velocity = Vector2(0, 0)
45:12/0/physics_layer_0/angular_velocity = 0.0
46:12/0 = 0
46:12/0/physics_layer_0/linear_velocity = Vector2(0, 0)
46:12/0/physics_layer_0/angular_velocity = 0.0
47:12/0 = 0
47:12/0/physics_layer_0/linear_velocity = Vector2(0, 0)
47:12/0/physics_layer_0/angular_velocity = 0.0
48:12/0 = 0
48:12/0/physics_layer_0/linear_velocity = Vector2(0, 0)
48:12/0/physics_layer_0/angular_velocity = 0.0
49:12/0 = 0
49:12/0/physics_layer_0/linear_velocity = Vector2(0, 0)
49:12/0/physics_layer_0/angular_velocity = 0.0
50:12/0 = 0
50:12/0/physics_layer_0/linear_velocity = Vector2(0, 0)
50:12/0/physics_layer_0/angular_velocity = 0.0
51:12/0 = 0
51:12/0/physics_layer_0/linear_velocity = Vector2(0, 0)
51:12/0/physics_layer_0/angular_velocity = 0.0
52:12/0 = 0
52:12/0/physics_layer_0/linear_velocity = Vector2(0, 0)
52:12/0/physics_layer_0/angular_velocity = 0.0
53:12/0 = 0
53:12/0/physics_layer_0/linear_velocity = Vector2(0, 0)
53:12/0/physics_layer_0/angular_velocity = 0.0
54:12/0 = 0
54:12/0/physics_layer_0/linear_velocity = Vector2(0, 0)
54:12/0/physics_layer_0/angular_velocity = 0.0
55:12/0 = 0
55:12/0/physics_layer_0/linear_velocity = Vector2(0, 0)
55:12/0/physics_layer_0/angular_velocity = 0.0
56:12/0 = 0
56:12/0/physics_layer_0/linear_velocity = Vector2(0, 0)
56:12/0/physics_layer_0/angular_velocity = 0.0
57:12/0 = 0
57:12/0/physics_layer_0/linear_velocity = Vector2(0, 0)
57:12/0/physics_layer_0/angular_velocity = 0.0
58:12/0 = 0
58:12/0/physics_layer_0/linear_velocity = Vector2(0, 0)
58:12/0/physics_layer_0/angular_velocity = 0.0
58:12/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
59:12/0 = 0
59:12/0/physics_layer_0/linear_velocity = Vector2(0, 0)
59:12/0/physics_layer_0/angular_velocity = 0.0
59:12/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
60:12/0 = 0
60:12/0/physics_layer_0/linear_velocity = Vector2(0, 0)
60:12/0/physics_layer_0/angular_velocity = 0.0
60:12/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
61:12/0 = 0
61:12/0/physics_layer_0/linear_velocity = Vector2(0, 0)
61:12/0/physics_layer_0/angular_velocity = 0.0
61:12/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
62:12/0 = 0
62:12/0/physics_layer_0/linear_velocity = Vector2(0, 0)
62:12/0/physics_layer_0/angular_velocity = 0.0
62:12/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
63:12/0 = 0
63:12/0/physics_layer_0/linear_velocity = Vector2(0, 0)
63:12/0/physics_layer_0/angular_velocity = 0.0
63:12/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
64:12/0 = 0
64:12/0/physics_layer_0/linear_velocity = Vector2(0, 0)
64:12/0/physics_layer_0/angular_velocity = 0.0
64:12/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
65:12/0 = 0
65:12/0/physics_layer_0/linear_velocity = Vector2(0, 0)
65:12/0/physics_layer_0/angular_velocity = 0.0
65:12/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
66:12/0 = 0
66:12/0/physics_layer_0/linear_velocity = Vector2(0, 0)
66:12/0/physics_layer_0/angular_velocity = 0.0
66:12/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
1:13/0 = 0
1:13/0/physics_layer_0/linear_velocity = Vector2(0, 0)
1:13/0/physics_layer_0/angular_velocity = 0.0
1:13/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
2:13/0 = 0
2:13/0/physics_layer_0/linear_velocity = Vector2(0, 0)
2:13/0/physics_layer_0/angular_velocity = 0.0
2:13/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
3:13/0 = 0
3:13/0/physics_layer_0/linear_velocity = Vector2(0, 0)
3:13/0/physics_layer_0/angular_velocity = 0.0
3:13/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
4:13/0 = 0
4:13/0/physics_layer_0/linear_velocity = Vector2(0, 0)
4:13/0/physics_layer_0/angular_velocity = 0.0
4:13/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
5:13/0 = 0
5:13/0/physics_layer_0/linear_velocity = Vector2(0, 0)
5:13/0/physics_layer_0/angular_velocity = 0.0
5:13/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
6:13/0 = 0
6:13/0/physics_layer_0/linear_velocity = Vector2(0, 0)
6:13/0/physics_layer_0/angular_velocity = 0.0
6:13/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
7:13/0 = 0
7:13/0/physics_layer_0/linear_velocity = Vector2(0, 0)
7:13/0/physics_layer_0/angular_velocity = 0.0
7:13/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
8:13/0 = 0
8:13/0/physics_layer_0/linear_velocity = Vector2(0, 0)
8:13/0/physics_layer_0/angular_velocity = 0.0
8:13/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
9:13/0 = 0
9:13/0/physics_layer_0/linear_velocity = Vector2(0, 0)
9:13/0/physics_layer_0/angular_velocity = 0.0
9:13/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
10:13/0 = 0
10:13/0/physics_layer_0/linear_velocity = Vector2(0, 0)
10:13/0/physics_layer_0/angular_velocity = 0.0
10:13/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
11:13/0 = 0
11:13/0/physics_layer_0/linear_velocity = Vector2(0, 0)
11:13/0/physics_layer_0/angular_velocity = 0.0
11:13/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
12:13/0 = 0
12:13/0/physics_layer_0/linear_velocity = Vector2(0, 0)
12:13/0/physics_layer_0/angular_velocity = 0.0
12:13/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
13:13/0 = 0
13:13/0/physics_layer_0/linear_velocity = Vector2(0, 0)
13:13/0/physics_layer_0/angular_velocity = 0.0
13:13/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
14:13/0 = 0
14:13/0/physics_layer_0/linear_velocity = Vector2(0, 0)
14:13/0/physics_layer_0/angular_velocity = 0.0
14:13/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
15:13/0 = 0
15:13/0/physics_layer_0/linear_velocity = Vector2(0, 0)
15:13/0/physics_layer_0/angular_velocity = 0.0
15:13/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
16:13/0 = 0
16:13/0/physics_layer_0/linear_velocity = Vector2(0, 0)
16:13/0/physics_layer_0/angular_velocity = 0.0
16:13/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
17:13/0 = 0
17:13/0/physics_layer_0/linear_velocity = Vector2(0, 0)
17:13/0/physics_layer_0/angular_velocity = 0.0
17:13/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
18:13/0 = 0
18:13/0/physics_layer_0/linear_velocity = Vector2(0, 0)
18:13/0/physics_layer_0/angular_velocity = 0.0
18:13/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
19:13/0 = 0
19:13/0/physics_layer_0/linear_velocity = Vector2(0, 0)
19:13/0/physics_layer_0/angular_velocity = 0.0
19:13/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
20:13/0 = 0
20:13/0/physics_layer_0/linear_velocity = Vector2(0, 0)
20:13/0/physics_layer_0/angular_velocity = 0.0
20:13/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
21:13/0 = 0
21:13/0/physics_layer_0/linear_velocity = Vector2(0, 0)
21:13/0/physics_layer_0/angular_velocity = 0.0
21:13/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
22:13/0 = 0
22:13/0/physics_layer_0/linear_velocity = Vector2(0, 0)
22:13/0/physics_layer_0/angular_velocity = 0.0
22:13/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
23:13/0 = 0
23:13/0/physics_layer_0/linear_velocity = Vector2(0, 0)
23:13/0/physics_layer_0/angular_velocity = 0.0
23:13/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
24:13/0 = 0
24:13/0/physics_layer_0/linear_velocity = Vector2(0, 0)
24:13/0/physics_layer_0/angular_velocity = 0.0
24:13/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
25:13/0 = 0
25:13/0/physics_layer_0/linear_velocity = Vector2(0, 0)
25:13/0/physics_layer_0/angular_velocity = 0.0
25:13/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
26:13/0 = 0
26:13/0/physics_layer_0/linear_velocity = Vector2(0, 0)
26:13/0/physics_layer_0/angular_velocity = 0.0
26:13/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
27:13/0 = 0
27:13/0/physics_layer_0/linear_velocity = Vector2(0, 0)
27:13/0/physics_layer_0/angular_velocity = 0.0
27:13/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
28:13/0 = 0
28:13/0/physics_layer_0/linear_velocity = Vector2(0, 0)
28:13/0/physics_layer_0/angular_velocity = 0.0
28:13/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
29:13/0 = 0
29:13/0/physics_layer_0/linear_velocity = Vector2(0, 0)
29:13/0/physics_layer_0/angular_velocity = 0.0
29:13/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
30:13/0 = 0
30:13/0/physics_layer_0/linear_velocity = Vector2(0, 0)
30:13/0/physics_layer_0/angular_velocity = 0.0
30:13/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
31:13/0 = 0
31:13/0/physics_layer_0/linear_velocity = Vector2(0, 0)
31:13/0/physics_layer_0/angular_velocity = 0.0
31:13/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
32:13/0 = 0
32:13/0/physics_layer_0/linear_velocity = Vector2(0, 0)
32:13/0/physics_layer_0/angular_velocity = 0.0
32:13/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
33:13/0 = 0
33:13/0/physics_layer_0/linear_velocity = Vector2(0, 0)
33:13/0/physics_layer_0/angular_velocity = 0.0
33:13/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
34:13/0 = 0
34:13/0/physics_layer_0/linear_velocity = Vector2(0, 0)
34:13/0/physics_layer_0/angular_velocity = 0.0
34:13/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
35:13/0 = 0
35:13/0/physics_layer_0/linear_velocity = Vector2(0, 0)
35:13/0/physics_layer_0/angular_velocity = 0.0
35:13/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
36:13/0 = 0
36:13/0/physics_layer_0/linear_velocity = Vector2(0, 0)
36:13/0/physics_layer_0/angular_velocity = 0.0
36:13/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
37:13/0 = 0
37:13/0/physics_layer_0/linear_velocity = Vector2(0, 0)
37:13/0/physics_layer_0/angular_velocity = 0.0
37:13/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
38:13/0 = 0
38:13/0/physics_layer_0/linear_velocity = Vector2(0, 0)
38:13/0/physics_layer_0/angular_velocity = 0.0
38:13/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
39:13/0 = 0
39:13/0/physics_layer_0/linear_velocity = Vector2(0, 0)
39:13/0/physics_layer_0/angular_velocity = 0.0
39:13/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
40:13/0 = 0
40:13/0/physics_layer_0/linear_velocity = Vector2(0, 0)
40:13/0/physics_layer_0/angular_velocity = 0.0
40:13/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
41:13/0 = 0
41:13/0/physics_layer_0/linear_velocity = Vector2(0, 0)
41:13/0/physics_layer_0/angular_velocity = 0.0
41:13/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
42:13/0 = 0
42:13/0/physics_layer_0/linear_velocity = Vector2(0, 0)
42:13/0/physics_layer_0/angular_velocity = 0.0
42:13/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
43:13/0 = 0
43:13/0/physics_layer_0/linear_velocity = Vector2(0, 0)
43:13/0/physics_layer_0/angular_velocity = 0.0
44:13/0 = 0
44:13/0/physics_layer_0/linear_velocity = Vector2(0, 0)
44:13/0/physics_layer_0/angular_velocity = 0.0
45:13/0 = 0
45:13/0/physics_layer_0/linear_velocity = Vector2(0, 0)
45:13/0/physics_layer_0/angular_velocity = 0.0
46:13/0 = 0
46:13/0/physics_layer_0/linear_velocity = Vector2(0, 0)
46:13/0/physics_layer_0/angular_velocity = 0.0
47:13/0 = 0
47:13/0/physics_layer_0/linear_velocity = Vector2(0, 0)
47:13/0/physics_layer_0/angular_velocity = 0.0
48:13/0 = 0
48:13/0/physics_layer_0/linear_velocity = Vector2(0, 0)
48:13/0/physics_layer_0/angular_velocity = 0.0
49:13/0 = 0
49:13/0/physics_layer_0/linear_velocity = Vector2(0, 0)
49:13/0/physics_layer_0/angular_velocity = 0.0
50:13/0 = 0
50:13/0/physics_layer_0/linear_velocity = Vector2(0, 0)
50:13/0/physics_layer_0/angular_velocity = 0.0
51:13/0 = 0
51:13/0/physics_layer_0/linear_velocity = Vector2(0, 0)
51:13/0/physics_layer_0/angular_velocity = 0.0
52:13/0 = 0
52:13/0/physics_layer_0/linear_velocity = Vector2(0, 0)
52:13/0/physics_layer_0/angular_velocity = 0.0
53:13/0 = 0
53:13/0/physics_layer_0/linear_velocity = Vector2(0, 0)
53:13/0/physics_layer_0/angular_velocity = 0.0
54:13/0 = 0
54:13/0/physics_layer_0/linear_velocity = Vector2(0, 0)
54:13/0/physics_layer_0/angular_velocity = 0.0
55:13/0 = 0
55:13/0/physics_layer_0/linear_velocity = Vector2(0, 0)
55:13/0/physics_layer_0/angular_velocity = 0.0
56:13/0 = 0
56:13/0/physics_layer_0/linear_velocity = Vector2(0, 0)
56:13/0/physics_layer_0/angular_velocity = 0.0
57:13/0 = 0
57:13/0/physics_layer_0/linear_velocity = Vector2(0, 0)
57:13/0/physics_layer_0/angular_velocity = 0.0
58:13/0 = 0
58:13/0/physics_layer_0/linear_velocity = Vector2(0, 0)
58:13/0/physics_layer_0/angular_velocity = 0.0
58:13/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
59:13/0 = 0
59:13/0/physics_layer_0/linear_velocity = Vector2(0, 0)
59:13/0/physics_layer_0/angular_velocity = 0.0
59:13/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
60:13/0 = 0
60:13/0/physics_layer_0/linear_velocity = Vector2(0, 0)
60:13/0/physics_layer_0/angular_velocity = 0.0
60:13/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
61:13/0 = 0
61:13/0/physics_layer_0/linear_velocity = Vector2(0, 0)
61:13/0/physics_layer_0/angular_velocity = 0.0
61:13/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
62:13/0 = 0
62:13/0/physics_layer_0/linear_velocity = Vector2(0, 0)
62:13/0/physics_layer_0/angular_velocity = 0.0
62:13/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
63:13/0 = 0
63:13/0/physics_layer_0/linear_velocity = Vector2(0, 0)
63:13/0/physics_layer_0/angular_velocity = 0.0
63:13/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
64:13/0 = 0
64:13/0/physics_layer_0/linear_velocity = Vector2(0, 0)
64:13/0/physics_layer_0/angular_velocity = 0.0
64:13/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
65:13/0 = 0
65:13/0/physics_layer_0/linear_velocity = Vector2(0, 0)
65:13/0/physics_layer_0/angular_velocity = 0.0
65:13/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
66:13/0 = 0
66:13/0/physics_layer_0/linear_velocity = Vector2(0, 0)
66:13/0/physics_layer_0/angular_velocity = 0.0
66:13/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
1:14/0 = 0
1:14/0/physics_layer_0/linear_velocity = Vector2(0, 0)
1:14/0/physics_layer_0/angular_velocity = 0.0
1:14/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
2:14/0 = 0
2:14/0/physics_layer_0/linear_velocity = Vector2(0, 0)
2:14/0/physics_layer_0/angular_velocity = 0.0
2:14/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
3:14/0 = 0
3:14/0/physics_layer_0/linear_velocity = Vector2(0, 0)
3:14/0/physics_layer_0/angular_velocity = 0.0
3:14/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
4:14/0 = 0
4:14/0/physics_layer_0/linear_velocity = Vector2(0, 0)
4:14/0/physics_layer_0/angular_velocity = 0.0
4:14/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
5:14/0 = 0
5:14/0/physics_layer_0/linear_velocity = Vector2(0, 0)
5:14/0/physics_layer_0/angular_velocity = 0.0
5:14/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
6:14/0 = 0
6:14/0/physics_layer_0/linear_velocity = Vector2(0, 0)
6:14/0/physics_layer_0/angular_velocity = 0.0
6:14/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
7:14/0 = 0
7:14/0/physics_layer_0/linear_velocity = Vector2(0, 0)
7:14/0/physics_layer_0/angular_velocity = 0.0
7:14/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
8:14/0 = 0
8:14/0/physics_layer_0/linear_velocity = Vector2(0, 0)
8:14/0/physics_layer_0/angular_velocity = 0.0
8:14/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
9:14/0 = 0
9:14/0/physics_layer_0/linear_velocity = Vector2(0, 0)
9:14/0/physics_layer_0/angular_velocity = 0.0
9:14/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
10:14/0 = 0
10:14/0/physics_layer_0/linear_velocity = Vector2(0, 0)
10:14/0/physics_layer_0/angular_velocity = 0.0
10:14/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
11:14/0 = 0
11:14/0/physics_layer_0/linear_velocity = Vector2(0, 0)
11:14/0/physics_layer_0/angular_velocity = 0.0
11:14/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
12:14/0 = 0
12:14/0/physics_layer_0/linear_velocity = Vector2(0, 0)
12:14/0/physics_layer_0/angular_velocity = 0.0
12:14/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
13:14/0 = 0
13:14/0/physics_layer_0/linear_velocity = Vector2(0, 0)
13:14/0/physics_layer_0/angular_velocity = 0.0
13:14/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
14:14/0 = 0
14:14/0/physics_layer_0/linear_velocity = Vector2(0, 0)
14:14/0/physics_layer_0/angular_velocity = 0.0
14:14/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
15:14/0 = 0
15:14/0/physics_layer_0/linear_velocity = Vector2(0, 0)
15:14/0/physics_layer_0/angular_velocity = 0.0
15:14/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
16:14/0 = 0
16:14/0/physics_layer_0/linear_velocity = Vector2(0, 0)
16:14/0/physics_layer_0/angular_velocity = 0.0
16:14/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
17:14/0 = 0
17:14/0/physics_layer_0/linear_velocity = Vector2(0, 0)
17:14/0/physics_layer_0/angular_velocity = 0.0
17:14/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
18:14/0 = 0
18:14/0/physics_layer_0/linear_velocity = Vector2(0, 0)
18:14/0/physics_layer_0/angular_velocity = 0.0
18:14/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
19:14/0 = 0
19:14/0/physics_layer_0/linear_velocity = Vector2(0, 0)
19:14/0/physics_layer_0/angular_velocity = 0.0
19:14/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
20:14/0 = 0
20:14/0/physics_layer_0/linear_velocity = Vector2(0, 0)
20:14/0/physics_layer_0/angular_velocity = 0.0
20:14/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
21:14/0 = 0
21:14/0/physics_layer_0/linear_velocity = Vector2(0, 0)
21:14/0/physics_layer_0/angular_velocity = 0.0
21:14/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
22:14/0 = 0
22:14/0/physics_layer_0/linear_velocity = Vector2(0, 0)
22:14/0/physics_layer_0/angular_velocity = 0.0
22:14/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
23:14/0 = 0
23:14/0/physics_layer_0/linear_velocity = Vector2(0, 0)
23:14/0/physics_layer_0/angular_velocity = 0.0
23:14/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
24:14/0 = 0
24:14/0/physics_layer_0/linear_velocity = Vector2(0, 0)
24:14/0/physics_layer_0/angular_velocity = 0.0
24:14/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
25:14/0 = 0
25:14/0/physics_layer_0/linear_velocity = Vector2(0, 0)
25:14/0/physics_layer_0/angular_velocity = 0.0
25:14/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
26:14/0 = 0
26:14/0/physics_layer_0/linear_velocity = Vector2(0, 0)
26:14/0/physics_layer_0/angular_velocity = 0.0
26:14/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
27:14/0 = 0
27:14/0/physics_layer_0/linear_velocity = Vector2(0, 0)
27:14/0/physics_layer_0/angular_velocity = 0.0
27:14/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
28:14/0 = 0
28:14/0/physics_layer_0/linear_velocity = Vector2(0, 0)
28:14/0/physics_layer_0/angular_velocity = 0.0
28:14/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
29:14/0 = 0
29:14/0/physics_layer_0/linear_velocity = Vector2(0, 0)
29:14/0/physics_layer_0/angular_velocity = 0.0
29:14/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
30:14/0 = 0
30:14/0/physics_layer_0/linear_velocity = Vector2(0, 0)
30:14/0/physics_layer_0/angular_velocity = 0.0
30:14/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
31:14/0 = 0
31:14/0/physics_layer_0/linear_velocity = Vector2(0, 0)
31:14/0/physics_layer_0/angular_velocity = 0.0
31:14/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
32:14/0 = 0
32:14/0/physics_layer_0/linear_velocity = Vector2(0, 0)
32:14/0/physics_layer_0/angular_velocity = 0.0
32:14/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
33:14/0 = 0
33:14/0/physics_layer_0/linear_velocity = Vector2(0, 0)
33:14/0/physics_layer_0/angular_velocity = 0.0
33:14/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
34:14/0 = 0
34:14/0/physics_layer_0/linear_velocity = Vector2(0, 0)
34:14/0/physics_layer_0/angular_velocity = 0.0
34:14/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
35:14/0 = 0
35:14/0/physics_layer_0/linear_velocity = Vector2(0, 0)
35:14/0/physics_layer_0/angular_velocity = 0.0
35:14/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
36:14/0 = 0
36:14/0/physics_layer_0/linear_velocity = Vector2(0, 0)
36:14/0/physics_layer_0/angular_velocity = 0.0
36:14/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
37:14/0 = 0
37:14/0/physics_layer_0/linear_velocity = Vector2(0, 0)
37:14/0/physics_layer_0/angular_velocity = 0.0
37:14/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
38:14/0 = 0
38:14/0/physics_layer_0/linear_velocity = Vector2(0, 0)
38:14/0/physics_layer_0/angular_velocity = 0.0
38:14/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
39:14/0 = 0
39:14/0/physics_layer_0/linear_velocity = Vector2(0, 0)
39:14/0/physics_layer_0/angular_velocity = 0.0
39:14/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
40:14/0 = 0
40:14/0/physics_layer_0/linear_velocity = Vector2(0, 0)
40:14/0/physics_layer_0/angular_velocity = 0.0
40:14/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
41:14/0 = 0
41:14/0/physics_layer_0/linear_velocity = Vector2(0, 0)
41:14/0/physics_layer_0/angular_velocity = 0.0
41:14/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
42:14/0 = 0
42:14/0/physics_layer_0/linear_velocity = Vector2(0, 0)
42:14/0/physics_layer_0/angular_velocity = 0.0
42:14/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
43:14/0 = 0
43:14/0/physics_layer_0/linear_velocity = Vector2(0, 0)
43:14/0/physics_layer_0/angular_velocity = 0.0
44:14/0 = 0
44:14/0/physics_layer_0/linear_velocity = Vector2(0, 0)
44:14/0/physics_layer_0/angular_velocity = 0.0
45:14/0 = 0
45:14/0/physics_layer_0/linear_velocity = Vector2(0, 0)
45:14/0/physics_layer_0/angular_velocity = 0.0
46:14/0 = 0
46:14/0/physics_layer_0/linear_velocity = Vector2(0, 0)
46:14/0/physics_layer_0/angular_velocity = 0.0
47:14/0 = 0
47:14/0/physics_layer_0/linear_velocity = Vector2(0, 0)
47:14/0/physics_layer_0/angular_velocity = 0.0
48:14/0 = 0
48:14/0/physics_layer_0/linear_velocity = Vector2(0, 0)
48:14/0/physics_layer_0/angular_velocity = 0.0
49:14/0 = 0
49:14/0/physics_layer_0/linear_velocity = Vector2(0, 0)
49:14/0/physics_layer_0/angular_velocity = 0.0
50:14/0 = 0
50:14/0/physics_layer_0/linear_velocity = Vector2(0, 0)
50:14/0/physics_layer_0/angular_velocity = 0.0
51:14/0 = 0
51:14/0/physics_layer_0/linear_velocity = Vector2(0, 0)
51:14/0/physics_layer_0/angular_velocity = 0.0
52:14/0 = 0
52:14/0/physics_layer_0/linear_velocity = Vector2(0, 0)
52:14/0/physics_layer_0/angular_velocity = 0.0
53:14/0 = 0
53:14/0/physics_layer_0/linear_velocity = Vector2(0, 0)
53:14/0/physics_layer_0/angular_velocity = 0.0
54:14/0 = 0
54:14/0/physics_layer_0/linear_velocity = Vector2(0, 0)
54:14/0/physics_layer_0/angular_velocity = 0.0
55:14/0 = 0
55:14/0/physics_layer_0/linear_velocity = Vector2(0, 0)
55:14/0/physics_layer_0/angular_velocity = 0.0
56:14/0 = 0
56:14/0/physics_layer_0/linear_velocity = Vector2(0, 0)
56:14/0/physics_layer_0/angular_velocity = 0.0
57:14/0 = 0
57:14/0/physics_layer_0/linear_velocity = Vector2(0, 0)
57:14/0/physics_layer_0/angular_velocity = 0.0
58:14/0 = 0
58:14/0/physics_layer_0/linear_velocity = Vector2(0, 0)
58:14/0/physics_layer_0/angular_velocity = 0.0
58:14/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
59:14/0 = 0
59:14/0/physics_layer_0/linear_velocity = Vector2(0, 0)
59:14/0/physics_layer_0/angular_velocity = 0.0
59:14/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
60:14/0 = 0
60:14/0/physics_layer_0/linear_velocity = Vector2(0, 0)
60:14/0/physics_layer_0/angular_velocity = 0.0
60:14/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
61:14/0 = 0
61:14/0/physics_layer_0/linear_velocity = Vector2(0, 0)
61:14/0/physics_layer_0/angular_velocity = 0.0
61:14/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
62:14/0 = 0
62:14/0/physics_layer_0/linear_velocity = Vector2(0, 0)
62:14/0/physics_layer_0/angular_velocity = 0.0
62:14/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
63:14/0 = 0
63:14/0/physics_layer_0/linear_velocity = Vector2(0, 0)
63:14/0/physics_layer_0/angular_velocity = 0.0
63:14/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
64:14/0 = 0
64:14/0/physics_layer_0/linear_velocity = Vector2(0, 0)
64:14/0/physics_layer_0/angular_velocity = 0.0
64:14/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
65:14/0 = 0
65:14/0/physics_layer_0/linear_velocity = Vector2(0, 0)
65:14/0/physics_layer_0/angular_velocity = 0.0
65:14/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
66:14/0 = 0
66:14/0/physics_layer_0/linear_velocity = Vector2(0, 0)
66:14/0/physics_layer_0/angular_velocity = 0.0
66:14/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
1:15/0 = 0
1:15/0/physics_layer_0/linear_velocity = Vector2(0, 0)
1:15/0/physics_layer_0/angular_velocity = 0.0
1:15/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
2:15/0 = 0
2:15/0/physics_layer_0/linear_velocity = Vector2(0, 0)
2:15/0/physics_layer_0/angular_velocity = 0.0
2:15/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
3:15/0 = 0
3:15/0/physics_layer_0/linear_velocity = Vector2(0, 0)
3:15/0/physics_layer_0/angular_velocity = 0.0
3:15/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
4:15/0 = 0
4:15/0/physics_layer_0/linear_velocity = Vector2(0, 0)
4:15/0/physics_layer_0/angular_velocity = 0.0
4:15/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
5:15/0 = 0
5:15/0/physics_layer_0/linear_velocity = Vector2(0, 0)
5:15/0/physics_layer_0/angular_velocity = 0.0
5:15/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
6:15/0 = 0
6:15/0/physics_layer_0/linear_velocity = Vector2(0, 0)
6:15/0/physics_layer_0/angular_velocity = 0.0
6:15/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
7:15/0 = 0
7:15/0/physics_layer_0/linear_velocity = Vector2(0, 0)
7:15/0/physics_layer_0/angular_velocity = 0.0
7:15/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
8:15/0 = 0
8:15/0/physics_layer_0/linear_velocity = Vector2(0, 0)
8:15/0/physics_layer_0/angular_velocity = 0.0
8:15/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
9:15/0 = 0
9:15/0/physics_layer_0/linear_velocity = Vector2(0, 0)
9:15/0/physics_layer_0/angular_velocity = 0.0
9:15/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
10:15/0 = 0
10:15/0/physics_layer_0/linear_velocity = Vector2(0, 0)
10:15/0/physics_layer_0/angular_velocity = 0.0
10:15/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
11:15/0 = 0
11:15/0/physics_layer_0/linear_velocity = Vector2(0, 0)
11:15/0/physics_layer_0/angular_velocity = 0.0
11:15/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
12:15/0 = 0
12:15/0/physics_layer_0/linear_velocity = Vector2(0, 0)
12:15/0/physics_layer_0/angular_velocity = 0.0
12:15/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
13:15/0 = 0
13:15/0/physics_layer_0/linear_velocity = Vector2(0, 0)
13:15/0/physics_layer_0/angular_velocity = 0.0
13:15/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
14:15/0 = 0
14:15/0/physics_layer_0/linear_velocity = Vector2(0, 0)
14:15/0/physics_layer_0/angular_velocity = 0.0
14:15/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
15:15/0 = 0
15:15/0/physics_layer_0/linear_velocity = Vector2(0, 0)
15:15/0/physics_layer_0/angular_velocity = 0.0
15:15/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
16:15/0 = 0
16:15/0/physics_layer_0/linear_velocity = Vector2(0, 0)
16:15/0/physics_layer_0/angular_velocity = 0.0
16:15/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
17:15/0 = 0
17:15/0/physics_layer_0/linear_velocity = Vector2(0, 0)
17:15/0/physics_layer_0/angular_velocity = 0.0
17:15/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
18:15/0 = 0
18:15/0/physics_layer_0/linear_velocity = Vector2(0, 0)
18:15/0/physics_layer_0/angular_velocity = 0.0
18:15/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
19:15/0 = 0
19:15/0/physics_layer_0/linear_velocity = Vector2(0, 0)
19:15/0/physics_layer_0/angular_velocity = 0.0
19:15/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
20:15/0 = 0
20:15/0/physics_layer_0/linear_velocity = Vector2(0, 0)
20:15/0/physics_layer_0/angular_velocity = 0.0
20:15/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
21:15/0 = 0
21:15/0/physics_layer_0/linear_velocity = Vector2(0, 0)
21:15/0/physics_layer_0/angular_velocity = 0.0
21:15/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
22:15/0 = 0
22:15/0/physics_layer_0/linear_velocity = Vector2(0, 0)
22:15/0/physics_layer_0/angular_velocity = 0.0
22:15/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
23:15/0 = 0
23:15/0/physics_layer_0/linear_velocity = Vector2(0, 0)
23:15/0/physics_layer_0/angular_velocity = 0.0
23:15/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
24:15/0 = 0
24:15/0/physics_layer_0/linear_velocity = Vector2(0, 0)
24:15/0/physics_layer_0/angular_velocity = 0.0
24:15/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
25:15/0 = 0
25:15/0/physics_layer_0/linear_velocity = Vector2(0, 0)
25:15/0/physics_layer_0/angular_velocity = 0.0
25:15/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
26:15/0 = 0
26:15/0/physics_layer_0/linear_velocity = Vector2(0, 0)
26:15/0/physics_layer_0/angular_velocity = 0.0
26:15/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
27:15/0 = 0
27:15/0/physics_layer_0/linear_velocity = Vector2(0, 0)
27:15/0/physics_layer_0/angular_velocity = 0.0
27:15/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
28:15/0 = 0
28:15/0/physics_layer_0/linear_velocity = Vector2(0, 0)
28:15/0/physics_layer_0/angular_velocity = 0.0
28:15/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
29:15/0 = 0
29:15/0/physics_layer_0/linear_velocity = Vector2(0, 0)
29:15/0/physics_layer_0/angular_velocity = 0.0
29:15/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
30:15/0 = 0
30:15/0/physics_layer_0/linear_velocity = Vector2(0, 0)
30:15/0/physics_layer_0/angular_velocity = 0.0
30:15/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
31:15/0 = 0
31:15/0/physics_layer_0/linear_velocity = Vector2(0, 0)
31:15/0/physics_layer_0/angular_velocity = 0.0
31:15/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
32:15/0 = 0
32:15/0/physics_layer_0/linear_velocity = Vector2(0, 0)
32:15/0/physics_layer_0/angular_velocity = 0.0
32:15/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
33:15/0 = 0
33:15/0/physics_layer_0/linear_velocity = Vector2(0, 0)
33:15/0/physics_layer_0/angular_velocity = 0.0
33:15/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
34:15/0 = 0
34:15/0/physics_layer_0/linear_velocity = Vector2(0, 0)
34:15/0/physics_layer_0/angular_velocity = 0.0
34:15/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
35:15/0 = 0
35:15/0/physics_layer_0/linear_velocity = Vector2(0, 0)
35:15/0/physics_layer_0/angular_velocity = 0.0
35:15/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
36:15/0 = 0
36:15/0/physics_layer_0/linear_velocity = Vector2(0, 0)
36:15/0/physics_layer_0/angular_velocity = 0.0
36:15/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
37:15/0 = 0
37:15/0/physics_layer_0/linear_velocity = Vector2(0, 0)
37:15/0/physics_layer_0/angular_velocity = 0.0
37:15/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
38:15/0 = 0
38:15/0/physics_layer_0/linear_velocity = Vector2(0, 0)
38:15/0/physics_layer_0/angular_velocity = 0.0
38:15/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
39:15/0 = 0
39:15/0/physics_layer_0/linear_velocity = Vector2(0, 0)
39:15/0/physics_layer_0/angular_velocity = 0.0
39:15/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
40:15/0 = 0
40:15/0/physics_layer_0/linear_velocity = Vector2(0, 0)
40:15/0/physics_layer_0/angular_velocity = 0.0
40:15/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
41:15/0 = 0
41:15/0/physics_layer_0/linear_velocity = Vector2(0, 0)
41:15/0/physics_layer_0/angular_velocity = 0.0
41:15/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
42:15/0 = 0
42:15/0/physics_layer_0/linear_velocity = Vector2(0, 0)
42:15/0/physics_layer_0/angular_velocity = 0.0
42:15/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
43:15/0 = 0
43:15/0/physics_layer_0/linear_velocity = Vector2(0, 0)
43:15/0/physics_layer_0/angular_velocity = 0.0
44:15/0 = 0
44:15/0/physics_layer_0/linear_velocity = Vector2(0, 0)
44:15/0/physics_layer_0/angular_velocity = 0.0
45:15/0 = 0
45:15/0/physics_layer_0/linear_velocity = Vector2(0, 0)
45:15/0/physics_layer_0/angular_velocity = 0.0
46:15/0 = 0
46:15/0/physics_layer_0/linear_velocity = Vector2(0, 0)
46:15/0/physics_layer_0/angular_velocity = 0.0
47:15/0 = 0
47:15/0/physics_layer_0/linear_velocity = Vector2(0, 0)
47:15/0/physics_layer_0/angular_velocity = 0.0
48:15/0 = 0
48:15/0/physics_layer_0/linear_velocity = Vector2(0, 0)
48:15/0/physics_layer_0/angular_velocity = 0.0
49:15/0 = 0
49:15/0/physics_layer_0/linear_velocity = Vector2(0, 0)
49:15/0/physics_layer_0/angular_velocity = 0.0
50:15/0 = 0
50:15/0/physics_layer_0/linear_velocity = Vector2(0, 0)
50:15/0/physics_layer_0/angular_velocity = 0.0
51:15/0 = 0
51:15/0/physics_layer_0/linear_velocity = Vector2(0, 0)
51:15/0/physics_layer_0/angular_velocity = 0.0
52:15/0 = 0
52:15/0/physics_layer_0/linear_velocity = Vector2(0, 0)
52:15/0/physics_layer_0/angular_velocity = 0.0
53:15/0 = 0
53:15/0/physics_layer_0/linear_velocity = Vector2(0, 0)
53:15/0/physics_layer_0/angular_velocity = 0.0
54:15/0 = 0
54:15/0/physics_layer_0/linear_velocity = Vector2(0, 0)
54:15/0/physics_layer_0/angular_velocity = 0.0
55:15/0 = 0
55:15/0/physics_layer_0/linear_velocity = Vector2(0, 0)
55:15/0/physics_layer_0/angular_velocity = 0.0
56:15/0 = 0
56:15/0/physics_layer_0/linear_velocity = Vector2(0, 0)
56:15/0/physics_layer_0/angular_velocity = 0.0
57:15/0 = 0
57:15/0/physics_layer_0/linear_velocity = Vector2(0, 0)
57:15/0/physics_layer_0/angular_velocity = 0.0
58:15/0 = 0
58:15/0/physics_layer_0/linear_velocity = Vector2(0, 0)
58:15/0/physics_layer_0/angular_velocity = 0.0
58:15/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
59:15/0 = 0
59:15/0/physics_layer_0/linear_velocity = Vector2(0, 0)
59:15/0/physics_layer_0/angular_velocity = 0.0
59:15/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
60:15/0 = 0
60:15/0/physics_layer_0/linear_velocity = Vector2(0, 0)
60:15/0/physics_layer_0/angular_velocity = 0.0
60:15/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
61:15/0 = 0
61:15/0/physics_layer_0/linear_velocity = Vector2(0, 0)
61:15/0/physics_layer_0/angular_velocity = 0.0
61:15/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
62:15/0 = 0
62:15/0/physics_layer_0/linear_velocity = Vector2(0, 0)
62:15/0/physics_layer_0/angular_velocity = 0.0
62:15/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
63:15/0 = 0
63:15/0/physics_layer_0/linear_velocity = Vector2(0, 0)
63:15/0/physics_layer_0/angular_velocity = 0.0
63:15/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
64:15/0 = 0
64:15/0/physics_layer_0/linear_velocity = Vector2(0, 0)
64:15/0/physics_layer_0/angular_velocity = 0.0
64:15/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
65:15/0 = 0
65:15/0/physics_layer_0/linear_velocity = Vector2(0, 0)
65:15/0/physics_layer_0/angular_velocity = 0.0
65:15/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
66:15/0 = 0
66:15/0/physics_layer_0/linear_velocity = Vector2(0, 0)
66:15/0/physics_layer_0/angular_velocity = 0.0
66:15/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
1:16/0 = 0
1:16/0/physics_layer_0/linear_velocity = Vector2(0, 0)
1:16/0/physics_layer_0/angular_velocity = 0.0
1:16/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
2:16/0 = 0
2:16/0/physics_layer_0/linear_velocity = Vector2(0, 0)
2:16/0/physics_layer_0/angular_velocity = 0.0
2:16/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
3:16/0 = 0
3:16/0/physics_layer_0/linear_velocity = Vector2(0, 0)
3:16/0/physics_layer_0/angular_velocity = 0.0
3:16/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
4:16/0 = 0
4:16/0/physics_layer_0/linear_velocity = Vector2(0, 0)
4:16/0/physics_layer_0/angular_velocity = 0.0
4:16/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
5:16/0 = 0
5:16/0/physics_layer_0/linear_velocity = Vector2(0, 0)
5:16/0/physics_layer_0/angular_velocity = 0.0
5:16/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
6:16/0 = 0
6:16/0/physics_layer_0/linear_velocity = Vector2(0, 0)
6:16/0/physics_layer_0/angular_velocity = 0.0
6:16/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
7:16/0 = 0
7:16/0/physics_layer_0/linear_velocity = Vector2(0, 0)
7:16/0/physics_layer_0/angular_velocity = 0.0
7:16/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
8:16/0 = 0
8:16/0/physics_layer_0/linear_velocity = Vector2(0, 0)
8:16/0/physics_layer_0/angular_velocity = 0.0
8:16/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
9:16/0 = 0
9:16/0/physics_layer_0/linear_velocity = Vector2(0, 0)
9:16/0/physics_layer_0/angular_velocity = 0.0
9:16/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
10:16/0 = 0
10:16/0/physics_layer_0/linear_velocity = Vector2(0, 0)
10:16/0/physics_layer_0/angular_velocity = 0.0
10:16/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
11:16/0 = 0
11:16/0/physics_layer_0/linear_velocity = Vector2(0, 0)
11:16/0/physics_layer_0/angular_velocity = 0.0
11:16/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
12:16/0 = 0
12:16/0/physics_layer_0/linear_velocity = Vector2(0, 0)
12:16/0/physics_layer_0/angular_velocity = 0.0
12:16/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
13:16/0 = 0
13:16/0/physics_layer_0/linear_velocity = Vector2(0, 0)
13:16/0/physics_layer_0/angular_velocity = 0.0
13:16/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
14:16/0 = 0
14:16/0/physics_layer_0/linear_velocity = Vector2(0, 0)
14:16/0/physics_layer_0/angular_velocity = 0.0
14:16/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
15:16/0 = 0
15:16/0/physics_layer_0/linear_velocity = Vector2(0, 0)
15:16/0/physics_layer_0/angular_velocity = 0.0
15:16/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
16:16/0 = 0
16:16/0/physics_layer_0/linear_velocity = Vector2(0, 0)
16:16/0/physics_layer_0/angular_velocity = 0.0
16:16/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
17:16/0 = 0
17:16/0/physics_layer_0/linear_velocity = Vector2(0, 0)
17:16/0/physics_layer_0/angular_velocity = 0.0
17:16/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
18:16/0 = 0
18:16/0/physics_layer_0/linear_velocity = Vector2(0, 0)
18:16/0/physics_layer_0/angular_velocity = 0.0
18:16/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
19:16/0 = 0
19:16/0/physics_layer_0/linear_velocity = Vector2(0, 0)
19:16/0/physics_layer_0/angular_velocity = 0.0
19:16/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
20:16/0 = 0
20:16/0/physics_layer_0/linear_velocity = Vector2(0, 0)
20:16/0/physics_layer_0/angular_velocity = 0.0
20:16/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
21:16/0 = 0
21:16/0/physics_layer_0/linear_velocity = Vector2(0, 0)
21:16/0/physics_layer_0/angular_velocity = 0.0
21:16/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
22:16/0 = 0
22:16/0/physics_layer_0/linear_velocity = Vector2(0, 0)
22:16/0/physics_layer_0/angular_velocity = 0.0
22:16/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
23:16/0 = 0
23:16/0/physics_layer_0/linear_velocity = Vector2(0, 0)
23:16/0/physics_layer_0/angular_velocity = 0.0
23:16/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
24:16/0 = 0
24:16/0/physics_layer_0/linear_velocity = Vector2(0, 0)
24:16/0/physics_layer_0/angular_velocity = 0.0
24:16/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
25:16/0 = 0
25:16/0/physics_layer_0/linear_velocity = Vector2(0, 0)
25:16/0/physics_layer_0/angular_velocity = 0.0
25:16/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
26:16/0 = 0
26:16/0/physics_layer_0/linear_velocity = Vector2(0, 0)
26:16/0/physics_layer_0/angular_velocity = 0.0
26:16/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
27:16/0 = 0
27:16/0/physics_layer_0/linear_velocity = Vector2(0, 0)
27:16/0/physics_layer_0/angular_velocity = 0.0
27:16/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
28:16/0 = 0
28:16/0/physics_layer_0/linear_velocity = Vector2(0, 0)
28:16/0/physics_layer_0/angular_velocity = 0.0
28:16/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
29:16/0 = 0
29:16/0/physics_layer_0/linear_velocity = Vector2(0, 0)
29:16/0/physics_layer_0/angular_velocity = 0.0
29:16/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
30:16/0 = 0
30:16/0/physics_layer_0/linear_velocity = Vector2(0, 0)
30:16/0/physics_layer_0/angular_velocity = 0.0
30:16/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
31:16/0 = 0
31:16/0/physics_layer_0/linear_velocity = Vector2(0, 0)
31:16/0/physics_layer_0/angular_velocity = 0.0
31:16/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
32:16/0 = 0
32:16/0/physics_layer_0/linear_velocity = Vector2(0, 0)
32:16/0/physics_layer_0/angular_velocity = 0.0
32:16/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
33:16/0 = 0
33:16/0/physics_layer_0/linear_velocity = Vector2(0, 0)
33:16/0/physics_layer_0/angular_velocity = 0.0
33:16/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
34:16/0 = 0
34:16/0/physics_layer_0/linear_velocity = Vector2(0, 0)
34:16/0/physics_layer_0/angular_velocity = 0.0
34:16/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
35:16/0 = 0
35:16/0/physics_layer_0/linear_velocity = Vector2(0, 0)
35:16/0/physics_layer_0/angular_velocity = 0.0
35:16/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
36:16/0 = 0
36:16/0/physics_layer_0/linear_velocity = Vector2(0, 0)
36:16/0/physics_layer_0/angular_velocity = 0.0
36:16/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
37:16/0 = 0
37:16/0/physics_layer_0/linear_velocity = Vector2(0, 0)
37:16/0/physics_layer_0/angular_velocity = 0.0
37:16/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
38:16/0 = 0
38:16/0/physics_layer_0/linear_velocity = Vector2(0, 0)
38:16/0/physics_layer_0/angular_velocity = 0.0
38:16/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
39:16/0 = 0
39:16/0/physics_layer_0/linear_velocity = Vector2(0, 0)
39:16/0/physics_layer_0/angular_velocity = 0.0
39:16/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
40:16/0 = 0
40:16/0/physics_layer_0/linear_velocity = Vector2(0, 0)
40:16/0/physics_layer_0/angular_velocity = 0.0
40:16/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
41:16/0 = 0
41:16/0/physics_layer_0/linear_velocity = Vector2(0, 0)
41:16/0/physics_layer_0/angular_velocity = 0.0
41:16/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
42:16/0 = 0
42:16/0/physics_layer_0/linear_velocity = Vector2(0, 0)
42:16/0/physics_layer_0/angular_velocity = 0.0
42:16/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
43:16/0 = 0
43:16/0/physics_layer_0/linear_velocity = Vector2(0, 0)
43:16/0/physics_layer_0/angular_velocity = 0.0
44:16/0 = 0
44:16/0/physics_layer_0/linear_velocity = Vector2(0, 0)
44:16/0/physics_layer_0/angular_velocity = 0.0
45:16/0 = 0
45:16/0/physics_layer_0/linear_velocity = Vector2(0, 0)
45:16/0/physics_layer_0/angular_velocity = 0.0
46:16/0 = 0
46:16/0/physics_layer_0/linear_velocity = Vector2(0, 0)
46:16/0/physics_layer_0/angular_velocity = 0.0
47:16/0 = 0
47:16/0/physics_layer_0/linear_velocity = Vector2(0, 0)
47:16/0/physics_layer_0/angular_velocity = 0.0
48:16/0 = 0
48:16/0/physics_layer_0/linear_velocity = Vector2(0, 0)
48:16/0/physics_layer_0/angular_velocity = 0.0
49:16/0 = 0
49:16/0/physics_layer_0/linear_velocity = Vector2(0, 0)
49:16/0/physics_layer_0/angular_velocity = 0.0
50:16/0 = 0
50:16/0/physics_layer_0/linear_velocity = Vector2(0, 0)
50:16/0/physics_layer_0/angular_velocity = 0.0
51:16/0 = 0
51:16/0/physics_layer_0/linear_velocity = Vector2(0, 0)
51:16/0/physics_layer_0/angular_velocity = 0.0
52:16/0 = 0
52:16/0/physics_layer_0/linear_velocity = Vector2(0, 0)
52:16/0/physics_layer_0/angular_velocity = 0.0
53:16/0 = 0
53:16/0/physics_layer_0/linear_velocity = Vector2(0, 0)
53:16/0/physics_layer_0/angular_velocity = 0.0
54:16/0 = 0
54:16/0/physics_layer_0/linear_velocity = Vector2(0, 0)
54:16/0/physics_layer_0/angular_velocity = 0.0
55:16/0 = 0
55:16/0/physics_layer_0/linear_velocity = Vector2(0, 0)
55:16/0/physics_layer_0/angular_velocity = 0.0
56:16/0 = 0
56:16/0/physics_layer_0/linear_velocity = Vector2(0, 0)
56:16/0/physics_layer_0/angular_velocity = 0.0
57:16/0 = 0
57:16/0/physics_layer_0/linear_velocity = Vector2(0, 0)
57:16/0/physics_layer_0/angular_velocity = 0.0
58:16/0 = 0
58:16/0/physics_layer_0/linear_velocity = Vector2(0, 0)
58:16/0/physics_layer_0/angular_velocity = 0.0
58:16/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
59:16/0 = 0
59:16/0/physics_layer_0/linear_velocity = Vector2(0, 0)
59:16/0/physics_layer_0/angular_velocity = 0.0
59:16/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
60:16/0 = 0
60:16/0/physics_layer_0/linear_velocity = Vector2(0, 0)
60:16/0/physics_layer_0/angular_velocity = 0.0
60:16/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
61:16/0 = 0
61:16/0/physics_layer_0/linear_velocity = Vector2(0, 0)
61:16/0/physics_layer_0/angular_velocity = 0.0
61:16/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
62:16/0 = 0
62:16/0/physics_layer_0/linear_velocity = Vector2(0, 0)
62:16/0/physics_layer_0/angular_velocity = 0.0
62:16/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
63:16/0 = 0
63:16/0/physics_layer_0/linear_velocity = Vector2(0, 0)
63:16/0/physics_layer_0/angular_velocity = 0.0
63:16/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
64:16/0 = 0
64:16/0/physics_layer_0/linear_velocity = Vector2(0, 0)
64:16/0/physics_layer_0/angular_velocity = 0.0
64:16/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
65:16/0 = 0
65:16/0/physics_layer_0/linear_velocity = Vector2(0, 0)
65:16/0/physics_layer_0/angular_velocity = 0.0
65:16/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
66:16/0 = 0
66:16/0/physics_layer_0/linear_velocity = Vector2(0, 0)
66:16/0/physics_layer_0/angular_velocity = 0.0
66:16/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
1:17/0 = 0
1:17/0/physics_layer_0/linear_velocity = Vector2(0, 0)
1:17/0/physics_layer_0/angular_velocity = 0.0
1:17/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
2:17/0 = 0
2:17/0/physics_layer_0/linear_velocity = Vector2(0, 0)
2:17/0/physics_layer_0/angular_velocity = 0.0
2:17/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
3:17/0 = 0
3:17/0/physics_layer_0/linear_velocity = Vector2(0, 0)
3:17/0/physics_layer_0/angular_velocity = 0.0
3:17/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
4:17/0 = 0
4:17/0/physics_layer_0/linear_velocity = Vector2(0, 0)
4:17/0/physics_layer_0/angular_velocity = 0.0
4:17/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
5:17/0 = 0
5:17/0/physics_layer_0/linear_velocity = Vector2(0, 0)
5:17/0/physics_layer_0/angular_velocity = 0.0
5:17/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
6:17/0 = 0
6:17/0/physics_layer_0/linear_velocity = Vector2(0, 0)
6:17/0/physics_layer_0/angular_velocity = 0.0
6:17/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
7:17/0 = 0
7:17/0/physics_layer_0/linear_velocity = Vector2(0, 0)
7:17/0/physics_layer_0/angular_velocity = 0.0
7:17/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
8:17/0 = 0
8:17/0/physics_layer_0/linear_velocity = Vector2(0, 0)
8:17/0/physics_layer_0/angular_velocity = 0.0
8:17/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
9:17/0 = 0
9:17/0/physics_layer_0/linear_velocity = Vector2(0, 0)
9:17/0/physics_layer_0/angular_velocity = 0.0
9:17/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
10:17/0 = 0
10:17/0/physics_layer_0/linear_velocity = Vector2(0, 0)
10:17/0/physics_layer_0/angular_velocity = 0.0
10:17/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
11:17/0 = 0
11:17/0/physics_layer_0/linear_velocity = Vector2(0, 0)
11:17/0/physics_layer_0/angular_velocity = 0.0
11:17/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
12:17/0 = 0
12:17/0/physics_layer_0/linear_velocity = Vector2(0, 0)
12:17/0/physics_layer_0/angular_velocity = 0.0
12:17/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
13:17/0 = 0
13:17/0/physics_layer_0/linear_velocity = Vector2(0, 0)
13:17/0/physics_layer_0/angular_velocity = 0.0
13:17/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
14:17/0 = 0
14:17/0/physics_layer_0/linear_velocity = Vector2(0, 0)
14:17/0/physics_layer_0/angular_velocity = 0.0
14:17/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
15:17/0 = 0
15:17/0/physics_layer_0/linear_velocity = Vector2(0, 0)
15:17/0/physics_layer_0/angular_velocity = 0.0
15:17/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
16:17/0 = 0
16:17/0/physics_layer_0/linear_velocity = Vector2(0, 0)
16:17/0/physics_layer_0/angular_velocity = 0.0
16:17/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
17:17/0 = 0
17:17/0/physics_layer_0/linear_velocity = Vector2(0, 0)
17:17/0/physics_layer_0/angular_velocity = 0.0
17:17/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
18:17/0 = 0
18:17/0/physics_layer_0/linear_velocity = Vector2(0, 0)
18:17/0/physics_layer_0/angular_velocity = 0.0
18:17/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
19:17/0 = 0
19:17/0/physics_layer_0/linear_velocity = Vector2(0, 0)
19:17/0/physics_layer_0/angular_velocity = 0.0
19:17/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
20:17/0 = 0
20:17/0/physics_layer_0/linear_velocity = Vector2(0, 0)
20:17/0/physics_layer_0/angular_velocity = 0.0
20:17/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
21:17/0 = 0
21:17/0/physics_layer_0/linear_velocity = Vector2(0, 0)
21:17/0/physics_layer_0/angular_velocity = 0.0
21:17/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
22:17/0 = 0
22:17/0/physics_layer_0/linear_velocity = Vector2(0, 0)
22:17/0/physics_layer_0/angular_velocity = 0.0
22:17/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
23:17/0 = 0
23:17/0/physics_layer_0/linear_velocity = Vector2(0, 0)
23:17/0/physics_layer_0/angular_velocity = 0.0
23:17/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
24:17/0 = 0
24:17/0/physics_layer_0/linear_velocity = Vector2(0, 0)
24:17/0/physics_layer_0/angular_velocity = 0.0
24:17/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
25:17/0 = 0
25:17/0/physics_layer_0/linear_velocity = Vector2(0, 0)
25:17/0/physics_layer_0/angular_velocity = 0.0
25:17/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
26:17/0 = 0
26:17/0/physics_layer_0/linear_velocity = Vector2(0, 0)
26:17/0/physics_layer_0/angular_velocity = 0.0
26:17/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
27:17/0 = 0
27:17/0/physics_layer_0/linear_velocity = Vector2(0, 0)
27:17/0/physics_layer_0/angular_velocity = 0.0
27:17/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
28:17/0 = 0
28:17/0/physics_layer_0/linear_velocity = Vector2(0, 0)
28:17/0/physics_layer_0/angular_velocity = 0.0
28:17/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
29:17/0 = 0
29:17/0/physics_layer_0/linear_velocity = Vector2(0, 0)
29:17/0/physics_layer_0/angular_velocity = 0.0
29:17/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
30:17/0 = 0
30:17/0/physics_layer_0/linear_velocity = Vector2(0, 0)
30:17/0/physics_layer_0/angular_velocity = 0.0
30:17/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
31:17/0 = 0
31:17/0/physics_layer_0/linear_velocity = Vector2(0, 0)
31:17/0/physics_layer_0/angular_velocity = 0.0
31:17/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
32:17/0 = 0
32:17/0/physics_layer_0/linear_velocity = Vector2(0, 0)
32:17/0/physics_layer_0/angular_velocity = 0.0
32:17/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
33:17/0 = 0
33:17/0/physics_layer_0/linear_velocity = Vector2(0, 0)
33:17/0/physics_layer_0/angular_velocity = 0.0
33:17/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
34:17/0 = 0
34:17/0/physics_layer_0/linear_velocity = Vector2(0, 0)
34:17/0/physics_layer_0/angular_velocity = 0.0
34:17/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
35:17/0 = 0
35:17/0/physics_layer_0/linear_velocity = Vector2(0, 0)
35:17/0/physics_layer_0/angular_velocity = 0.0
35:17/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
36:17/0 = 0
36:17/0/physics_layer_0/linear_velocity = Vector2(0, 0)
36:17/0/physics_layer_0/angular_velocity = 0.0
36:17/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
37:17/0 = 0
37:17/0/physics_layer_0/linear_velocity = Vector2(0, 0)
37:17/0/physics_layer_0/angular_velocity = 0.0
37:17/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
38:17/0 = 0
38:17/0/physics_layer_0/linear_velocity = Vector2(0, 0)
38:17/0/physics_layer_0/angular_velocity = 0.0
38:17/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
39:17/0 = 0
39:17/0/physics_layer_0/linear_velocity = Vector2(0, 0)
39:17/0/physics_layer_0/angular_velocity = 0.0
39:17/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
40:17/0 = 0
40:17/0/physics_layer_0/linear_velocity = Vector2(0, 0)
40:17/0/physics_layer_0/angular_velocity = 0.0
40:17/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
41:17/0 = 0
41:17/0/physics_layer_0/linear_velocity = Vector2(0, 0)
41:17/0/physics_layer_0/angular_velocity = 0.0
41:17/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
42:17/0 = 0
42:17/0/physics_layer_0/linear_velocity = Vector2(0, 0)
42:17/0/physics_layer_0/angular_velocity = 0.0
42:17/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
43:17/0 = 0
43:17/0/physics_layer_0/linear_velocity = Vector2(0, 0)
43:17/0/physics_layer_0/angular_velocity = 0.0
44:17/0 = 0
44:17/0/physics_layer_0/linear_velocity = Vector2(0, 0)
44:17/0/physics_layer_0/angular_velocity = 0.0
45:17/0 = 0
45:17/0/physics_layer_0/linear_velocity = Vector2(0, 0)
45:17/0/physics_layer_0/angular_velocity = 0.0
46:17/0 = 0
46:17/0/physics_layer_0/linear_velocity = Vector2(0, 0)
46:17/0/physics_layer_0/angular_velocity = 0.0
47:17/0 = 0
47:17/0/physics_layer_0/linear_velocity = Vector2(0, 0)
47:17/0/physics_layer_0/angular_velocity = 0.0
48:17/0 = 0
48:17/0/physics_layer_0/linear_velocity = Vector2(0, 0)
48:17/0/physics_layer_0/angular_velocity = 0.0
49:17/0 = 0
49:17/0/physics_layer_0/linear_velocity = Vector2(0, 0)
49:17/0/physics_layer_0/angular_velocity = 0.0
50:17/0 = 0
50:17/0/physics_layer_0/linear_velocity = Vector2(0, 0)
50:17/0/physics_layer_0/angular_velocity = 0.0
51:17/0 = 0
51:17/0/physics_layer_0/linear_velocity = Vector2(0, 0)
51:17/0/physics_layer_0/angular_velocity = 0.0
52:17/0 = 0
52:17/0/physics_layer_0/linear_velocity = Vector2(0, 0)
52:17/0/physics_layer_0/angular_velocity = 0.0
53:17/0 = 0
53:17/0/physics_layer_0/linear_velocity = Vector2(0, 0)
53:17/0/physics_layer_0/angular_velocity = 0.0
54:17/0 = 0
54:17/0/physics_layer_0/linear_velocity = Vector2(0, 0)
54:17/0/physics_layer_0/angular_velocity = 0.0
55:17/0 = 0
55:17/0/physics_layer_0/linear_velocity = Vector2(0, 0)
55:17/0/physics_layer_0/angular_velocity = 0.0
56:17/0 = 0
56:17/0/physics_layer_0/linear_velocity = Vector2(0, 0)
56:17/0/physics_layer_0/angular_velocity = 0.0
57:17/0 = 0
57:17/0/physics_layer_0/linear_velocity = Vector2(0, 0)
57:17/0/physics_layer_0/angular_velocity = 0.0
58:17/0 = 0
58:17/0/physics_layer_0/linear_velocity = Vector2(0, 0)
58:17/0/physics_layer_0/angular_velocity = 0.0
58:17/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
59:17/0 = 0
59:17/0/physics_layer_0/linear_velocity = Vector2(0, 0)
59:17/0/physics_layer_0/angular_velocity = 0.0
59:17/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
60:17/0 = 0
60:17/0/physics_layer_0/linear_velocity = Vector2(0, 0)
60:17/0/physics_layer_0/angular_velocity = 0.0
60:17/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
61:17/0 = 0
61:17/0/physics_layer_0/linear_velocity = Vector2(0, 0)
61:17/0/physics_layer_0/angular_velocity = 0.0
61:17/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
62:17/0 = 0
62:17/0/physics_layer_0/linear_velocity = Vector2(0, 0)
62:17/0/physics_layer_0/angular_velocity = 0.0
62:17/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
63:17/0 = 0
63:17/0/physics_layer_0/linear_velocity = Vector2(0, 0)
63:17/0/physics_layer_0/angular_velocity = 0.0
63:17/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
64:17/0 = 0
64:17/0/physics_layer_0/linear_velocity = Vector2(0, 0)
64:17/0/physics_layer_0/angular_velocity = 0.0
64:17/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
65:17/0 = 0
65:17/0/physics_layer_0/linear_velocity = Vector2(0, 0)
65:17/0/physics_layer_0/angular_velocity = 0.0
65:17/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
66:17/0 = 0
66:17/0/physics_layer_0/linear_velocity = Vector2(0, 0)
66:17/0/physics_layer_0/angular_velocity = 0.0
66:17/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
1:18/0 = 0
1:18/0/physics_layer_0/linear_velocity = Vector2(0, 0)
1:18/0/physics_layer_0/angular_velocity = 0.0
1:18/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
2:18/0 = 0
2:18/0/physics_layer_0/linear_velocity = Vector2(0, 0)
2:18/0/physics_layer_0/angular_velocity = 0.0
2:18/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
3:18/0 = 0
3:18/0/physics_layer_0/linear_velocity = Vector2(0, 0)
3:18/0/physics_layer_0/angular_velocity = 0.0
3:18/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
4:18/0 = 0
4:18/0/physics_layer_0/linear_velocity = Vector2(0, 0)
4:18/0/physics_layer_0/angular_velocity = 0.0
4:18/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
5:18/0 = 0
5:18/0/physics_layer_0/linear_velocity = Vector2(0, 0)
5:18/0/physics_layer_0/angular_velocity = 0.0
5:18/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
6:18/0 = 0
6:18/0/physics_layer_0/linear_velocity = Vector2(0, 0)
6:18/0/physics_layer_0/angular_velocity = 0.0
6:18/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
7:18/0 = 0
7:18/0/physics_layer_0/linear_velocity = Vector2(0, 0)
7:18/0/physics_layer_0/angular_velocity = 0.0
7:18/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
8:18/0 = 0
8:18/0/physics_layer_0/linear_velocity = Vector2(0, 0)
8:18/0/physics_layer_0/angular_velocity = 0.0
8:18/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
9:18/0 = 0
9:18/0/physics_layer_0/linear_velocity = Vector2(0, 0)
9:18/0/physics_layer_0/angular_velocity = 0.0
9:18/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
10:18/0 = 0
10:18/0/physics_layer_0/linear_velocity = Vector2(0, 0)
10:18/0/physics_layer_0/angular_velocity = 0.0
10:18/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
11:18/0 = 0
11:18/0/physics_layer_0/linear_velocity = Vector2(0, 0)
11:18/0/physics_layer_0/angular_velocity = 0.0
11:18/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
12:18/0 = 0
12:18/0/physics_layer_0/linear_velocity = Vector2(0, 0)
12:18/0/physics_layer_0/angular_velocity = 0.0
12:18/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
13:18/0 = 0
13:18/0/physics_layer_0/linear_velocity = Vector2(0, 0)
13:18/0/physics_layer_0/angular_velocity = 0.0
13:18/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
14:18/0 = 0
14:18/0/physics_layer_0/linear_velocity = Vector2(0, 0)
14:18/0/physics_layer_0/angular_velocity = 0.0
14:18/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
15:18/0 = 0
15:18/0/physics_layer_0/linear_velocity = Vector2(0, 0)
15:18/0/physics_layer_0/angular_velocity = 0.0
15:18/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
16:18/0 = 0
16:18/0/physics_layer_0/linear_velocity = Vector2(0, 0)
16:18/0/physics_layer_0/angular_velocity = 0.0
16:18/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
17:18/0 = 0
17:18/0/physics_layer_0/linear_velocity = Vector2(0, 0)
17:18/0/physics_layer_0/angular_velocity = 0.0
17:18/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
18:18/0 = 0
18:18/0/physics_layer_0/linear_velocity = Vector2(0, 0)
18:18/0/physics_layer_0/angular_velocity = 0.0
18:18/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
19:18/0 = 0
19:18/0/physics_layer_0/linear_velocity = Vector2(0, 0)
19:18/0/physics_layer_0/angular_velocity = 0.0
19:18/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
20:18/0 = 0
20:18/0/physics_layer_0/linear_velocity = Vector2(0, 0)
20:18/0/physics_layer_0/angular_velocity = 0.0
20:18/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
21:18/0 = 0
21:18/0/physics_layer_0/linear_velocity = Vector2(0, 0)
21:18/0/physics_layer_0/angular_velocity = 0.0
21:18/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
22:18/0 = 0
22:18/0/physics_layer_0/linear_velocity = Vector2(0, 0)
22:18/0/physics_layer_0/angular_velocity = 0.0
22:18/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
23:18/0 = 0
23:18/0/physics_layer_0/linear_velocity = Vector2(0, 0)
23:18/0/physics_layer_0/angular_velocity = 0.0
23:18/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
24:18/0 = 0
24:18/0/physics_layer_0/linear_velocity = Vector2(0, 0)
24:18/0/physics_layer_0/angular_velocity = 0.0
24:18/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
25:18/0 = 0
25:18/0/physics_layer_0/linear_velocity = Vector2(0, 0)
25:18/0/physics_layer_0/angular_velocity = 0.0
25:18/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
26:18/0 = 0
26:18/0/physics_layer_0/linear_velocity = Vector2(0, 0)
26:18/0/physics_layer_0/angular_velocity = 0.0
26:18/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
27:18/0 = 0
27:18/0/physics_layer_0/linear_velocity = Vector2(0, 0)
27:18/0/physics_layer_0/angular_velocity = 0.0
27:18/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
28:18/0 = 0
28:18/0/physics_layer_0/linear_velocity = Vector2(0, 0)
28:18/0/physics_layer_0/angular_velocity = 0.0
28:18/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
29:18/0 = 0
29:18/0/physics_layer_0/linear_velocity = Vector2(0, 0)
29:18/0/physics_layer_0/angular_velocity = 0.0
29:18/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
30:18/0 = 0
30:18/0/physics_layer_0/linear_velocity = Vector2(0, 0)
30:18/0/physics_layer_0/angular_velocity = 0.0
30:18/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
31:18/0 = 0
31:18/0/physics_layer_0/linear_velocity = Vector2(0, 0)
31:18/0/physics_layer_0/angular_velocity = 0.0
31:18/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
32:18/0 = 0
32:18/0/physics_layer_0/linear_velocity = Vector2(0, 0)
32:18/0/physics_layer_0/angular_velocity = 0.0
32:18/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
33:18/0 = 0
33:18/0/physics_layer_0/linear_velocity = Vector2(0, 0)
33:18/0/physics_layer_0/angular_velocity = 0.0
33:18/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
34:18/0 = 0
34:18/0/physics_layer_0/linear_velocity = Vector2(0, 0)
34:18/0/physics_layer_0/angular_velocity = 0.0
34:18/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
35:18/0 = 0
35:18/0/physics_layer_0/linear_velocity = Vector2(0, 0)
35:18/0/physics_layer_0/angular_velocity = 0.0
35:18/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
36:18/0 = 0
36:18/0/physics_layer_0/linear_velocity = Vector2(0, 0)
36:18/0/physics_layer_0/angular_velocity = 0.0
36:18/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
37:18/0 = 0
37:18/0/physics_layer_0/linear_velocity = Vector2(0, 0)
37:18/0/physics_layer_0/angular_velocity = 0.0
37:18/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
38:18/0 = 0
38:18/0/physics_layer_0/linear_velocity = Vector2(0, 0)
38:18/0/physics_layer_0/angular_velocity = 0.0
38:18/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
39:18/0 = 0
39:18/0/physics_layer_0/linear_velocity = Vector2(0, 0)
39:18/0/physics_layer_0/angular_velocity = 0.0
39:18/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
40:18/0 = 0
40:18/0/physics_layer_0/linear_velocity = Vector2(0, 0)
40:18/0/physics_layer_0/angular_velocity = 0.0
40:18/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
41:18/0 = 0
41:18/0/physics_layer_0/linear_velocity = Vector2(0, 0)
41:18/0/physics_layer_0/angular_velocity = 0.0
41:18/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
42:18/0 = 0
42:18/0/physics_layer_0/linear_velocity = Vector2(0, 0)
42:18/0/physics_layer_0/angular_velocity = 0.0
42:18/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
43:18/0 = 0
43:18/0/physics_layer_0/linear_velocity = Vector2(0, 0)
43:18/0/physics_layer_0/angular_velocity = 0.0
44:18/0 = 0
44:18/0/physics_layer_0/linear_velocity = Vector2(0, 0)
44:18/0/physics_layer_0/angular_velocity = 0.0
45:18/0 = 0
45:18/0/physics_layer_0/linear_velocity = Vector2(0, 0)
45:18/0/physics_layer_0/angular_velocity = 0.0
46:18/0 = 0
46:18/0/physics_layer_0/linear_velocity = Vector2(0, 0)
46:18/0/physics_layer_0/angular_velocity = 0.0
47:18/0 = 0
47:18/0/physics_layer_0/linear_velocity = Vector2(0, 0)
47:18/0/physics_layer_0/angular_velocity = 0.0
48:18/0 = 0
48:18/0/physics_layer_0/linear_velocity = Vector2(0, 0)
48:18/0/physics_layer_0/angular_velocity = 0.0
49:18/0 = 0
49:18/0/physics_layer_0/linear_velocity = Vector2(0, 0)
49:18/0/physics_layer_0/angular_velocity = 0.0
50:18/0 = 0
50:18/0/physics_layer_0/linear_velocity = Vector2(0, 0)
50:18/0/physics_layer_0/angular_velocity = 0.0
51:18/0 = 0
51:18/0/physics_layer_0/linear_velocity = Vector2(0, 0)
51:18/0/physics_layer_0/angular_velocity = 0.0
52:18/0 = 0
52:18/0/physics_layer_0/linear_velocity = Vector2(0, 0)
52:18/0/physics_layer_0/angular_velocity = 0.0
53:18/0 = 0
53:18/0/physics_layer_0/linear_velocity = Vector2(0, 0)
53:18/0/physics_layer_0/angular_velocity = 0.0
54:18/0 = 0
54:18/0/physics_layer_0/linear_velocity = Vector2(0, 0)
54:18/0/physics_layer_0/angular_velocity = 0.0
55:18/0 = 0
55:18/0/physics_layer_0/linear_velocity = Vector2(0, 0)
55:18/0/physics_layer_0/angular_velocity = 0.0
56:18/0 = 0
56:18/0/physics_layer_0/linear_velocity = Vector2(0, 0)
56:18/0/physics_layer_0/angular_velocity = 0.0
57:18/0 = 0
57:18/0/physics_layer_0/linear_velocity = Vector2(0, 0)
57:18/0/physics_layer_0/angular_velocity = 0.0
58:18/0 = 0
58:18/0/physics_layer_0/linear_velocity = Vector2(0, 0)
58:18/0/physics_layer_0/angular_velocity = 0.0
58:18/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
59:18/0 = 0
59:18/0/physics_layer_0/linear_velocity = Vector2(0, 0)
59:18/0/physics_layer_0/angular_velocity = 0.0
59:18/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
60:18/0 = 0
60:18/0/physics_layer_0/linear_velocity = Vector2(0, 0)
60:18/0/physics_layer_0/angular_velocity = 0.0
60:18/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
61:18/0 = 0
61:18/0/physics_layer_0/linear_velocity = Vector2(0, 0)
61:18/0/physics_layer_0/angular_velocity = 0.0
61:18/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
62:18/0 = 0
62:18/0/physics_layer_0/linear_velocity = Vector2(0, 0)
62:18/0/physics_layer_0/angular_velocity = 0.0
62:18/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
63:18/0 = 0
63:18/0/physics_layer_0/linear_velocity = Vector2(0, 0)
63:18/0/physics_layer_0/angular_velocity = 0.0
63:18/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
64:18/0 = 0
64:18/0/physics_layer_0/linear_velocity = Vector2(0, 0)
64:18/0/physics_layer_0/angular_velocity = 0.0
64:18/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
65:18/0 = 0
65:18/0/physics_layer_0/linear_velocity = Vector2(0, 0)
65:18/0/physics_layer_0/angular_velocity = 0.0
65:18/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
66:18/0 = 0
66:18/0/physics_layer_0/linear_velocity = Vector2(0, 0)
66:18/0/physics_layer_0/angular_velocity = 0.0
66:18/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
1:19/0 = 0
1:19/0/physics_layer_0/linear_velocity = Vector2(0, 0)
1:19/0/physics_layer_0/angular_velocity = 0.0
1:19/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
2:19/0 = 0
2:19/0/physics_layer_0/linear_velocity = Vector2(0, 0)
2:19/0/physics_layer_0/angular_velocity = 0.0
2:19/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
3:19/0 = 0
3:19/0/physics_layer_0/linear_velocity = Vector2(0, 0)
3:19/0/physics_layer_0/angular_velocity = 0.0
3:19/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
4:19/0 = 0
4:19/0/physics_layer_0/linear_velocity = Vector2(0, 0)
4:19/0/physics_layer_0/angular_velocity = 0.0
4:19/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
5:19/0 = 0
5:19/0/physics_layer_0/linear_velocity = Vector2(0, 0)
5:19/0/physics_layer_0/angular_velocity = 0.0
5:19/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
6:19/0 = 0
6:19/0/physics_layer_0/linear_velocity = Vector2(0, 0)
6:19/0/physics_layer_0/angular_velocity = 0.0
6:19/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
7:19/0 = 0
7:19/0/physics_layer_0/linear_velocity = Vector2(0, 0)
7:19/0/physics_layer_0/angular_velocity = 0.0
7:19/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
8:19/0 = 0
8:19/0/physics_layer_0/linear_velocity = Vector2(0, 0)
8:19/0/physics_layer_0/angular_velocity = 0.0
8:19/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
9:19/0 = 0
9:19/0/physics_layer_0/linear_velocity = Vector2(0, 0)
9:19/0/physics_layer_0/angular_velocity = 0.0
9:19/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
10:19/0 = 0
10:19/0/physics_layer_0/linear_velocity = Vector2(0, 0)
10:19/0/physics_layer_0/angular_velocity = 0.0
10:19/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
11:19/0 = 0
11:19/0/physics_layer_0/linear_velocity = Vector2(0, 0)
11:19/0/physics_layer_0/angular_velocity = 0.0
11:19/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
12:19/0 = 0
12:19/0/physics_layer_0/linear_velocity = Vector2(0, 0)
12:19/0/physics_layer_0/angular_velocity = 0.0
12:19/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
13:19/0 = 0
13:19/0/physics_layer_0/linear_velocity = Vector2(0, 0)
13:19/0/physics_layer_0/angular_velocity = 0.0
13:19/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
14:19/0 = 0
14:19/0/physics_layer_0/linear_velocity = Vector2(0, 0)
14:19/0/physics_layer_0/angular_velocity = 0.0
14:19/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
15:19/0 = 0
15:19/0/physics_layer_0/linear_velocity = Vector2(0, 0)
15:19/0/physics_layer_0/angular_velocity = 0.0
15:19/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
16:19/0 = 0
16:19/0/physics_layer_0/linear_velocity = Vector2(0, 0)
16:19/0/physics_layer_0/angular_velocity = 0.0
16:19/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
17:19/0 = 0
17:19/0/physics_layer_0/linear_velocity = Vector2(0, 0)
17:19/0/physics_layer_0/angular_velocity = 0.0
17:19/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
18:19/0 = 0
18:19/0/physics_layer_0/linear_velocity = Vector2(0, 0)
18:19/0/physics_layer_0/angular_velocity = 0.0
18:19/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
55:19/0 = 0
55:19/0/physics_layer_0/linear_velocity = Vector2(0, 0)
55:19/0/physics_layer_0/angular_velocity = 0.0
55:19/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
56:19/0 = 0
56:19/0/physics_layer_0/linear_velocity = Vector2(0, 0)
56:19/0/physics_layer_0/angular_velocity = 0.0
56:19/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
57:19/0 = 0
57:19/0/physics_layer_0/linear_velocity = Vector2(0, 0)
57:19/0/physics_layer_0/angular_velocity = 0.0
57:19/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
58:19/0 = 0
58:19/0/physics_layer_0/linear_velocity = Vector2(0, 0)
58:19/0/physics_layer_0/angular_velocity = 0.0
58:19/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
59:19/0 = 0
59:19/0/physics_layer_0/linear_velocity = Vector2(0, 0)
59:19/0/physics_layer_0/angular_velocity = 0.0
59:19/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
60:19/0 = 0
60:19/0/physics_layer_0/linear_velocity = Vector2(0, 0)
60:19/0/physics_layer_0/angular_velocity = 0.0
60:19/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
61:19/0 = 0
61:19/0/physics_layer_0/linear_velocity = Vector2(0, 0)
61:19/0/physics_layer_0/angular_velocity = 0.0
61:19/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
62:19/0 = 0
62:19/0/physics_layer_0/linear_velocity = Vector2(0, 0)
62:19/0/physics_layer_0/angular_velocity = 0.0
62:19/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
63:19/0 = 0
63:19/0/physics_layer_0/linear_velocity = Vector2(0, 0)
63:19/0/physics_layer_0/angular_velocity = 0.0
63:19/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
1:20/0 = 0
1:20/0/physics_layer_0/linear_velocity = Vector2(0, 0)
1:20/0/physics_layer_0/angular_velocity = 0.0
1:20/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
2:20/0 = 0
2:20/0/physics_layer_0/linear_velocity = Vector2(0, 0)
2:20/0/physics_layer_0/angular_velocity = 0.0
2:20/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
3:20/0 = 0
3:20/0/physics_layer_0/linear_velocity = Vector2(0, 0)
3:20/0/physics_layer_0/angular_velocity = 0.0
3:20/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
4:20/0 = 0
4:20/0/physics_layer_0/linear_velocity = Vector2(0, 0)
4:20/0/physics_layer_0/angular_velocity = 0.0
4:20/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
5:20/0 = 0
5:20/0/physics_layer_0/linear_velocity = Vector2(0, 0)
5:20/0/physics_layer_0/angular_velocity = 0.0
5:20/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
6:20/0 = 0
6:20/0/physics_layer_0/linear_velocity = Vector2(0, 0)
6:20/0/physics_layer_0/angular_velocity = 0.0
6:20/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
7:20/0 = 0
7:20/0/physics_layer_0/linear_velocity = Vector2(0, 0)
7:20/0/physics_layer_0/angular_velocity = 0.0
7:20/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
8:20/0 = 0
8:20/0/physics_layer_0/linear_velocity = Vector2(0, 0)
8:20/0/physics_layer_0/angular_velocity = 0.0
8:20/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
9:20/0 = 0
9:20/0/physics_layer_0/linear_velocity = Vector2(0, 0)
9:20/0/physics_layer_0/angular_velocity = 0.0
9:20/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
10:20/0 = 0
10:20/0/physics_layer_0/linear_velocity = Vector2(0, 0)
10:20/0/physics_layer_0/angular_velocity = 0.0
10:20/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
11:20/0 = 0
11:20/0/physics_layer_0/linear_velocity = Vector2(0, 0)
11:20/0/physics_layer_0/angular_velocity = 0.0
11:20/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
12:20/0 = 0
12:20/0/physics_layer_0/linear_velocity = Vector2(0, 0)
12:20/0/physics_layer_0/angular_velocity = 0.0
12:20/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
13:20/0 = 0
13:20/0/physics_layer_0/linear_velocity = Vector2(0, 0)
13:20/0/physics_layer_0/angular_velocity = 0.0
13:20/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
14:20/0 = 0
14:20/0/physics_layer_0/linear_velocity = Vector2(0, 0)
14:20/0/physics_layer_0/angular_velocity = 0.0
14:20/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
15:20/0 = 0
15:20/0/physics_layer_0/linear_velocity = Vector2(0, 0)
15:20/0/physics_layer_0/angular_velocity = 0.0
15:20/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
16:20/0 = 0
16:20/0/physics_layer_0/linear_velocity = Vector2(0, 0)
16:20/0/physics_layer_0/angular_velocity = 0.0
16:20/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
17:20/0 = 0
17:20/0/physics_layer_0/linear_velocity = Vector2(0, 0)
17:20/0/physics_layer_0/angular_velocity = 0.0
17:20/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
18:20/0 = 0
18:20/0/physics_layer_0/linear_velocity = Vector2(0, 0)
18:20/0/physics_layer_0/angular_velocity = 0.0
18:20/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
37:20/0 = 0
37:20/0/physics_layer_0/linear_velocity = Vector2(0, 0)
37:20/0/physics_layer_0/angular_velocity = 0.0
37:20/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, 3, 8, 3, 8, 8, -8, 8)
38:20/0 = 0
38:20/0/physics_layer_0/linear_velocity = Vector2(0, 0)
38:20/0/physics_layer_0/angular_velocity = 0.0
38:20/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, 3, 8, 3, 8, 8, -8, 8)
39:20/0 = 0
39:20/0/physics_layer_0/linear_velocity = Vector2(0, 0)
39:20/0/physics_layer_0/angular_velocity = 0.0
39:20/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, 3, 8, 3, 8, 8, -8, 8)
40:20/0 = 0
40:20/0/physics_layer_0/linear_velocity = Vector2(0, 0)
40:20/0/physics_layer_0/angular_velocity = 0.0
40:20/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, 3, 8, 3, 8, 8, -8, 8)
41:20/0 = 0
41:20/0/physics_layer_0/linear_velocity = Vector2(0, 0)
41:20/0/physics_layer_0/angular_velocity = 0.0
41:20/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, 3, 8, 3, 8, 8, -8, 8)
42:20/0 = 0
42:20/0/physics_layer_0/linear_velocity = Vector2(0, 0)
42:20/0/physics_layer_0/angular_velocity = 0.0
42:20/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, 3, 8, 3, 8, 8, -8, 8)
43:20/0 = 0
43:20/0/physics_layer_0/linear_velocity = Vector2(0, 0)
43:20/0/physics_layer_0/angular_velocity = 0.0
43:20/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, 3, 8, 3, 8, 8, -8, 8)
44:20/0 = 0
44:20/0/physics_layer_0/linear_velocity = Vector2(0, 0)
44:20/0/physics_layer_0/angular_velocity = 0.0
44:20/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, 3, 8, 3, 8, 8, -8, 8)
45:20/0 = 0
45:20/0/physics_layer_0/linear_velocity = Vector2(0, 0)
45:20/0/physics_layer_0/angular_velocity = 0.0
45:20/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, 3, 8, 3, 8, 8, -8, 8)
46:20/0 = 0
46:20/0/physics_layer_0/linear_velocity = Vector2(0, 0)
46:20/0/physics_layer_0/angular_velocity = 0.0
46:20/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
47:20/0 = 0
47:20/0/physics_layer_0/linear_velocity = Vector2(0, 0)
47:20/0/physics_layer_0/angular_velocity = 0.0
47:20/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
48:20/0 = 0
48:20/0/physics_layer_0/linear_velocity = Vector2(0, 0)
48:20/0/physics_layer_0/angular_velocity = 0.0
48:20/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
49:20/0 = 0
49:20/0/physics_layer_0/linear_velocity = Vector2(0, 0)
49:20/0/physics_layer_0/angular_velocity = 0.0
49:20/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
50:20/0 = 0
50:20/0/physics_layer_0/linear_velocity = Vector2(0, 0)
50:20/0/physics_layer_0/angular_velocity = 0.0
50:20/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
51:20/0 = 0
51:20/0/physics_layer_0/linear_velocity = Vector2(0, 0)
51:20/0/physics_layer_0/angular_velocity = 0.0
51:20/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
52:20/0 = 0
52:20/0/physics_layer_0/linear_velocity = Vector2(0, 0)
52:20/0/physics_layer_0/angular_velocity = 0.0
52:20/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
53:20/0 = 0
53:20/0/physics_layer_0/linear_velocity = Vector2(0, 0)
53:20/0/physics_layer_0/angular_velocity = 0.0
53:20/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
54:20/0 = 0
54:20/0/physics_layer_0/linear_velocity = Vector2(0, 0)
54:20/0/physics_layer_0/angular_velocity = 0.0
54:20/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
55:20/0 = 0
55:20/0/physics_layer_0/linear_velocity = Vector2(0, 0)
55:20/0/physics_layer_0/angular_velocity = 0.0
55:20/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
56:20/0 = 0
56:20/0/physics_layer_0/linear_velocity = Vector2(0, 0)
56:20/0/physics_layer_0/angular_velocity = 0.0
56:20/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
57:20/0 = 0
57:20/0/physics_layer_0/linear_velocity = Vector2(0, 0)
57:20/0/physics_layer_0/angular_velocity = 0.0
57:20/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
58:20/0 = 0
58:20/0/physics_layer_0/linear_velocity = Vector2(0, 0)
58:20/0/physics_layer_0/angular_velocity = 0.0
58:20/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
59:20/0 = 0
59:20/0/physics_layer_0/linear_velocity = Vector2(0, 0)
59:20/0/physics_layer_0/angular_velocity = 0.0
59:20/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
60:20/0 = 0
60:20/0/physics_layer_0/linear_velocity = Vector2(0, 0)
60:20/0/physics_layer_0/angular_velocity = 0.0
60:20/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
61:20/0 = 0
61:20/0/physics_layer_0/linear_velocity = Vector2(0, 0)
61:20/0/physics_layer_0/angular_velocity = 0.0
61:20/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
62:20/0 = 0
62:20/0/physics_layer_0/linear_velocity = Vector2(0, 0)
62:20/0/physics_layer_0/angular_velocity = 0.0
62:20/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
63:20/0 = 0
63:20/0/physics_layer_0/linear_velocity = Vector2(0, 0)
63:20/0/physics_layer_0/angular_velocity = 0.0
63:20/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
1:21/0 = 0
1:21/0/physics_layer_0/linear_velocity = Vector2(0, 0)
1:21/0/physics_layer_0/angular_velocity = 0.0
1:21/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
2:21/0 = 0
2:21/0/physics_layer_0/linear_velocity = Vector2(0, 0)
2:21/0/physics_layer_0/angular_velocity = 0.0
2:21/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
3:21/0 = 0
3:21/0/physics_layer_0/linear_velocity = Vector2(0, 0)
3:21/0/physics_layer_0/angular_velocity = 0.0
3:21/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
4:21/0 = 0
4:21/0/physics_layer_0/linear_velocity = Vector2(0, 0)
4:21/0/physics_layer_0/angular_velocity = 0.0
4:21/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
5:21/0 = 0
5:21/0/physics_layer_0/linear_velocity = Vector2(0, 0)
5:21/0/physics_layer_0/angular_velocity = 0.0
5:21/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
6:21/0 = 0
6:21/0/physics_layer_0/linear_velocity = Vector2(0, 0)
6:21/0/physics_layer_0/angular_velocity = 0.0
6:21/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
7:21/0 = 0
7:21/0/physics_layer_0/linear_velocity = Vector2(0, 0)
7:21/0/physics_layer_0/angular_velocity = 0.0
7:21/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
8:21/0 = 0
8:21/0/physics_layer_0/linear_velocity = Vector2(0, 0)
8:21/0/physics_layer_0/angular_velocity = 0.0
8:21/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
9:21/0 = 0
9:21/0/physics_layer_0/linear_velocity = Vector2(0, 0)
9:21/0/physics_layer_0/angular_velocity = 0.0
9:21/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
10:21/0 = 0
10:21/0/physics_layer_0/linear_velocity = Vector2(0, 0)
10:21/0/physics_layer_0/angular_velocity = 0.0
10:21/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
11:21/0 = 0
11:21/0/physics_layer_0/linear_velocity = Vector2(0, 0)
11:21/0/physics_layer_0/angular_velocity = 0.0
11:21/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
12:21/0 = 0
12:21/0/physics_layer_0/linear_velocity = Vector2(0, 0)
12:21/0/physics_layer_0/angular_velocity = 0.0
12:21/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
13:21/0 = 0
13:21/0/physics_layer_0/linear_velocity = Vector2(0, 0)
13:21/0/physics_layer_0/angular_velocity = 0.0
13:21/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
14:21/0 = 0
14:21/0/physics_layer_0/linear_velocity = Vector2(0, 0)
14:21/0/physics_layer_0/angular_velocity = 0.0
14:21/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
15:21/0 = 0
15:21/0/physics_layer_0/linear_velocity = Vector2(0, 0)
15:21/0/physics_layer_0/angular_velocity = 0.0
15:21/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
16:21/0 = 0
16:21/0/physics_layer_0/linear_velocity = Vector2(0, 0)
16:21/0/physics_layer_0/angular_velocity = 0.0
16:21/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
17:21/0 = 0
17:21/0/physics_layer_0/linear_velocity = Vector2(0, 0)
17:21/0/physics_layer_0/angular_velocity = 0.0
17:21/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
18:21/0 = 0
18:21/0/physics_layer_0/linear_velocity = Vector2(0, 0)
18:21/0/physics_layer_0/angular_velocity = 0.0
18:21/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
19:21/0 = 0
19:21/0/physics_layer_0/linear_velocity = Vector2(0, 0)
19:21/0/physics_layer_0/angular_velocity = 0.0
20:21/0 = 0
20:21/0/physics_layer_0/linear_velocity = Vector2(0, 0)
20:21/0/physics_layer_0/angular_velocity = 0.0
21:21/0 = 0
21:21/0/physics_layer_0/linear_velocity = Vector2(0, 0)
21:21/0/physics_layer_0/angular_velocity = 0.0
22:21/0 = 0
22:21/0/physics_layer_0/linear_velocity = Vector2(0, 0)
22:21/0/physics_layer_0/angular_velocity = 0.0
23:21/0 = 0
23:21/0/physics_layer_0/linear_velocity = Vector2(0, 0)
23:21/0/physics_layer_0/angular_velocity = 0.0
24:21/0 = 0
24:21/0/physics_layer_0/linear_velocity = Vector2(0, 0)
24:21/0/physics_layer_0/angular_velocity = 0.0
25:21/0 = 0
25:21/0/physics_layer_0/linear_velocity = Vector2(0, 0)
25:21/0/physics_layer_0/angular_velocity = 0.0
25:21/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -5, 8, -5, 8, 8, -8, 8)
26:21/0 = 0
26:21/0/physics_layer_0/linear_velocity = Vector2(0, 0)
26:21/0/physics_layer_0/angular_velocity = 0.0
26:21/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -5, 8, -5, 8, 8, -8, 8)
27:21/0 = 0
27:21/0/physics_layer_0/linear_velocity = Vector2(0, 0)
27:21/0/physics_layer_0/angular_velocity = 0.0
27:21/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -5, 8, -5, 8, 8, -8, 8)
28:21/0 = 0
28:21/0/physics_layer_0/linear_velocity = Vector2(0, 0)
28:21/0/physics_layer_0/angular_velocity = 0.0
28:21/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -5, 8, -5, 8, 8, -8, 8)
29:21/0 = 0
29:21/0/physics_layer_0/linear_velocity = Vector2(0, 0)
29:21/0/physics_layer_0/angular_velocity = 0.0
29:21/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -5, 8, -5, 8, 8, -8, 8)
30:21/0 = 0
30:21/0/physics_layer_0/linear_velocity = Vector2(0, 0)
30:21/0/physics_layer_0/angular_velocity = 0.0
30:21/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -5, 8, -5, 8, 8, -8, 8)
31:21/0 = 0
31:21/0/physics_layer_0/linear_velocity = Vector2(0, 0)
31:21/0/physics_layer_0/angular_velocity = 0.0
31:21/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -5, 8, -5, 8, 8, -8, 8)
32:21/0 = 0
32:21/0/physics_layer_0/linear_velocity = Vector2(0, 0)
32:21/0/physics_layer_0/angular_velocity = 0.0
32:21/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -5, 8, -5, 8, 8, -8, 8)
33:21/0 = 0
33:21/0/physics_layer_0/linear_velocity = Vector2(0, 0)
33:21/0/physics_layer_0/angular_velocity = 0.0
33:21/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -5, 8, -5, 8, 8, -8, 8)
34:21/0 = 0
34:21/0/physics_layer_0/linear_velocity = Vector2(0, 0)
34:21/0/physics_layer_0/angular_velocity = 0.0
34:21/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -5, 8, -5, 8, 8, -8, 8)
35:21/0 = 0
35:21/0/physics_layer_0/linear_velocity = Vector2(0, 0)
35:21/0/physics_layer_0/angular_velocity = 0.0
35:21/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -5, 8, -5, 8, 8, -8, 8)
36:21/0 = 0
36:21/0/physics_layer_0/linear_velocity = Vector2(0, 0)
36:21/0/physics_layer_0/angular_velocity = 0.0
36:21/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -5, 8, -5, 8, 8, -8, 8)
37:21/0 = 0
37:21/0/physics_layer_0/linear_velocity = Vector2(0, 0)
37:21/0/physics_layer_0/angular_velocity = 0.0
37:21/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
38:21/0 = 0
38:21/0/physics_layer_0/linear_velocity = Vector2(0, 0)
38:21/0/physics_layer_0/angular_velocity = 0.0
38:21/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
39:21/0 = 0
39:21/0/physics_layer_0/linear_velocity = Vector2(0, 0)
39:21/0/physics_layer_0/angular_velocity = 0.0
39:21/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
40:21/0 = 0
40:21/0/physics_layer_0/linear_velocity = Vector2(0, 0)
40:21/0/physics_layer_0/angular_velocity = 0.0
40:21/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
41:21/0 = 0
41:21/0/physics_layer_0/linear_velocity = Vector2(0, 0)
41:21/0/physics_layer_0/angular_velocity = 0.0
41:21/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
42:21/0 = 0
42:21/0/physics_layer_0/linear_velocity = Vector2(0, 0)
42:21/0/physics_layer_0/angular_velocity = 0.0
42:21/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
43:21/0 = 0
43:21/0/physics_layer_0/linear_velocity = Vector2(0, 0)
43:21/0/physics_layer_0/angular_velocity = 0.0
43:21/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
44:21/0 = 0
44:21/0/physics_layer_0/linear_velocity = Vector2(0, 0)
44:21/0/physics_layer_0/angular_velocity = 0.0
44:21/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
45:21/0 = 0
45:21/0/physics_layer_0/linear_velocity = Vector2(0, 0)
45:21/0/physics_layer_0/angular_velocity = 0.0
45:21/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
46:21/0 = 0
46:21/0/physics_layer_0/linear_velocity = Vector2(0, 0)
46:21/0/physics_layer_0/angular_velocity = 0.0
46:21/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
47:21/0 = 0
47:21/0/physics_layer_0/linear_velocity = Vector2(0, 0)
47:21/0/physics_layer_0/angular_velocity = 0.0
47:21/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
48:21/0 = 0
48:21/0/physics_layer_0/linear_velocity = Vector2(0, 0)
48:21/0/physics_layer_0/angular_velocity = 0.0
48:21/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
49:21/0 = 0
49:21/0/physics_layer_0/linear_velocity = Vector2(0, 0)
49:21/0/physics_layer_0/angular_velocity = 0.0
49:21/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
50:21/0 = 0
50:21/0/physics_layer_0/linear_velocity = Vector2(0, 0)
50:21/0/physics_layer_0/angular_velocity = 0.0
50:21/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
51:21/0 = 0
51:21/0/physics_layer_0/linear_velocity = Vector2(0, 0)
51:21/0/physics_layer_0/angular_velocity = 0.0
51:21/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
52:21/0 = 0
52:21/0/physics_layer_0/linear_velocity = Vector2(0, 0)
52:21/0/physics_layer_0/angular_velocity = 0.0
52:21/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
53:21/0 = 0
53:21/0/physics_layer_0/linear_velocity = Vector2(0, 0)
53:21/0/physics_layer_0/angular_velocity = 0.0
53:21/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
54:21/0 = 0
54:21/0/physics_layer_0/linear_velocity = Vector2(0, 0)
54:21/0/physics_layer_0/angular_velocity = 0.0
54:21/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
55:21/0 = 0
55:21/0/physics_layer_0/linear_velocity = Vector2(0, 0)
55:21/0/physics_layer_0/angular_velocity = 0.0
55:21/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
56:21/0 = 0
56:21/0/physics_layer_0/linear_velocity = Vector2(0, 0)
56:21/0/physics_layer_0/angular_velocity = 0.0
56:21/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
57:21/0 = 0
57:21/0/physics_layer_0/linear_velocity = Vector2(0, 0)
57:21/0/physics_layer_0/angular_velocity = 0.0
57:21/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
58:21/0 = 0
58:21/0/physics_layer_0/linear_velocity = Vector2(0, 0)
58:21/0/physics_layer_0/angular_velocity = 0.0
58:21/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
59:21/0 = 0
59:21/0/physics_layer_0/linear_velocity = Vector2(0, 0)
59:21/0/physics_layer_0/angular_velocity = 0.0
59:21/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
60:21/0 = 0
60:21/0/physics_layer_0/linear_velocity = Vector2(0, 0)
60:21/0/physics_layer_0/angular_velocity = 0.0
60:21/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
61:21/0 = 0
61:21/0/physics_layer_0/linear_velocity = Vector2(0, 0)
61:21/0/physics_layer_0/angular_velocity = 0.0
61:21/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
62:21/0 = 0
62:21/0/physics_layer_0/linear_velocity = Vector2(0, 0)
62:21/0/physics_layer_0/angular_velocity = 0.0
62:21/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
63:21/0 = 0
63:21/0/physics_layer_0/linear_velocity = Vector2(0, 0)
63:21/0/physics_layer_0/angular_velocity = 0.0
63:21/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
35:6/0 = 0
35:6/0/physics_layer_0/linear_velocity = Vector2(0, 0)
35:6/0/physics_layer_0/angular_velocity = 0.0
35:5/0 = 0
35:5/0/physics_layer_0/linear_velocity = Vector2(0, 0)
35:5/0/physics_layer_0/angular_velocity = 0.0
29:7/0 = 0
29:7/0/physics_layer_0/linear_velocity = Vector2(0, 0)
29:7/0/physics_layer_0/angular_velocity = 0.0
30:7/0 = 0
30:7/0/physics_layer_0/linear_velocity = Vector2(0, 0)
30:7/0/physics_layer_0/angular_velocity = 0.0
31:6/0 = 0
31:6/0/physics_layer_0/linear_velocity = Vector2(0, 0)
31:6/0/physics_layer_0/angular_velocity = 0.0
32:6/0 = 0
32:6/0/physics_layer_0/linear_velocity = Vector2(0, 0)
32:6/0/physics_layer_0/angular_velocity = 0.0
33:6/0 = 0
33:6/0/physics_layer_0/linear_velocity = Vector2(0, 0)
33:6/0/physics_layer_0/angular_velocity = 0.0
34:5/0 = 0
34:5/0/physics_layer_0/linear_velocity = Vector2(0, 0)
34:5/0/physics_layer_0/angular_velocity = 0.0

[sub_resource type="TileSet" id="TileSet_ceiej"]
physics_layer_0/collision_layer = 1
sources/0 = SubResource("TileSetAtlasSource_djjt6")

[sub_resource type="RectangleShape2D" id="RectangleShape2D_6rsfr"]
size = Vector2(10, 13)

[sub_resource type="RectangleShape2D" id="RectangleShape2D_v4h71"]
size = Vector2(20, 13)

[sub_resource type="Animation" id="Animation_3mh5i"]
length = 0.001
tracks/0/type = "value"
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/path = NodePath("Texture:texture")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 1,
"values": [ExtResource("5_toxdn")]
}
tracks/1/type = "value"
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/path = NodePath("Texture:hframes")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 1,
"values": [4]
}
tracks/2/type = "value"
tracks/2/imported = false
tracks/2/enabled = true
tracks/2/path = NodePath("Texture:vframes")
tracks/2/interp = 1
tracks/2/loop_wrap = true
tracks/2/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 1,
"values": [1]
}
tracks/3/type = "value"
tracks/3/imported = false
tracks/3/enabled = true
tracks/3/path = NodePath("Texture:frame")
tracks/3/interp = 1
tracks/3/loop_wrap = true
tracks/3/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 1,
"values": [0]
}

[sub_resource type="Animation" id="Animation_e78f6"]
resource_name = "die"
length = 0.4
tracks/0/type = "value"
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/path = NodePath("Texture:texture")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 1,
"values": [ExtResource("6_j38ry")]
}
tracks/1/type = "value"
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/path = NodePath("Texture:hframes")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 1,
"values": [4]
}
tracks/2/type = "value"
tracks/2/imported = false
tracks/2/enabled = true
tracks/2/path = NodePath("Texture:vframes")
tracks/2/interp = 1
tracks/2/loop_wrap = true
tracks/2/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 1,
"values": [1]
}
tracks/3/type = "value"
tracks/3/imported = false
tracks/3/enabled = true
tracks/3/path = NodePath("Texture:frame")
tracks/3/interp = 1
tracks/3/loop_wrap = true
tracks/3/keys = {
"times": PackedFloat32Array(0, 0.1, 0.2, 0.3),
"transitions": PackedFloat32Array(1, 1, 1, 1),
"update": 1,
"values": [0, 1, 2, 3]
}

[sub_resource type="Animation" id="Animation_p3wws"]
resource_name = "fly"
length = 0.6
loop_mode = 1
tracks/0/type = "value"
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/path = NodePath("Texture:texture")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 1,
"values": [ExtResource("7_dwihk")]
}
tracks/1/type = "value"
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/path = NodePath("Texture:hframes")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 1,
"values": [6]
}
tracks/2/type = "value"
tracks/2/imported = false
tracks/2/enabled = true
tracks/2/path = NodePath("Texture:vframes")
tracks/2/interp = 1
tracks/2/loop_wrap = true
tracks/2/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 1,
"values": [1]
}
tracks/3/type = "value"
tracks/3/imported = false
tracks/3/enabled = true
tracks/3/path = NodePath("Texture:frame")
tracks/3/interp = 1
tracks/3/loop_wrap = true
tracks/3/keys = {
"times": PackedFloat32Array(0, 0.1, 0.2, 0.3, 0.4, 0.5),
"transitions": PackedFloat32Array(1, 1, 1, 1, 1, 1),
"update": 1,
"values": [0, 1, 2, 3, 4, 5]
}

[sub_resource type="Animation" id="Animation_n4mqk"]
resource_name = "hit"
length = 0.3
tracks/0/type = "value"
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/path = NodePath("Texture:hframes")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 1,
"values": [2]
}
tracks/1/type = "value"
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/path = NodePath("Texture:texture")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 1,
"values": [ExtResource("8_s3tnm")]
}
tracks/2/type = "value"
tracks/2/imported = false
tracks/2/enabled = true
tracks/2/path = NodePath("Texture:vframes")
tracks/2/interp = 1
tracks/2/loop_wrap = true
tracks/2/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 1,
"values": [1]
}
tracks/3/type = "value"
tracks/3/imported = false
tracks/3/enabled = true
tracks/3/path = NodePath("Texture:frame")
tracks/3/interp = 1
tracks/3/loop_wrap = true
tracks/3/keys = {
"times": PackedFloat32Array(0, 0.1),
"transitions": PackedFloat32Array(1, 1),
"update": 1,
"values": [0, 1]
}
tracks/4/type = "method"
tracks/4/imported = false
tracks/4/enabled = true
tracks/4/path = NodePath(".")
tracks/4/interp = 1
tracks/4/loop_wrap = true
tracks/4/keys = {
"times": PackedFloat32Array(0.1),
"transitions": PackedFloat32Array(1),
"values": [{
"args": ["res://assets/SFX/pid-hurt.wav"],
"method": &"spawn_sfx"
}]
}

[sub_resource type="Animation" id="Animation_tmte8"]
resource_name = "idle"
length = 0.4
loop_mode = 1
tracks/0/type = "value"
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/path = NodePath("Texture:texture")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 1,
"values": [ExtResource("5_toxdn")]
}
tracks/1/type = "value"
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/path = NodePath("Texture:hframes")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 1,
"values": [4]
}
tracks/2/type = "value"
tracks/2/imported = false
tracks/2/enabled = true
tracks/2/path = NodePath("Texture:vframes")
tracks/2/interp = 1
tracks/2/loop_wrap = true
tracks/2/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 1,
"values": [1]
}
tracks/3/type = "value"
tracks/3/imported = false
tracks/3/enabled = true
tracks/3/path = NodePath("Texture:frame")
tracks/3/interp = 1
tracks/3/loop_wrap = true
tracks/3/keys = {
"times": PackedFloat32Array(0, 0.1, 0.2, 0.3),
"transitions": PackedFloat32Array(1, 1, 1, 1),
"update": 1,
"values": [0, 1, 2, 3]
}

[sub_resource type="Animation" id="Animation_6xrpc"]
resource_name = "run"
length = 0.3
loop_mode = 1
tracks/0/type = "value"
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/path = NodePath("Texture:texture")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 1,
"values": [ExtResource("6_j38ry")]
}
tracks/1/type = "value"
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/path = NodePath("Texture:hframes")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 1,
"values": [4]
}
tracks/2/type = "value"
tracks/2/imported = false
tracks/2/enabled = true
tracks/2/path = NodePath("Texture:vframes")
tracks/2/interp = 1
tracks/2/loop_wrap = true
tracks/2/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 1,
"values": [1]
}
tracks/3/type = "value"
tracks/3/imported = false
tracks/3/enabled = true
tracks/3/path = NodePath("Texture:frame")
tracks/3/interp = 1
tracks/3/loop_wrap = true
tracks/3/keys = {
"times": PackedFloat32Array(0, 0.1, 0.2),
"transitions": PackedFloat32Array(1, 1, 1),
"update": 1,
"values": [0, 1, 1]
}
tracks/4/type = "method"
tracks/4/imported = false
tracks/4/enabled = true
tracks/4/path = NodePath(".")
tracks/4/interp = 1
tracks/4/loop_wrap = true
tracks/4/keys = {
"times": PackedFloat32Array(0, 0.2),
"transitions": PackedFloat32Array(1, 1),
"values": [{
"args": ["res://assets/SFX/pid-walk.wav"],
"method": &"spawn_sfx"
}, {
"args": ["res://assets/SFX/pid-walk.wav"],
"method": &"spawn_sfx"
}]
}

[sub_resource type="AnimationLibrary" id="AnimationLibrary_la3eo"]
_data = {
"RESET": SubResource("Animation_3mh5i"),
"die": SubResource("Animation_e78f6"),
"fly": SubResource("Animation_p3wws"),
"hit": SubResource("Animation_n4mqk"),
"idle": SubResource("Animation_tmte8"),
"run": SubResource("Animation_6xrpc")
}

[sub_resource type="Gradient" id="Gradient_oecaf"]
offsets = PackedFloat32Array(0, 0.545455, 1)
colors = PackedColorArray(0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0)

[sub_resource type="GradientTexture1D" id="GradientTexture1D_1yx0d"]
gradient = SubResource("Gradient_oecaf")

[sub_resource type="Curve" id="Curve_ooget"]
_data = [Vector2(0.0289256, 0.349693), 0.0, -5.19632, 0, 0, Vector2(0.252066, 0.484663), 0.0, 0.0, 0, 0]
point_count = 2

[sub_resource type="CurveTexture" id="CurveTexture_j8ecu"]
curve = SubResource("Curve_ooget")

[sub_resource type="ParticleProcessMaterial" id="ParticleProcessMaterial_fewah"]
particle_flag_disable_z = true
gravity = Vector3(0, 0, 0)
orbit_velocity_min = 0.0
orbit_velocity_max = 0.0
scale_curve = SubResource("CurveTexture_j8ecu")
color_ramp = SubResource("GradientTexture1D_1yx0d")

[sub_resource type="CircleShape2D" id="CircleShape2D_xuuus"]
radius = 14.0

[sub_resource type="RectangleShape2D" id="RectangleShape2D_muc8h"]
size = Vector2(48, 48)

[sub_resource type="Curve" id="Curve_stdrm"]
_data = [Vector2(0, 0), 0.0, 0.0, 0, 0, Vector2(0.898374, 0.96319), 0.0, 0.0, 0, 0]
point_count = 2

[sub_resource type="CurveTexture" id="CurveTexture_8u2xb"]
curve = SubResource("Curve_stdrm")

[sub_resource type="ParticleProcessMaterial" id="ParticleProcessMaterial_2riw1"]
emission_shape = 6
emission_ring_axis = Vector3(1, 1, 1)
emission_ring_height = 250.0
emission_ring_radius = 500.0
emission_ring_inner_radius = 0.0
particle_flag_disable_z = true
spread = 40.0
gravity = Vector3(0, 98, 0)
initial_velocity_max = 80.0
orbit_velocity_min = 0.0
orbit_velocity_max = 60.0
angle_min = 15.0
angle_max = 30.0
scale_min = 0.3
scale_max = 0.8
scale_curve = SubResource("CurveTexture_8u2xb")

[sub_resource type="Curve" id="Curve_ruhl5"]
_data = [Vector2(0.0284553, 0), 0.0, 0.0, 0, 0, Vector2(0.955284, 1), 0.0, 0.0, 0, 0]
point_count = 2

[sub_resource type="CurveTexture" id="CurveTexture_5e233"]
curve = SubResource("Curve_ruhl5")

[sub_resource type="ParticleProcessMaterial" id="ParticleProcessMaterial_7pxby"]
emission_shape = 6
emission_ring_axis = Vector3(0, 0, 1)
emission_ring_height = 600.0
emission_ring_radius = 600.0
emission_ring_inner_radius = 0.0
particle_flag_disable_z = true
gravity = Vector3(0, 98, 0)
orbit_velocity_min = 0.0
orbit_velocity_max = 0.0
scale_min = 0.1
scale_max = 0.5
scale_curve = SubResource("CurveTexture_5e233")

[sub_resource type="Curve" id="Curve_3b01f"]
_data = [Vector2(0.0447154, 0), 0.0, 0.0, 0, 0, Vector2(1, 1), 0.0, 0.0, 0, 0]
point_count = 2

[sub_resource type="CurveTexture" id="CurveTexture_bp2a5"]
curve = SubResource("Curve_3b01f")

[sub_resource type="ParticleProcessMaterial" id="ParticleProcessMaterial_78ulc"]
emission_shape = 6
emission_ring_axis = Vector3(0, 0, 1)
emission_ring_height = 500.0
emission_ring_radius = 500.0
emission_ring_inner_radius = 0.0
particle_flag_disable_z = true
gravity = Vector3(0, 137, 0)
initial_velocity_max = 80.0
orbit_velocity_min = 0.0
orbit_velocity_max = 0.0
angle_min = 5.0
angle_max = 10.0
scale_min = 0.3
scale_curve = SubResource("CurveTexture_bp2a5")

[sub_resource type="RectangleShape2D" id="RectangleShape2D_abb04"]
size = Vector2(3165, 11)

[sub_resource type="RectangleShape2D" id="RectangleShape2D_ik0iu"]
size = Vector2(17.5, 644)

[sub_resource type="ShaderMaterial" id="ShaderMaterial_aif7o"]
shader = ExtResource("20_ax55e")
shader_parameter/gradient_factor = 0.96

[sub_resource type="Gradient" id="Gradient_1q4hc"]
offsets = PackedFloat32Array(0, 0.227723, 0.762376, 1)
colors = PackedColorArray(0, 0, 0, 0.423529, 0.445488, 0.445488, 0.445488, 0.85098, 0.910891, 0.910891, 0.910891, 1, 1, 1, 1, 0.517647)

[sub_resource type="GradientTexture1D" id="GradientTexture1D_eerq0"]
gradient = SubResource("Gradient_1q4hc")

[sub_resource type="ParticleProcessMaterial" id="ParticleProcessMaterial_352vk"]
emission_shape = 3
emission_box_extents = Vector3(350, 50, 1)
particle_flag_disable_z = true
spread = 0.0
gravity = Vector3(0, 0, 0)
initial_velocity_min = 30.0
initial_velocity_max = 30.0
orbit_velocity_min = 0.0
orbit_velocity_max = 0.0
scale_min = 0.5
color_ramp = SubResource("GradientTexture1D_eerq0")

[sub_resource type="Animation" id="Animation_iyjug"]
length = 0.001
tracks/0/type = "value"
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/path = NodePath("Player:position")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 0,
"values": [Vector2(27, 123)]
}
tracks/1/type = "value"
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/path = NodePath("BossCutScene/RichTextLabel:visible_ratio")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 0,
"values": [0.0]
}
tracks/2/type = "value"
tracks/2/imported = false
tracks/2/enabled = true
tracks/2/path = NodePath("BossCutScene/Portal:visible")
tracks/2/interp = 1
tracks/2/loop_wrap = true
tracks/2/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 1,
"values": [false]
}
tracks/3/type = "value"
tracks/3/imported = false
tracks/3/enabled = true
tracks/3/path = NodePath("Player/Texture:flip_h")
tracks/3/interp = 1
tracks/3/loop_wrap = true
tracks/3/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 1,
"values": [false]
}
tracks/4/type = "value"
tracks/4/imported = false
tracks/4/enabled = true
tracks/4/path = NodePath("BossCutScene/Corvissius:position")
tracks/4/interp = 1
tracks/4/loop_wrap = true
tracks/4/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 0,
"values": [Vector2(40, 3)]
}
tracks/5/type = "value"
tracks/5/imported = false
tracks/5/enabled = true
tracks/5/path = NodePath("BossCutScene/Corvissius:visible")
tracks/5/interp = 1
tracks/5/loop_wrap = true
tracks/5/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 1,
"values": [false]
}
tracks/6/type = "value"
tracks/6/imported = false
tracks/6/enabled = true
tracks/6/path = NodePath("BossCutScene/Corvissius:modulate")
tracks/6/interp = 1
tracks/6/loop_wrap = true
tracks/6/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 0,
"values": [Color(1, 1, 1, 0)]
}
tracks/7/type = "value"
tracks/7/imported = false
tracks/7/enabled = true
tracks/7/path = NodePath("BossCutScene/Corvissius/Smoking:visible")
tracks/7/interp = 1
tracks/7/loop_wrap = true
tracks/7/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 1,
"values": [false]
}
tracks/8/type = "value"
tracks/8/imported = false
tracks/8/enabled = true
tracks/8/path = NodePath("BossCutScene/Corvissius/Jump2:visible")
tracks/8/interp = 1
tracks/8/loop_wrap = true
tracks/8/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 1,
"values": [true]
}
tracks/9/type = "value"
tracks/9/imported = false
tracks/9/enabled = true
tracks/9/path = NodePath("BossCutScene/RichTextLabel:text")
tracks/9/interp = 1
tracks/9/loop_wrap = true
tracks/9/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 1,
"values": ["Oh!     O que temos aqui? HA HA HA

Um pombinho?!?"]
}
tracks/10/type = "value"
tracks/10/imported = false
tracks/10/enabled = true
tracks/10/path = NodePath("BossCutScene/Corvissius/Laught:visible")
tracks/10/interp = 1
tracks/10/loop_wrap = true
tracks/10/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 1,
"values": [false]
}
tracks/11/type = "value"
tracks/11/imported = false
tracks/11/enabled = true
tracks/11/path = NodePath("BossCutScene/RichTextLabel:theme_override_colors/default_color")
tracks/11/interp = 1
tracks/11/loop_wrap = true
tracks/11/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 0,
"values": [Color(0.27451, 0.14902, 0.27451, 1)]
}
tracks/12/type = "value"
tracks/12/imported = false
tracks/12/enabled = true
tracks/12/path = NodePath("BossCutScene/Ballon:visible")
tracks/12/interp = 1
tracks/12/loop_wrap = true
tracks/12/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 1,
"values": [false]
}
tracks/13/type = "value"
tracks/13/imported = false
tracks/13/enabled = true
tracks/13/path = NodePath("BossCutScene/Ballon:modulate")
tracks/13/interp = 1
tracks/13/loop_wrap = true
tracks/13/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 0,
"values": [Color(1, 1, 1, 1)]
}
tracks/14/type = "value"
tracks/14/imported = false
tracks/14/enabled = true
tracks/14/path = NodePath("BossCutScene/BallonBoss:visible")
tracks/14/interp = 1
tracks/14/loop_wrap = true
tracks/14/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 1,
"values": [false]
}
tracks/15/type = "value"
tracks/15/imported = false
tracks/15/enabled = true
tracks/15/path = NodePath("BossCutScene/RichTextLabel:position")
tracks/15/interp = 1
tracks/15/loop_wrap = true
tracks/15/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 0,
"values": [Vector2(109, 48)]
}
tracks/16/type = "value"
tracks/16/imported = false
tracks/16/enabled = true
tracks/16/path = NodePath("BossCutScene/Ballon:position")
tracks/16/interp = 1
tracks/16/loop_wrap = true
tracks/16/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 0,
"values": [Vector2(95, 42)]
}
tracks/17/type = "value"
tracks/17/imported = false
tracks/17/enabled = true
tracks/17/path = NodePath("BossCutScene/RichTextLabel:size")
tracks/17/interp = 1
tracks/17/loop_wrap = true
tracks/17/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 0,
"values": [Vector2(179, 70)]
}
tracks/18/type = "value"
tracks/18/imported = false
tracks/18/enabled = true
tracks/18/path = NodePath("BossCutScene/BallonBoss:size")
tracks/18/interp = 1
tracks/18/loop_wrap = true
tracks/18/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 0,
"values": [Vector2(160, 62)]
}
tracks/19/type = "value"
tracks/19/imported = false
tracks/19/enabled = true
tracks/19/path = NodePath("BossCutScene/BallonBoss:modulate")
tracks/19/interp = 1
tracks/19/loop_wrap = true
tracks/19/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 0,
"values": [Color(1, 1, 1, 1)]
}
tracks/20/type = "value"
tracks/20/imported = false
tracks/20/enabled = true
tracks/20/path = NodePath("BossCutScene/Caw:texture")
tracks/20/interp = 1
tracks/20/loop_wrap = true
tracks/20/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 1,
"values": [ExtResource("34_2iw1i")]
}
tracks/21/type = "value"
tracks/21/imported = false
tracks/21/enabled = true
tracks/21/path = NodePath("BossCutScene/Caw:hframes")
tracks/21/interp = 1
tracks/21/loop_wrap = true
tracks/21/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 1,
"values": [4]
}
tracks/22/type = "value"
tracks/22/imported = false
tracks/22/enabled = true
tracks/22/path = NodePath("BossCutScene/Caw:vframes")
tracks/22/interp = 1
tracks/22/loop_wrap = true
tracks/22/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 1,
"values": [4]
}
tracks/23/type = "value"
tracks/23/imported = false
tracks/23/enabled = true
tracks/23/path = NodePath("BossCutScene/Caw:frame")
tracks/23/interp = 1
tracks/23/loop_wrap = true
tracks/23/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 1,
"values": [15]
}
tracks/24/type = "value"
tracks/24/imported = false
tracks/24/enabled = true
tracks/24/path = NodePath("BossCutScene/Caw:modulate")
tracks/24/interp = 1
tracks/24/loop_wrap = true
tracks/24/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 0,
"values": [Color(1, 1, 1, 1)]
}
tracks/25/type = "value"
tracks/25/imported = false
tracks/25/enabled = true
tracks/25/path = NodePath("BossCutScene/Caw:visible")
tracks/25/interp = 1
tracks/25/loop_wrap = true
tracks/25/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 1,
"values": [false]
}
tracks/26/type = "value"
tracks/26/imported = false
tracks/26/enabled = true
tracks/26/path = NodePath("BossCutScene/Caw3:visible")
tracks/26/interp = 1
tracks/26/loop_wrap = true
tracks/26/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 1,
"values": [false]
}
tracks/27/type = "value"
tracks/27/imported = false
tracks/27/enabled = true
tracks/27/path = NodePath("BossCutScene/Caw3:modulate")
tracks/27/interp = 1
tracks/27/loop_wrap = true
tracks/27/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 0,
"values": [Color(1, 1, 1, 0)]
}
tracks/28/type = "value"
tracks/28/imported = false
tracks/28/enabled = true
tracks/28/path = NodePath("BossCutScene/CrowGigante:position")
tracks/28/interp = 1
tracks/28/loop_wrap = true
tracks/28/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 0,
"values": [Vector2(608, 229)]
}
tracks/29/type = "value"
tracks/29/imported = false
tracks/29/enabled = true
tracks/29/path = NodePath("BossCutScene/Corvissius/Smoking:flip_h")
tracks/29/interp = 1
tracks/29/loop_wrap = true
tracks/29/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 1,
"values": [false]
}
tracks/30/type = "value"
tracks/30/imported = false
tracks/30/enabled = true
tracks/30/path = NodePath("BossCutScene/duvida:visible")
tracks/30/interp = 1
tracks/30/loop_wrap = true
tracks/30/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 1,
"values": [false]
}
tracks/31/type = "value"
tracks/31/imported = false
tracks/31/enabled = true
tracks/31/path = NodePath("BossCutScene/CrowGigante:modulate")
tracks/31/interp = 1
tracks/31/loop_wrap = true
tracks/31/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 0,
"values": [Color(1, 1, 1, 0)]
}
tracks/32/type = "value"
tracks/32/imported = false
tracks/32/enabled = true
tracks/32/path = NodePath("BossCutScene/Node2D/Crow2:position")
tracks/32/interp = 1
tracks/32/loop_wrap = true
tracks/32/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 0,
"values": [Vector2(281, -15)]
}
tracks/33/type = "value"
tracks/33/imported = false
tracks/33/enabled = true
tracks/33/path = NodePath("BossCutScene/Node2D/Crow3:position")
tracks/33/interp = 1
tracks/33/loop_wrap = true
tracks/33/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 0,
"values": [Vector2(246, 366)]
}
tracks/34/type = "value"
tracks/34/imported = false
tracks/34/enabled = true
tracks/34/path = NodePath("BossCutScene/Node2D/Crow3/Sprite2D:flip_h")
tracks/34/interp = 1
tracks/34/loop_wrap = true
tracks/34/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 1,
"values": [true]
}
tracks/35/type = "value"
tracks/35/imported = false
tracks/35/enabled = true
tracks/35/path = NodePath("BossCutScene/Node2D/Crow2/Sprite2D:flip_h")
tracks/35/interp = 1
tracks/35/loop_wrap = true
tracks/35/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 1,
"values": [false]
}
tracks/36/type = "value"
tracks/36/imported = false
tracks/36/enabled = true
tracks/36/path = NodePath("BossCutScene/Node2D/Crow3:visible")
tracks/36/interp = 1
tracks/36/loop_wrap = true
tracks/36/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 1,
"values": [false]
}
tracks/37/type = "value"
tracks/37/imported = false
tracks/37/enabled = true
tracks/37/path = NodePath("BossCutScene/Node2D/Crow2:visible")
tracks/37/interp = 1
tracks/37/loop_wrap = true
tracks/37/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 1,
"values": [false]
}
tracks/38/type = "animation"
tracks/38/imported = false
tracks/38/enabled = true
tracks/38/path = NodePath("Player/AnimationPlayer")
tracks/38/interp = 1
tracks/38/loop_wrap = true
tracks/38/keys = {
"clips": PackedStringArray("idle"),
"times": PackedFloat32Array(0)
}

[sub_resource type="Animation" id="Animation_paeog"]
resource_name = "default"
length = 69.0
tracks/0/type = "method"
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/path = NodePath("Player")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/keys = {
"times": PackedFloat32Array(0, 68.99),
"transitions": PackedFloat32Array(1, 1),
"values": [{
"args": [false],
"method": &"can_i_move"
}, {
"args": [true],
"method": &"can_i_move"
}]
}
tracks/1/type = "animation"
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/path = NodePath("Player/AnimationPlayer")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/keys = {
"clips": PackedStringArray("idle", "run", "run", "run", "idle", "hit", "fly", "idle", "hit", "idle", "hit", "idle", "hit", "idle", "run", "idle", "run", "idle"),
"times": PackedFloat32Array(0, 0.4, 0.7, 1, 1.3, 6.8, 7.5, 9.1, 34.2, 34.8, 50.8, 51.3, 51.8, 52.3, 53.5, 54.1, 62.5, 64.9)
}
tracks/2/type = "value"
tracks/2/imported = false
tracks/2/enabled = true
tracks/2/path = NodePath("Player:position")
tracks/2/interp = 1
tracks/2/loop_wrap = true
tracks/2/keys = {
"times": PackedFloat32Array(0, 0.4, 1.3, 6.8, 7.2, 8.4, 9.1, 34.2, 34.5, 34.8, 36.5, 36.8, 37.1, 40.4, 40.7, 41, 47.1, 47.4, 47.7, 53.5, 54.2, 62.4, 64.9),
"transitions": PackedFloat32Array(1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1),
"update": 0,
"values": [Vector2(27, 123), Vector2(27, 123), Vector2(77, 121), Vector2(77, 121), Vector2(77, 116), Vector2(77, 121), Vector2(118, 144), Vector2(118, 144), Vector2(118, 142), Vector2(118, 144), Vector2(118, 144), Vector2(118, 142), Vector2(118, 144), Vector2(118, 144), Vector2(118, 142), Vector2(118, 144), Vector2(118, 144), Vector2(118, 142), Vector2(118, 144), Vector2(118, 144), Vector2(91, 144), Vector2(91, 144), Vector2(123, 144)]
}
tracks/3/type = "value"
tracks/3/imported = false
tracks/3/enabled = true
tracks/3/path = NodePath("BossCutScene/RichTextLabel:visible_ratio")
tracks/3/interp = 1
tracks/3/loop_wrap = true
tracks/3/keys = {
"times": PackedFloat32Array(0, 1.9, 4.5, 5.2, 5.89, 5.9, 10.2, 10.7, 13, 13.3, 13.31, 14.3, 15.7, 18.2, 18.3, 18.4, 18.7, 19.1, 20.2, 20.55, 20.6, 20.75, 22.4, 23.1, 23.12, 23.2, 25.3, 25.9, 25.92, 26.3, 26.5, 30.2, 30.5, 30.6, 30.79, 30.8, 32.7, 34, 34.3, 35.29, 35.3, 41, 41.1, 43.6, 44.68, 44.69, 47.3, 50.39, 50.4, 56.7, 62.4, 66.8),
"transitions": PackedFloat32Array(1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1),
"update": 0,
"values": [0.0, 0.0333333, 0.959722, 0.982, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.684211, 1.0, 1.0, 0.0, 0.0, 0.166001, 0.166001, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.996, 1.0, 1.0, 0.0, 0.75, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0]
}
tracks/4/type = "value"
tracks/4/imported = false
tracks/4/enabled = true
tracks/4/path = NodePath("BossCutScene/Portal:visible")
tracks/4/interp = 1
tracks/4/loop_wrap = true
tracks/4/keys = {
"times": PackedFloat32Array(0, 6.6, 9.7),
"transitions": PackedFloat32Array(1, 1, 1),
"update": 1,
"values": [false, true, false]
}
tracks/5/type = "animation"
tracks/5/imported = false
tracks/5/enabled = true
tracks/5/path = NodePath("BossCutScene/Portal/AnimationPlayer")
tracks/5/interp = 1
tracks/5/loop_wrap = true
tracks/5/keys = {
"clips": PackedStringArray("open", "closing"),
"times": PackedFloat32Array(6.6, 9.1)
}
tracks/6/type = "audio"
tracks/6/imported = false
tracks/6/enabled = true
tracks/6/path = NodePath("BgAudio")
tracks/6/interp = 1
tracks/6/loop_wrap = true
tracks/6/keys = {
"clips": [{
"end_offset": 0.0,
"start_offset": 0.0,
"stream": ExtResource("24_wumsw")
}, {
"end_offset": 0.0,
"start_offset": 0.0,
"stream": ExtResource("10_nixei")
}, {
"end_offset": 0.0,
"start_offset": 0.0,
"stream": ExtResource("10_nixei")
}, {
"end_offset": 0.0,
"start_offset": 0.0,
"stream": ExtResource("10_nixei")
}, {
"end_offset": 0.0,
"start_offset": 0.0,
"stream": ExtResource("10_nixei")
}, {
"end_offset": 0.0,
"start_offset": 0.0,
"stream": ExtResource("25_qw8hc")
}, {
"end_offset": 0.0,
"start_offset": 0.0,
"stream": ExtResource("30_7y4q2")
}],
"times": PackedFloat32Array(6.6, 7.5, 7.8, 8.3, 8.8, 9.3, 34.3)
}
tracks/6/use_blend = true
tracks/7/type = "value"
tracks/7/imported = false
tracks/7/enabled = true
tracks/7/path = NodePath("BossCutScene/Exclamation:visible")
tracks/7/interp = 1
tracks/7/loop_wrap = true
tracks/7/keys = {
"times": PackedFloat32Array(0, 6.8, 7.9),
"transitions": PackedFloat32Array(1, 1, 1),
"update": 1,
"values": [false, true, false]
}
tracks/8/type = "value"
tracks/8/imported = false
tracks/8/enabled = true
tracks/8/path = NodePath("Player/Texture:flip_h")
tracks/8/interp = 1
tracks/8/loop_wrap = true
tracks/8/keys = {
"times": PackedFloat32Array(0, 6.8, 7.2, 8.3, 9.5, 36.3, 36.8, 40.7, 42.4, 44.8, 47.4, 50.1, 53.4, 54.9),
"transitions": PackedFloat32Array(1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1),
"update": 1,
"values": [false, false, true, false, true, true, false, true, false, true, false, false, true, false]
}
tracks/9/type = "animation"
tracks/9/imported = false
tracks/9/enabled = true
tracks/9/path = NodePath("BossCutScene/Corvissius/AnimationPlayer")
tracks/9/interp = 1
tracks/9/loop_wrap = true
tracks/9/keys = {
"clips": PackedStringArray("jump", "smoking", "laught", "smoking", "laught", "smoking", "laught", "jump", "smoking", "laught"),
"times": PackedFloat32Array(8.6, 10.6, 16.2, 20.6, 33, 40.4, 51, 53.3, 55.4, 65.2)
}
tracks/10/type = "value"
tracks/10/imported = false
tracks/10/enabled = true
tracks/10/path = NodePath("BossCutScene/Corvissius:position")
tracks/10/interp = 1
tracks/10/loop_wrap = true
tracks/10/keys = {
"times": PackedFloat32Array(8.7, 9.8, 53.3, 53.7, 54.5, 61.7, 63.3, 63.6, 64.6, 65.2, 65.8, 66.4, 67.2, 68.3, 68.6, 68.8, 69),
"transitions": PackedFloat32Array(1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1),
"update": 0,
"values": [Vector2(40, 3), Vector2(45, 122), Vector2(45, 122), Vector2(96, 103), Vector2(178.5, 124.286), Vector2(178.5, 124.286), Vector2(178.5, 124.286), Vector2(182.5, 125.286), Vector2(200.5, 128.286), Vector2(214, 131.286), Vector2(227.5, 132.286), Vector2(302.5, 146.286), Vector2(398.5, 163.286), Vector2(534.5, 183.286), Vector2(575.5, 191.857), Vector2(602, 194.072), Vector2(618.5, 196.286)]
}
tracks/11/type = "value"
tracks/11/imported = false
tracks/11/enabled = true
tracks/11/path = NodePath("BossCutScene/Corvissius:visible")
tracks/11/interp = 1
tracks/11/loop_wrap = true
tracks/11/keys = {
"times": PackedFloat32Array(0, 6.6),
"transitions": PackedFloat32Array(1, 1),
"update": 1,
"values": [false, true]
}
tracks/12/type = "value"
tracks/12/imported = false
tracks/12/enabled = true
tracks/12/path = NodePath("BossCutScene/Corvissius:modulate")
tracks/12/interp = 1
tracks/12/loop_wrap = true
tracks/12/keys = {
"times": PackedFloat32Array(7.7, 9.3),
"transitions": PackedFloat32Array(1, 1),
"update": 0,
"values": [Color(1, 1, 1, 0), Color(1, 1, 1, 1)]
}
tracks/13/type = "value"
tracks/13/imported = false
tracks/13/enabled = true
tracks/13/path = NodePath("BossCutScene/Corvissius/Smoking:visible")
tracks/13/interp = 1
tracks/13/loop_wrap = true
tracks/13/keys = {
"times": PackedFloat32Array(0, 10.6, 16.2, 20.6, 33, 40.4, 51, 53.3, 55.4, 65.2),
"transitions": PackedFloat32Array(1, 1, 1, 1, 1, 1, 1, 1, 1, 1),
"update": 1,
"values": [false, true, false, true, false, true, false, false, true, false]
}
tracks/14/type = "value"
tracks/14/imported = false
tracks/14/enabled = true
tracks/14/path = NodePath("BossCutScene/Corvissius/Jump2:visible")
tracks/14/interp = 1
tracks/14/loop_wrap = true
tracks/14/keys = {
"times": PackedFloat32Array(10.6, 51, 53.3, 55.4),
"transitions": PackedFloat32Array(1, 1, 1, 1),
"update": 1,
"values": [false, false, true, false]
}
tracks/15/type = "value"
tracks/15/imported = false
tracks/15/enabled = true
tracks/15/path = NodePath("BossCutScene/RichTextLabel:text")
tracks/15/interp = 1
tracks/15/loop_wrap = true
tracks/15/keys = {
"times": PackedFloat32Array(0, 10.7, 13.31, 18.4, 20.75, 23.2, 26.4, 30.8, 41.1, 44.7, 56.7),
"transitions": PackedFloat32Array(1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1),
"update": 1,
"values": ["Parece que vai chover bastante...", "Oh!  O que temos aqui? HA HA", "Um pequeno e frágil pombinho.", "Ei! Quem você pensa que é?!
", "Cale-se criatura inferior!!
Eu sou Corvissius.
", "O grande mestre dos magos!", "Meus corvos me contaram que um pequeno pombinho esta atrás das \"Plumas de Luz\"..", "Não seria esse, você?", "Vamos ver do que
 você é capaz!", "Sinta a fúria de meus 
corvos explosivos!!", "Fuja pombinho, voe o mais rapido que puder! HAHAHA"]
}
tracks/16/type = "value"
tracks/16/imported = false
tracks/16/enabled = true
tracks/16/path = NodePath("BossCutScene/Corvissius/Laught:visible")
tracks/16/interp = 1
tracks/16/loop_wrap = true
tracks/16/keys = {
"times": PackedFloat32Array(0, 16.2, 20.6, 33, 40.4, 51, 53.3, 65.2),
"transitions": PackedFloat32Array(1, 1, 1, 1, 1, 1, 1, 1),
"update": 1,
"values": [false, true, false, true, false, true, false, true]
}
tracks/17/type = "value"
tracks/17/imported = false
tracks/17/enabled = true
tracks/17/path = NodePath("BossCutScene/RichTextLabel:theme_override_colors/default_color")
tracks/17/interp = 1
tracks/17/loop_wrap = true
tracks/17/keys = {
"times": PackedFloat32Array(0, 10.7, 18.2),
"transitions": PackedFloat32Array(1, 1, 1),
"update": 0,
"values": [null, Color(0.27451, 0.14902, 0.27451, 1), null]
}
tracks/18/type = "value"
tracks/18/imported = false
tracks/18/enabled = true
tracks/18/path = NodePath("BossCutScene/Ballon:visible")
tracks/18/interp = 1
tracks/18/loop_wrap = true
tracks/18/keys = {
"times": PackedFloat32Array(0, 1.4, 5.9, 6.1, 18, 18.5, 20.6),
"transitions": PackedFloat32Array(1, 1, 1, 1, 1, 1, 1),
"update": 1,
"values": [false, true, true, false, false, true, false]
}
tracks/19/type = "value"
tracks/19/imported = false
tracks/19/enabled = true
tracks/19/path = NodePath("BossCutScene/Ballon:modulate")
tracks/19/interp = 1
tracks/19/loop_wrap = true
tracks/19/keys = {
"times": PackedFloat32Array(1.4, 2.1, 5.5, 5.9, 15.9, 16.3, 18, 18.3, 19),
"transitions": PackedFloat32Array(1, 1, 1, 1, 1, 1, 1, 1, 1),
"update": 0,
"values": [Color(1, 1, 1, 0), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 1), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 1)]
}
tracks/20/type = "value"
tracks/20/imported = false
tracks/20/enabled = true
tracks/20/path = NodePath("BossCutScene/BallonBoss:visible")
tracks/20/interp = 1
tracks/20/loop_wrap = true
tracks/20/keys = {
"times": PackedFloat32Array(0, 10.4, 18.3, 20.6, 26.1, 26.4, 35.3, 40.9, 51.3),
"transitions": PackedFloat32Array(1, 1, 1, 1, 1, 1, 1, 1, 1),
"update": 1,
"values": [false, true, false, true, false, true, false, true, true]
}
tracks/21/type = "value"
tracks/21/imported = false
tracks/21/enabled = true
tracks/21/path = NodePath("BossCutScene/RichTextLabel:position")
tracks/21/interp = 1
tracks/21/loop_wrap = true
tracks/21/keys = {
"times": PackedFloat32Array(0, 6, 10.7, 18.2, 18.3, 18.4, 20.6, 20.7),
"transitions": PackedFloat32Array(1, 1, 1, 1, 1, 1, 1, 1),
"update": 0,
"values": [Vector2(109, 48), Vector2(109, 48), Vector2(75, 28), Vector2(75, 28), Vector2(109, 48), Vector2(109, 48), Vector2(109, 48), Vector2(75, 28)]
}
tracks/22/type = "value"
tracks/22/imported = false
tracks/22/enabled = true
tracks/22/path = NodePath("BossCutScene/Ballon:position")
tracks/22/interp = 1
tracks/22/loop_wrap = true
tracks/22/keys = {
"times": PackedFloat32Array(6.4, 18.2, 18.5),
"transitions": PackedFloat32Array(1, 1, 1),
"update": 0,
"values": [Vector2(95, 42), Vector2(95, 42), Vector2(95, 42)]
}
tracks/23/type = "value"
tracks/23/imported = false
tracks/23/enabled = true
tracks/23/path = NodePath("BossCutScene/RichTextLabel:size")
tracks/23/interp = 1
tracks/23/loop_wrap = true
tracks/23/keys = {
"times": PackedFloat32Array(25.6, 26.4),
"transitions": PackedFloat32Array(1, 1),
"update": 0,
"values": [Vector2(179, 70), Vector2(280, 70)]
}
tracks/24/type = "value"
tracks/24/imported = false
tracks/24/enabled = true
tracks/24/path = NodePath("BossCutScene/BallonBoss:size")
tracks/24/interp = 1
tracks/24/loop_wrap = true
tracks/24/keys = {
"times": PackedFloat32Array(26.1, 26.4, 30.89, 30.9, 55.3, 55.8),
"transitions": PackedFloat32Array(1, 1, 1, 1, 1, 1),
"update": 0,
"values": [Vector2(160, 62), Vector2(228, 62), Vector2(228, 62), Vector2(140, 62), Vector2(140, 62), Vector2(228, 62)]
}
tracks/25/type = "value"
tracks/25/imported = false
tracks/25/enabled = true
tracks/25/path = NodePath("BossCutScene/BallonBoss:modulate")
tracks/25/interp = 1
tracks/25/loop_wrap = true
tracks/25/keys = {
"times": PackedFloat32Array(10.2, 10.4, 10.8, 20.4, 20.6, 21.7, 25.8, 26.1, 26.8, 30.5, 30.7, 30.8, 30.9, 31.2, 34.8, 35.3, 40.9, 41.7, 50.1, 51.2, 55.6, 56.8, 63.1, 68.3),
"transitions": PackedFloat32Array(1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1),
"update": 0,
"values": [Color(1, 1, 1, 1), Color(1, 1, 1, 0), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 0), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 0), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 0)]
}
tracks/26/type = "audio"
tracks/26/imported = false
tracks/26/enabled = true
tracks/26/path = NodePath("Player/Poop-baloon")
tracks/26/interp = 1
tracks/26/loop_wrap = true
tracks/26/keys = {
"clips": [{
"end_offset": 0.0,
"start_offset": 0.0,
"stream": ExtResource("22_7cm1m")
}, {
"end_offset": 0.0,
"start_offset": 0.0,
"stream": ExtResource("22_7cm1m")
}, {
"end_offset": 0.0,
"start_offset": 0.0,
"stream": ExtResource("22_7cm1m")
}, {
"end_offset": 0.0,
"start_offset": 0.0,
"stream": ExtResource("22_7cm1m")
}, {
"end_offset": 0.0,
"start_offset": 0.0,
"stream": ExtResource("22_7cm1m")
}, {
"end_offset": 0.0,
"start_offset": 0.0,
"stream": ExtResource("22_7cm1m")
}, {
"end_offset": 0.0,
"start_offset": 0.0,
"stream": ExtResource("22_7cm1m")
}, {
"end_offset": 0.0,
"start_offset": 0.0,
"stream": ExtResource("22_7cm1m")
}, {
"end_offset": 0.0,
"start_offset": 0.0,
"stream": ExtResource("22_7cm1m")
}, {
"end_offset": 0.0,
"start_offset": 0.0,
"stream": ExtResource("22_7cm1m")
}, {
"end_offset": 0.0,
"start_offset": 0.0,
"stream": ExtResource("22_7cm1m")
}, {
"end_offset": 0.0,
"start_offset": 0.0,
"stream": ExtResource("22_7cm1m")
}, {
"end_offset": 0.0,
"start_offset": 0.0,
"stream": ExtResource("22_7cm1m")
}, {
"end_offset": 0.0,
"start_offset": 0.0,
"stream": ExtResource("22_7cm1m")
}, {
"end_offset": 0.0,
"start_offset": 0.0,
"stream": ExtResource("22_7cm1m")
}, {
"end_offset": 0.0,
"start_offset": 0.0,
"stream": ExtResource("22_7cm1m")
}, {
"end_offset": 0.0,
"start_offset": 0.0,
"stream": ExtResource("22_7cm1m")
}, {
"end_offset": 0.0,
"start_offset": 0.0,
"stream": ExtResource("22_7cm1m")
}, {
"end_offset": 0.0,
"start_offset": 0.0,
"stream": ExtResource("22_7cm1m")
}, {
"end_offset": 0.0,
"start_offset": 0.0,
"stream": ExtResource("22_7cm1m")
}, {
"end_offset": 0.0,
"start_offset": 0.0,
"stream": ExtResource("22_7cm1m")
}, {
"end_offset": 0.0,
"start_offset": 0.0,
"stream": ExtResource("22_7cm1m")
}, {
"end_offset": 0.0,
"start_offset": 0.0,
"stream": ExtResource("22_7cm1m")
}, {
"end_offset": 0.0,
"start_offset": 0.0,
"stream": ExtResource("22_7cm1m")
}, {
"end_offset": 0.0,
"start_offset": 0.0,
"stream": ExtResource("22_7cm1m")
}, {
"end_offset": 0.0,
"start_offset": 0.0,
"stream": ExtResource("23_hsg01")
}, {
"end_offset": 0.0,
"start_offset": 0.0,
"stream": ExtResource("22_7cm1m")
}, {
"end_offset": 0.0,
"start_offset": 0.0,
"stream": ExtResource("22_7cm1m")
}, {
"end_offset": 0.0,
"start_offset": 0.0,
"stream": ExtResource("22_7cm1m")
}, {
"end_offset": 0.0,
"start_offset": 0.0,
"stream": ExtResource("22_7cm1m")
}, {
"end_offset": 0.0,
"start_offset": 0.0,
"stream": ExtResource("22_7cm1m")
}, {
"end_offset": 0.0,
"start_offset": 0.0,
"stream": ExtResource("22_7cm1m")
}, {
"end_offset": 0.0,
"start_offset": 0.0,
"stream": ExtResource("22_7cm1m")
}, {
"end_offset": 0.0,
"start_offset": 0.0,
"stream": ExtResource("22_7cm1m")
}, {
"end_offset": 0.0,
"start_offset": 0.0,
"stream": ExtResource("22_7cm1m")
}, {
"end_offset": 0.0,
"start_offset": 0.0,
"stream": ExtResource("22_7cm1m")
}, {
"end_offset": 0.0,
"start_offset": 0.0,
"stream": ExtResource("22_7cm1m")
}, {
"end_offset": 0.0,
"start_offset": 0.0,
"stream": ExtResource("22_7cm1m")
}, {
"end_offset": 0.0,
"start_offset": 0.0,
"stream": ExtResource("22_7cm1m")
}, {
"end_offset": 0.0,
"start_offset": 0.0,
"stream": ExtResource("22_7cm1m")
}, {
"end_offset": 0.0,
"start_offset": 0.0,
"stream": ExtResource("22_7cm1m")
}, {
"end_offset": 0.0,
"start_offset": 0.0,
"stream": ExtResource("22_7cm1m")
}, {
"end_offset": 0.0,
"start_offset": 0.0,
"stream": ExtResource("22_7cm1m")
}, {
"end_offset": 0.0,
"start_offset": 0.0,
"stream": ExtResource("22_7cm1m")
}, {
"end_offset": 0.0,
"start_offset": 0.0,
"stream": ExtResource("22_7cm1m")
}, {
"end_offset": 0.0,
"start_offset": 0.0,
"stream": ExtResource("22_7cm1m")
}, {
"end_offset": 0.0,
"start_offset": 0.0,
"stream": ExtResource("22_7cm1m")
}, {
"end_offset": 0.0,
"start_offset": 0.0,
"stream": ExtResource("22_7cm1m")
}, {
"end_offset": 0.0,
"start_offset": 0.0,
"stream": ExtResource("22_7cm1m")
}, {
"end_offset": 0.0,
"start_offset": 0.0,
"stream": ExtResource("22_7cm1m")
}, {
"end_offset": 0.0,
"start_offset": 0.0,
"stream": ExtResource("22_7cm1m")
}, {
"end_offset": 0.0,
"start_offset": 0.0,
"stream": ExtResource("22_7cm1m")
}, {
"end_offset": 0.0,
"start_offset": 0.0,
"stream": ExtResource("22_7cm1m")
}, {
"end_offset": 0.0,
"start_offset": 0.0,
"stream": ExtResource("22_7cm1m")
}, {
"end_offset": 0.0,
"start_offset": 0.0,
"stream": ExtResource("22_7cm1m")
}, {
"end_offset": 0.0,
"start_offset": 0.0,
"stream": ExtResource("22_7cm1m")
}, {
"end_offset": 0.0,
"start_offset": 0.0,
"stream": ExtResource("22_7cm1m")
}, {
"end_offset": 0.0,
"start_offset": 0.0,
"stream": ExtResource("22_7cm1m")
}, {
"end_offset": 0.0,
"start_offset": 0.0,
"stream": ExtResource("22_7cm1m")
}, {
"end_offset": 0.0,
"start_offset": 0.0,
"stream": ExtResource("22_7cm1m")
}, {
"end_offset": 0.0,
"start_offset": 0.0,
"stream": ExtResource("22_7cm1m")
}, {
"end_offset": 0.0,
"start_offset": 0.0,
"stream": ExtResource("22_7cm1m")
}, {
"end_offset": 0.0,
"start_offset": 0.0,
"stream": ExtResource("22_7cm1m")
}, {
"end_offset": 0.0,
"start_offset": 0.0,
"stream": ExtResource("22_7cm1m")
}, {
"end_offset": 0.0,
"start_offset": 0.0,
"stream": ExtResource("22_7cm1m")
}, {
"end_offset": 0.0,
"start_offset": 0.0,
"stream": ExtResource("22_7cm1m")
}, {
"end_offset": 0.0,
"start_offset": 0.0,
"stream": ExtResource("22_7cm1m")
}, {
"end_offset": 0.0,
"start_offset": 0.0,
"stream": ExtResource("22_7cm1m")
}, {
"end_offset": 0.0,
"start_offset": 0.0,
"stream": ExtResource("22_7cm1m")
}, {
"end_offset": 0.0,
"start_offset": 0.0,
"stream": ExtResource("22_7cm1m")
}, {
"end_offset": 0.0,
"start_offset": 0.0,
"stream": ExtResource("22_7cm1m")
}, {
"end_offset": 0.0,
"start_offset": 0.0,
"stream": ExtResource("22_7cm1m")
}, {
"end_offset": 0.0,
"start_offset": 0.0,
"stream": ExtResource("22_7cm1m")
}, {
"end_offset": 0.0,
"start_offset": 0.0,
"stream": ExtResource("22_7cm1m")
}, {
"end_offset": 0.0,
"start_offset": 0.0,
"stream": ExtResource("22_7cm1m")
}, {
"end_offset": 0.0,
"start_offset": 0.0,
"stream": ExtResource("22_7cm1m")
}, {
"end_offset": 0.0,
"start_offset": 0.0,
"stream": ExtResource("22_7cm1m")
}, {
"end_offset": 0.0,
"start_offset": 0.0,
"stream": ExtResource("22_7cm1m")
}, {
"end_offset": 0.0,
"start_offset": 0.0,
"stream": ExtResource("22_7cm1m")
}, {
"end_offset": 0.0,
"start_offset": 0.0,
"stream": ExtResource("22_7cm1m")
}, {
"end_offset": 0.0,
"start_offset": 0.0,
"stream": ExtResource("22_7cm1m")
}, {
"end_offset": 0.0,
"start_offset": 0.0,
"stream": ExtResource("22_7cm1m")
}, {
"end_offset": 0.0,
"start_offset": 0.0,
"stream": ExtResource("22_7cm1m")
}, {
"end_offset": 0.0,
"start_offset": 0.0,
"stream": ExtResource("22_7cm1m")
}, {
"end_offset": 0.0,
"start_offset": 0.0,
"stream": ExtResource("22_7cm1m")
}, {
"end_offset": 0.0,
"start_offset": 0.0,
"stream": ExtResource("22_7cm1m")
}, {
"end_offset": 0.0,
"start_offset": 0.0,
"stream": ExtResource("22_7cm1m")
}, {
"end_offset": 0.0,
"start_offset": 0.0,
"stream": ExtResource("22_7cm1m")
}, {
"end_offset": 0.0,
"start_offset": 0.0,
"stream": ExtResource("22_7cm1m")
}, {
"end_offset": 0.0,
"start_offset": 0.0,
"stream": ExtResource("22_7cm1m")
}, {
"end_offset": 0.0,
"start_offset": 0.0,
"stream": ExtResource("22_7cm1m")
}, {
"end_offset": 0.0,
"start_offset": 0.0,
"stream": ExtResource("22_7cm1m")
}, {
"end_offset": 0.0,
"start_offset": 0.0,
"stream": ExtResource("22_7cm1m")
}, {
"end_offset": 0.0,
"start_offset": 0.0,
"stream": ExtResource("22_7cm1m")
}, {
"end_offset": 0.0,
"start_offset": 0.0,
"stream": ExtResource("22_7cm1m")
}, {
"end_offset": 0.0,
"start_offset": 0.0,
"stream": ExtResource("22_7cm1m")
}, {
"end_offset": 0.0,
"start_offset": 0.0,
"stream": ExtResource("22_7cm1m")
}, {
"end_offset": 0.0,
"start_offset": 0.0,
"stream": ExtResource("22_7cm1m")
}, {
"end_offset": 0.0,
"start_offset": 0.0,
"stream": ExtResource("22_7cm1m")
}, {
"end_offset": 0.0,
"start_offset": 0.0,
"stream": ExtResource("22_7cm1m")
}, {
"end_offset": 0.0,
"start_offset": 0.0,
"stream": ExtResource("22_7cm1m")
}, {
"end_offset": 0.0,
"start_offset": 0.0,
"stream": ExtResource("22_7cm1m")
}, {
"end_offset": 0.0,
"start_offset": 0.0,
"stream": ExtResource("22_7cm1m")
}, {
"end_offset": 0.0,
"start_offset": 0.0,
"stream": ExtResource("22_7cm1m")
}, {
"end_offset": 0.0,
"start_offset": 0.0,
"stream": ExtResource("22_7cm1m")
}, {
"end_offset": 0.0,
"start_offset": 0.0,
"stream": ExtResource("22_7cm1m")
}, {
"end_offset": 0.0,
"start_offset": 0.0,
"stream": ExtResource("22_7cm1m")
}, {
"end_offset": 0.0,
"start_offset": 0.0,
"stream": ExtResource("22_7cm1m")
}, {
"end_offset": 0.0,
"start_offset": 0.0,
"stream": ExtResource("22_7cm1m")
}, {
"end_offset": 0.0,
"start_offset": 0.0,
"stream": ExtResource("22_7cm1m")
}, {
"end_offset": 0.0,
"start_offset": 0.0,
"stream": ExtResource("22_7cm1m")
}, {
"end_offset": 0.0,
"start_offset": 0.0,
"stream": ExtResource("22_7cm1m")
}, {
"end_offset": 0.0,
"start_offset": 0.0,
"stream": ExtResource("22_7cm1m")
}, {
"end_offset": 0.0,
"start_offset": 0.0,
"stream": ExtResource("22_7cm1m")
}, {
"end_offset": 0.0,
"start_offset": 0.0,
"stream": ExtResource("22_7cm1m")
}, {
"end_offset": 0.0,
"start_offset": 0.0,
"stream": ExtResource("22_7cm1m")
}, {
"end_offset": 0.0,
"start_offset": 0.0,
"stream": ExtResource("22_7cm1m")
}, {
"end_offset": 0.0,
"start_offset": 0.0,
"stream": ExtResource("22_7cm1m")
}, {
"end_offset": 0.0,
"start_offset": 0.0,
"stream": ExtResource("22_7cm1m")
}, {
"end_offset": 0.0,
"start_offset": 0.0,
"stream": ExtResource("22_7cm1m")
}, {
"end_offset": 0.0,
"start_offset": 0.0,
"stream": ExtResource("22_7cm1m")
}, {
"end_offset": 0.0,
"start_offset": 0.0,
"stream": ExtResource("22_7cm1m")
}, {
"end_offset": 0.0,
"start_offset": 0.0,
"stream": ExtResource("22_7cm1m")
}, {
"end_offset": 0.0,
"start_offset": 0.0,
"stream": ExtResource("22_7cm1m")
}, {
"end_offset": 0.0,
"start_offset": 0.0,
"stream": ExtResource("22_7cm1m")
}, {
"end_offset": 0.0,
"start_offset": 0.0,
"stream": ExtResource("22_7cm1m")
}, {
"end_offset": 0.0,
"start_offset": 0.0,
"stream": ExtResource("22_7cm1m")
}, {
"end_offset": 0.0,
"start_offset": 0.0,
"stream": ExtResource("22_7cm1m")
}, {
"end_offset": 0.0,
"start_offset": 0.0,
"stream": ExtResource("22_7cm1m")
}, {
"end_offset": 0.0,
"start_offset": 0.0,
"stream": ExtResource("22_7cm1m")
}, {
"end_offset": 0.0,
"start_offset": 0.0,
"stream": ExtResource("22_7cm1m")
}, {
"end_offset": 0.0,
"start_offset": 0.0,
"stream": ExtResource("22_7cm1m")
}, {
"end_offset": 0.0,
"start_offset": 0.0,
"stream": ExtResource("22_7cm1m")
}, {
"end_offset": 0.0,
"start_offset": 0.0,
"stream": ExtResource("22_7cm1m")
}, {
"end_offset": 0.0,
"start_offset": 0.0,
"stream": ExtResource("22_7cm1m")
}, {
"end_offset": 0.0,
"start_offset": 0.0,
"stream": ExtResource("22_7cm1m")
}, {
"end_offset": 0.0,
"start_offset": 0.0,
"stream": ExtResource("22_7cm1m")
}, {
"end_offset": 0.0,
"start_offset": 0.0,
"stream": ExtResource("22_7cm1m")
}, {
"end_offset": 0.0,
"start_offset": 0.0,
"stream": ExtResource("22_7cm1m")
}, {
"end_offset": 0.0,
"start_offset": 0.0,
"stream": ExtResource("22_7cm1m")
}, {
"end_offset": 0.0,
"start_offset": 0.0,
"stream": ExtResource("22_7cm1m")
}, {
"end_offset": 0.0,
"start_offset": 0.0,
"stream": ExtResource("22_7cm1m")
}, {
"end_offset": 0.0,
"start_offset": 0.0,
"stream": ExtResource("22_7cm1m")
}, {
"end_offset": 0.0,
"start_offset": 0.0,
"stream": ExtResource("22_7cm1m")
}, {
"end_offset": 0.0,
"start_offset": 0.0,
"stream": ExtResource("22_7cm1m")
}, {
"end_offset": 0.0,
"start_offset": 0.0,
"stream": ExtResource("22_7cm1m")
}, {
"end_offset": 0.0,
"start_offset": 0.0,
"stream": ExtResource("22_7cm1m")
}, {
"end_offset": 0.0,
"start_offset": 0.0,
"stream": ExtResource("22_7cm1m")
}, {
"end_offset": 0.0,
"start_offset": 0.0,
"stream": ExtResource("22_7cm1m")
}, {
"end_offset": 0.0,
"start_offset": 0.0,
"stream": ExtResource("22_7cm1m")
}, {
"end_offset": 0.0,
"start_offset": 0.0,
"stream": ExtResource("22_7cm1m")
}, {
"end_offset": 0.0,
"start_offset": 0.0,
"stream": ExtResource("22_7cm1m")
}, {
"end_offset": 0.0,
"start_offset": 0.0,
"stream": ExtResource("22_7cm1m")
}, {
"end_offset": 0.0,
"start_offset": 0.0,
"stream": ExtResource("22_7cm1m")
}, {
"end_offset": 0.0,
"start_offset": 0.0,
"stream": ExtResource("22_7cm1m")
}, {
"end_offset": 0.0,
"start_offset": 0.0,
"stream": ExtResource("22_7cm1m")
}, {
"end_offset": 0.0,
"start_offset": 0.0,
"stream": ExtResource("22_7cm1m")
}, {
"end_offset": 0.0,
"start_offset": 0.0,
"stream": ExtResource("22_7cm1m")
}, {
"end_offset": 0.0,
"start_offset": 0.0,
"stream": ExtResource("22_7cm1m")
}, {
"end_offset": 0.0,
"start_offset": 0.0,
"stream": ExtResource("22_7cm1m")
}, {
"end_offset": 0.0,
"start_offset": 0.0,
"stream": ExtResource("22_7cm1m")
}, {
"end_offset": 0.0,
"start_offset": 0.0,
"stream": ExtResource("22_7cm1m")
}, {
"end_offset": 0.0,
"start_offset": 0.0,
"stream": ExtResource("22_7cm1m")
}, {
"end_offset": 0.0,
"start_offset": 0.0,
"stream": ExtResource("22_7cm1m")
}, {
"end_offset": 0.0,
"start_offset": 0.0,
"stream": ExtResource("22_7cm1m")
}, {
"end_offset": 0.0,
"start_offset": 0.0,
"stream": ExtResource("22_7cm1m")
}, {
"end_offset": 0.0,
"start_offset": 0.0,
"stream": ExtResource("22_7cm1m")
}, {
"end_offset": 0.0,
"start_offset": 0.0,
"stream": ExtResource("22_7cm1m")
}, {
"end_offset": 0.0,
"start_offset": 0.0,
"stream": ExtResource("27_0t7cb")
}, {
"end_offset": 0.0,
"start_offset": 0.0,
"stream": ExtResource("27_0t7cb")
}, {
"end_offset": 0.0,
"start_offset": 0.0,
"stream": ExtResource("27_0t7cb")
}, {
"end_offset": 0.0,
"start_offset": 0.0,
"stream": ExtResource("27_0t7cb")
}, {
"end_offset": 0.0,
"start_offset": 0.0,
"stream": ExtResource("22_7cm1m")
}, {
"end_offset": 0.0,
"start_offset": 0.0,
"stream": ExtResource("22_7cm1m")
}, {
"end_offset": 0.0,
"start_offset": 0.0,
"stream": ExtResource("22_7cm1m")
}, {
"end_offset": 0.0,
"start_offset": 0.0,
"stream": ExtResource("22_7cm1m")
}, {
"end_offset": 0.0,
"start_offset": 0.0,
"stream": ExtResource("22_7cm1m")
}, {
"end_offset": 0.0,
"start_offset": 0.0,
"stream": ExtResource("22_7cm1m")
}, {
"end_offset": 0.0,
"start_offset": 0.0,
"stream": ExtResource("22_7cm1m")
}, {
"end_offset": 0.0,
"start_offset": 0.0,
"stream": ExtResource("22_7cm1m")
}, {
"end_offset": 0.0,
"start_offset": 0.0,
"stream": ExtResource("22_7cm1m")
}, {
"end_offset": 0.0,
"start_offset": 0.0,
"stream": ExtResource("22_7cm1m")
}, {
"end_offset": 0.0,
"start_offset": 0.0,
"stream": ExtResource("22_7cm1m")
}, {
"end_offset": 0.0,
"start_offset": 0.0,
"stream": ExtResource("22_7cm1m")
}, {
"end_offset": 0.0,
"start_offset": 0.0,
"stream": ExtResource("22_7cm1m")
}, {
"end_offset": 0.0,
"start_offset": 0.0,
"stream": ExtResource("22_7cm1m")
}, {
"end_offset": 0.0,
"start_offset": 0.0,
"stream": ExtResource("22_7cm1m")
}, {
"end_offset": 0.0,
"start_offset": 0.0,
"stream": ExtResource("22_7cm1m")
}, {
"end_offset": 0.0,
"start_offset": 0.0,
"stream": ExtResource("22_7cm1m")
}, {
"end_offset": 0.0,
"start_offset": 0.0,
"stream": ExtResource("22_7cm1m")
}, {
"end_offset": 0.0,
"start_offset": 0.0,
"stream": ExtResource("22_7cm1m")
}, {
"end_offset": 0.0,
"start_offset": 0.0,
"stream": ExtResource("22_7cm1m")
}, {
"end_offset": 0.0,
"start_offset": 0.0,
"stream": ExtResource("22_7cm1m")
}, {
"end_offset": 0.0,
"start_offset": 0.0,
"stream": ExtResource("22_7cm1m")
}, {
"end_offset": 0.0,
"start_offset": 0.0,
"stream": ExtResource("22_7cm1m")
}, {
"end_offset": 0.0,
"start_offset": 0.0,
"stream": ExtResource("22_7cm1m")
}, {
"end_offset": 0.0,
"start_offset": 0.0,
"stream": ExtResource("22_7cm1m")
}, {
"end_offset": 0.0,
"start_offset": 0.0,
"stream": ExtResource("22_7cm1m")
}, {
"end_offset": 0.0,
"start_offset": 0.0,
"stream": ExtResource("22_7cm1m")
}, {
"end_offset": 0.0,
"start_offset": 0.0,
"stream": ExtResource("22_7cm1m")
}, {
"end_offset": 0.0,
"start_offset": 0.0,
"stream": ExtResource("22_7cm1m")
}, {
"end_offset": 0.0,
"start_offset": 0.0,
"stream": ExtResource("22_7cm1m")
}, {
"end_offset": 0.0,
"start_offset": 0.0,
"stream": ExtResource("22_7cm1m")
}, {
"end_offset": 0.0,
"start_offset": 0.0,
"stream": ExtResource("22_7cm1m")
}, {
"end_offset": 0.0,
"start_offset": 0.0,
"stream": ExtResource("22_7cm1m")
}, {
"end_offset": 0.0,
"start_offset": 0.0,
"stream": ExtResource("22_7cm1m")
}, {
"end_offset": 0.0,
"start_offset": 0.0,
"stream": ExtResource("22_7cm1m")
}, {
"end_offset": 0.0,
"start_offset": 0.0,
"stream": ExtResource("22_7cm1m")
}, {
"end_offset": 0.0,
"start_offset": 0.0,
"stream": ExtResource("22_7cm1m")
}, {
"end_offset": 0.0,
"start_offset": 0.0,
"stream": ExtResource("22_7cm1m")
}, {
"end_offset": 0.0,
"start_offset": 0.0,
"stream": ExtResource("22_7cm1m")
}, {
"end_offset": 0.0,
"start_offset": 0.0,
"stream": ExtResource("22_7cm1m")
}, {
"end_offset": 0.0,
"start_offset": 0.0,
"stream": ExtResource("22_7cm1m")
}, {
"end_offset": 0.0,
"start_offset": 0.0,
"stream": ExtResource("22_7cm1m")
}, {
"end_offset": 0.0,
"start_offset": 0.0,
"stream": ExtResource("22_7cm1m")
}, {
"end_offset": 0.0,
"start_offset": 0.0,
"stream": ExtResource("22_7cm1m")
}, {
"end_offset": 0.0,
"start_offset": 0.0,
"stream": ExtResource("22_7cm1m")
}, {
"end_offset": 0.0,
"start_offset": 0.0,
"stream": ExtResource("22_7cm1m")
}, {
"end_offset": 0.0,
"start_offset": 0.0,
"stream": ExtResource("22_7cm1m")
}, {
"end_offset": 0.0,
"start_offset": 0.0,
"stream": ExtResource("22_7cm1m")
}, {
"end_offset": 0.0,
"start_offset": 0.0,
"stream": ExtResource("22_7cm1m")
}, {
"end_offset": 0.0,
"start_offset": 0.0,
"stream": ExtResource("22_7cm1m")
}, {
"end_offset": 0.0,
"start_offset": 0.0,
"stream": ExtResource("22_7cm1m")
}, {
"end_offset": 0.0,
"start_offset": 0.0,
"stream": ExtResource("22_7cm1m")
}, {
"end_offset": 0.0,
"start_offset": 0.0,
"stream": ExtResource("22_7cm1m")
}, {
"end_offset": 0.0,
"start_offset": 0.0,
"stream": ExtResource("22_7cm1m")
}, {
"end_offset": 0.0,
"start_offset": 0.0,
"stream": ExtResource("22_7cm1m")
}, {
"end_offset": 0.0,
"start_offset": 0.0,
"stream": ExtResource("22_7cm1m")
}, {
"end_offset": 0.0,
"start_offset": 0.0,
"stream": ExtResource("22_7cm1m")
}, {
"end_offset": 0.0,
"start_offset": 0.0,
"stream": ExtResource("22_7cm1m")
}, {
"end_offset": 0.0,
"start_offset": 0.0,
"stream": ExtResource("22_7cm1m")
}, {
"end_offset": 0.0,
"start_offset": 0.0,
"stream": ExtResource("22_7cm1m")
}, {
"end_offset": 0.0,
"start_offset": 0.0,
"stream": ExtResource("22_7cm1m")
}, {
"end_offset": 0.0,
"start_offset": 0.0,
"stream": ExtResource("22_7cm1m")
}, {
"end_offset": 0.0,
"start_offset": 0.0,
"stream": ExtResource("22_7cm1m")
}, {
"end_offset": 0.0,
"start_offset": 0.0,
"stream": ExtResource("22_7cm1m")
}, {
"end_offset": 0.0,
"start_offset": 0.0,
"stream": ExtResource("22_7cm1m")
}, {
"end_offset": 0.0,
"start_offset": 0.0,
"stream": ExtResource("22_7cm1m")
}, {
"end_offset": 0.0,
"start_offset": 0.0,
"stream": ExtResource("22_7cm1m")
}, {
"end_offset": 0.0,
"start_offset": 0.0,
"stream": ExtResource("22_7cm1m")
}, {
"end_offset": 0.0,
"start_offset": 0.0,
"stream": ExtResource("22_7cm1m")
}, {
"end_offset": 0.0,
"start_offset": 0.0,
"stream": ExtResource("22_7cm1m")
}, {
"end_offset": 0.0,
"start_offset": 0.0,
"stream": ExtResource("22_7cm1m")
}, {
"end_offset": 0.0,
"start_offset": 0.0,
"stream": ExtResource("22_7cm1m")
}, {
"end_offset": 0.0,
"start_offset": 0.0,
"stream": ExtResource("22_7cm1m")
}, {
"end_offset": 0.0,
"start_offset": 0.0,
"stream": ExtResource("22_7cm1m")
}, {
"end_offset": 0.0,
"start_offset": 0.0,
"stream": ExtResource("22_7cm1m")
}, {
"end_offset": 0.0,
"start_offset": 0.0,
"stream": ExtResource("22_7cm1m")
}, {
"end_offset": 0.0,
"start_offset": 0.0,
"stream": ExtResource("22_7cm1m")
}, {
"end_offset": 0.0,
"start_offset": 0.0,
"stream": ExtResource("22_7cm1m")
}, {
"end_offset": 0.0,
"start_offset": 0.0,
"stream": ExtResource("22_7cm1m")
}, {
"end_offset": 0.0,
"start_offset": 0.0,
"stream": ExtResource("22_7cm1m")
}, {
"end_offset": 0.0,
"start_offset": 0.0,
"stream": ExtResource("22_7cm1m")
}, {
"end_offset": 0.0,
"start_offset": 0.0,
"stream": ExtResource("22_7cm1m")
}, {
"end_offset": 0.0,
"start_offset": 0.0,
"stream": ExtResource("22_7cm1m")
}, {
"end_offset": 0.0,
"start_offset": 0.0,
"stream": ExtResource("22_7cm1m")
}, {
"end_offset": 0.0,
"start_offset": 0.0,
"stream": ExtResource("22_7cm1m")
}, {
"end_offset": 0.0,
"start_offset": 0.0,
"stream": ExtResource("22_7cm1m")
}, {
"end_offset": 0.0,
"start_offset": 0.0,
"stream": ExtResource("22_7cm1m")
}, {
"end_offset": 0.0,
"start_offset": 0.0,
"stream": ExtResource("22_7cm1m")
}, {
"end_offset": 0.0,
"start_offset": 0.0,
"stream": ExtResource("22_7cm1m")
}, {
"end_offset": 0.0,
"start_offset": 0.0,
"stream": ExtResource("22_7cm1m")
}, {
"end_offset": 0.0,
"start_offset": 0.0,
"stream": ExtResource("22_7cm1m")
}, {
"end_offset": 0.0,
"start_offset": 0.0,
"stream": ExtResource("22_7cm1m")
}, {
"end_offset": 0.0,
"start_offset": 0.0,
"stream": ExtResource("22_7cm1m")
}, {
"end_offset": 0.0,
"start_offset": 0.0,
"stream": ExtResource("22_7cm1m")
}, {
"end_offset": 0.0,
"start_offset": 0.0,
"stream": ExtResource("22_7cm1m")
}],
"times": PackedFloat32Array(1.8, 2, 2.1, 2.2, 2.3, 2.4, 2.5, 2.6, 2.7, 2.9, 3, 3.2, 3.3, 3.4, 3.5, 3.6, 3.8, 3.9, 4, 4.1, 4.2, 4.3, 4.4, 4.5, 4.9, 8.4, 10.8, 10.9, 11, 11.2, 11.4, 11.5, 11.6, 11.7, 11.8, 11.9, 12, 12.1, 12.2, 12.3, 12.5, 12.6, 12.7, 12.8, 13, 13.4, 13.5, 13.6, 13.7, 13.8, 13.9, 14, 14.1, 14.2, 14.3, 14.5, 14.7, 14.8, 15, 15.1, 15.3, 15.4, 15.6, 15.7, 18.9, 19.2, 19.3, 19.4, 19.5, 19.6, 19.7, 19.8, 19.9, 20, 20.1, 20.2, 20.8, 20.9, 21, 21.1, 21.2, 21.3, 21.4, 21.5, 21.6, 21.7, 21.8, 21.9, 22, 22.1, 22.2, 22.3, 22.4, 23.3, 23.5, 23.6, 23.7, 23.8, 23.9, 24.1, 24.2, 24.3, 24.4, 24.5, 24.6, 24.7, 24.8, 24.9, 25, 25.1, 25.2, 25.3, 26.6, 26.7, 26.8, 26.9, 27, 27.1, 27.2, 27.3, 27.4, 27.5, 27.6, 27.7, 27.8, 27.9, 28, 28.1, 28.2, 28.3, 28.4, 28.5, 28.6, 28.7, 28.8, 28.9, 29, 29.1, 29.2, 29.3, 29.4, 29.5, 29.6, 29.7, 29.8, 29.9, 30, 30.1, 30.2, 30.3, 31, 31.1, 31.2, 31.5, 31.6, 31.7, 31.8, 31.9, 32.2, 32.3, 32.4, 32.5, 32.7, 33.1, 33.3, 33.6, 33.8, 34, 36.8, 37.2, 37.7, 38.1, 41.2, 41.3, 41.4, 41.5, 41.6, 41.7, 41.8, 41.9, 42, 42.1, 42.3, 42.4, 42.7, 42.8, 42.9, 43.1, 43.2, 43.3, 43.4, 43.5, 43.6, 44.8, 44.9, 45, 45.1, 45.2, 45.4, 45.5, 45.6, 45.7, 45.8, 45.9, 46.1, 46.2, 46.3, 46.4, 46.5, 46.6, 46.9, 47, 47.1, 47.2, 47.3, 47.5, 47.6, 47.7, 47.8, 47.9, 48, 48.1, 48.2, 48.3, 48.4, 56.8, 56.9, 57, 57.1, 57.3, 57.4, 57.6, 57.7, 57.8, 57.9, 58, 58.1, 58.2, 58.5, 58.6, 58.7, 58.9, 59.2, 59.3, 59.4, 59.5, 59.7, 59.8, 60, 60.1, 60.2, 60.3, 60.5, 60.6, 60.8, 61, 61.1, 61.2, 61.3, 61.4, 61.6, 61.8, 61.9, 62, 62.1, 62.2, 62.3)
}
tracks/26/use_blend = true
tracks/27/type = "method"
tracks/27/imported = false
tracks/27/enabled = true
tracks/27/path = NodePath(".")
tracks/27/interp = 1
tracks/27/loop_wrap = true
tracks/27/keys = {
"times": PackedFloat32Array(20.7, 50.4, 51.3, 62.5),
"transitions": PackedFloat32Array(1, 1, 1, 1),
"values": [{
"args": [],
"method": &"start_bg"
}, {
"args": [],
"method": &"first_crows"
}, {
"args": [],
"method": &"second_crows"
}, {
"args": [],
"method": &"platformer_create"
}]
}
tracks/28/type = "value"
tracks/28/imported = false
tracks/28/enabled = true
tracks/28/path = NodePath("BossCutScene/Caw:visible")
tracks/28/interp = 1
tracks/28/loop_wrap = true
tracks/28/keys = {
"times": PackedFloat32Array(0, 36.4),
"transitions": PackedFloat32Array(1, 1),
"update": 1,
"values": [false, true]
}
tracks/29/type = "value"
tracks/29/imported = false
tracks/29/enabled = true
tracks/29/path = NodePath("BossCutScene/Caw:modulate")
tracks/29/interp = 1
tracks/29/loop_wrap = true
tracks/29/keys = {
"times": PackedFloat32Array(36.4, 36.8, 37.3, 37.8, 38.3),
"transitions": PackedFloat32Array(1, 1, 1, 1, 1),
"update": 0,
"values": [Color(1, 1, 1, 0), Color(1, 1, 1, 1), Color(1, 1, 1, 0), Color(1, 1, 1, 1), Color(1, 1, 1, 0)]
}
tracks/30/type = "value"
tracks/30/imported = false
tracks/30/enabled = true
tracks/30/path = NodePath("BossCutScene/Caw2:visible")
tracks/30/interp = 1
tracks/30/loop_wrap = true
tracks/30/keys = {
"times": PackedFloat32Array(0, 36.4),
"transitions": PackedFloat32Array(1, 1),
"update": 1,
"values": [false, true]
}
tracks/31/type = "value"
tracks/31/imported = false
tracks/31/enabled = true
tracks/31/path = NodePath("BossCutScene/Caw2:modulate")
tracks/31/interp = 1
tracks/31/loop_wrap = true
tracks/31/keys = {
"times": PackedFloat32Array(0, 36.4, 36.7, 37, 37.3, 37.6, 38.1, 38.5),
"transitions": PackedFloat32Array(1, 1, 1, 1, 1, 1, 1, 1),
"update": 0,
"values": [Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 1), Color(1, 1, 1, 0), Color(1, 1, 1, 1), Color(1, 1, 1, 0), Color(1, 1, 1, 1), Color(1, 1, 1, 0)]
}
tracks/32/type = "value"
tracks/32/imported = false
tracks/32/enabled = true
tracks/32/path = NodePath("BossCutScene/Caw3:visible")
tracks/32/interp = 1
tracks/32/loop_wrap = true
tracks/32/keys = {
"times": PackedFloat32Array(0, 36.4),
"transitions": PackedFloat32Array(1, 1),
"update": 1,
"values": [false, true]
}
tracks/33/type = "value"
tracks/33/imported = false
tracks/33/enabled = true
tracks/33/path = NodePath("BossCutScene/Caw3:modulate")
tracks/33/interp = 1
tracks/33/loop_wrap = true
tracks/33/keys = {
"times": PackedFloat32Array(0, 36.4, 36.8, 37.3, 37.8, 38.3),
"transitions": PackedFloat32Array(1, 1, 1, 1, 1, 1),
"update": 0,
"values": [Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 1), Color(1, 1, 1, 0), Color(1, 1, 1, 1), Color(1, 1, 1, 0)]
}
tracks/34/type = "value"
tracks/34/imported = false
tracks/34/enabled = true
tracks/34/path = NodePath("BossCutScene/RichTextLabel:visible")
tracks/34/interp = 1
tracks/34/loop_wrap = true
tracks/34/keys = {
"times": PackedFloat32Array(0, 6, 10.7, 18, 18.2, 18.9, 20.5, 20.7, 20.9, 50.4, 56.1, 66.9),
"transitions": PackedFloat32Array(1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1),
"update": 1,
"values": [true, false, true, true, false, true, true, false, true, false, true, false]
}
tracks/35/type = "value"
tracks/35/imported = false
tracks/35/enabled = true
tracks/35/path = NodePath("BossCutScene/CrowGigante:position")
tracks/35/interp = 1
tracks/35/loop_wrap = true
tracks/35/keys = {
"times": PackedFloat32Array(62.7, 63.1, 64.3, 65.8, 68, 68.5, 68.9),
"transitions": PackedFloat32Array(1, 1, 1, 1, 1, 1, 1),
"update": 0,
"values": [Vector2(176, 155), Vector2(176, 155), Vector2(198, 161), Vector2(227, 165), Vector2(495.274, 210.204), Vector2(558.899, 220.091), Vector2(617, 228)]
}
tracks/36/type = "value"
tracks/36/imported = false
tracks/36/enabled = true
tracks/36/path = NodePath("BossCutScene/Corvissius/Smoking:flip_h")
tracks/36/interp = 1
tracks/36/loop_wrap = true
tracks/36/keys = {
"times": PackedFloat32Array(0, 54.8, 55.4, 65.2),
"transitions": PackedFloat32Array(1, 1, 1, 1),
"update": 1,
"values": [false, false, true, false]
}
tracks/37/type = "value"
tracks/37/imported = false
tracks/37/enabled = true
tracks/37/path = NodePath("BossCutScene/duvida:visible")
tracks/37/interp = 1
tracks/37/loop_wrap = true
tracks/37/keys = {
"times": PackedFloat32Array(0, 9.7, 11.1),
"transitions": PackedFloat32Array(1, 1, 1),
"update": 1,
"values": [false, true, false]
}
tracks/38/type = "animation"
tracks/38/imported = false
tracks/38/enabled = true
tracks/38/path = NodePath("BossCutScene/CrowGigante/AnimationPlayer")
tracks/38/interp = 1
tracks/38/loop_wrap = true
tracks/38/keys = {
"clips": PackedStringArray("landing", "fly_and_stay"),
"times": PackedFloat32Array(54.7, 63)
}
tracks/39/type = "value"
tracks/39/imported = false
tracks/39/enabled = true
tracks/39/path = NodePath("BossCutScene/GPUParticles2D:emitting")
tracks/39/interp = 1
tracks/39/loop_wrap = true
tracks/39/keys = {
"times": PackedFloat32Array(53.7),
"transitions": PackedFloat32Array(1),
"update": 1,
"values": [true]
}
tracks/40/type = "value"
tracks/40/imported = false
tracks/40/enabled = true
tracks/40/path = NodePath("BossCutScene/Node2D/Crow:position")
tracks/40/interp = 1
tracks/40/loop_wrap = true
tracks/40/keys = {
"times": PackedFloat32Array(34.5, 36.5, 38.4, 42.7),
"transitions": PackedFloat32Array(1, 1, 1, 1),
"update": 0,
"values": [Vector2(34, -16), Vector2(80, 72), Vector2(80, 72), Vector2(625, 248)]
}
tracks/41/type = "method"
tracks/41/imported = false
tracks/41/enabled = true
tracks/41/path = NodePath("BossCutScene/Node2D/Crow")
tracks/41/interp = 1
tracks/41/loop_wrap = true
tracks/41/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"values": [{
"args": [],
"method": &"donot_move"
}]
}
tracks/42/type = "animation"
tracks/42/imported = false
tracks/42/enabled = true
tracks/42/path = NodePath("BossCutScene/Node2D/Crow/AnimationPlayer")
tracks/42/interp = 1
tracks/42/loop_wrap = true
tracks/42/keys = {
"clips": PackedStringArray("landing", "fly_and_stay"),
"times": PackedFloat32Array(32.6, 38)
}
tracks/43/type = "value"
tracks/43/imported = false
tracks/43/enabled = true
tracks/43/path = NodePath("BossCutScene/CrowGigante:modulate")
tracks/43/interp = 1
tracks/43/loop_wrap = true
tracks/43/keys = {
"times": PackedFloat32Array(0, 53.7, 55.5),
"transitions": PackedFloat32Array(1, 1, 1),
"update": 0,
"values": [Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 1)]
}
tracks/44/type = "value"
tracks/44/imported = false
tracks/44/enabled = true
tracks/44/path = NodePath("BossCutScene/Node2D/Crow2:position")
tracks/44/interp = 1
tracks/44/loop_wrap = true
tracks/44/keys = {
"times": PackedFloat32Array(34.6, 36.5, 42.9, 44.6, 46.2, 49.1, 51.3),
"transitions": PackedFloat32Array(1, 1, 1, 1, 1, 1, 1),
"update": 0,
"values": [Vector2(281, -15), Vector2(265, 72), Vector2(265, 72), Vector2(146, 110), Vector2(22, 88), Vector2(22, 88), Vector2(273, 134)]
}
tracks/45/type = "animation"
tracks/45/imported = false
tracks/45/enabled = true
tracks/45/path = NodePath("BossCutScene/Node2D/Crow3/AnimationPlayer")
tracks/45/interp = 1
tracks/45/loop_wrap = true
tracks/45/keys = {
"clips": PackedStringArray("landing"),
"times": PackedFloat32Array(32.7)
}
tracks/46/type = "animation"
tracks/46/imported = false
tracks/46/enabled = true
tracks/46/path = NodePath("BossCutScene/Node2D/Crow2/AnimationPlayer")
tracks/46/interp = 1
tracks/46/loop_wrap = true
tracks/46/keys = {
"clips": PackedStringArray("landing"),
"times": PackedFloat32Array(32.7)
}
tracks/47/type = "value"
tracks/47/imported = false
tracks/47/enabled = true
tracks/47/path = NodePath("BossCutScene/Node2D/Crow3:position")
tracks/47/interp = 1
tracks/47/loop_wrap = true
tracks/47/keys = {
"times": PackedFloat32Array(34.6, 36.5, 41.3, 42.5, 43.4, 44.7, 46.1, 47.9, 48.9, 50.4),
"transitions": PackedFloat32Array(1, 1, 1, 1, 1, 1, 1, 1, 1, 1),
"update": 0,
"values": [Vector2(246, 366), Vector2(247, 235), Vector2(247, 235), Vector2(173, 169), Vector2(173, 169), Vector2(321, 57), Vector2(321, 57), Vector2(151, 119), Vector2(151, 119), Vector2(310, 165)]
}
tracks/48/type = "value"
tracks/48/imported = false
tracks/48/enabled = true
tracks/48/path = NodePath("BossCutScene/Node2D/Crow3/Sprite2D:flip_h")
tracks/48/interp = 1
tracks/48/loop_wrap = true
tracks/48/keys = {
"times": PackedFloat32Array(0, 43.4, 45, 48.9),
"transitions": PackedFloat32Array(1, 1, 1, 1),
"update": 1,
"values": [true, false, true, false]
}
tracks/49/type = "value"
tracks/49/imported = false
tracks/49/enabled = true
tracks/49/path = NodePath("BossCutScene/Node2D/Crow2/Sprite2D:flip_h")
tracks/49/interp = 1
tracks/49/loop_wrap = true
tracks/49/keys = {
"times": PackedFloat32Array(0, 46.4),
"transitions": PackedFloat32Array(1, 1),
"update": 1,
"values": [true, false]
}
tracks/50/type = "method"
tracks/50/imported = false
tracks/50/enabled = true
tracks/50/path = NodePath("BossCutScene/Node2D/Crow3")
tracks/50/interp = 1
tracks/50/loop_wrap = true
tracks/50/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"values": [{
"args": [],
"method": &"donot_move"
}]
}
tracks/51/type = "method"
tracks/51/imported = false
tracks/51/enabled = true
tracks/51/path = NodePath("BossCutScene/Node2D/Crow2")
tracks/51/interp = 1
tracks/51/loop_wrap = true
tracks/51/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"values": [{
"args": [],
"method": &"donot_move"
}]
}
tracks/52/type = "value"
tracks/52/imported = false
tracks/52/enabled = true
tracks/52/path = NodePath("BossCutScene/Node2D/Crow3:visible")
tracks/52/interp = 1
tracks/52/loop_wrap = true
tracks/52/keys = {
"times": PackedFloat32Array(0, 50.4),
"transitions": PackedFloat32Array(1, 1),
"update": 1,
"values": [true, false]
}
tracks/53/type = "value"
tracks/53/imported = false
tracks/53/enabled = true
tracks/53/path = NodePath("BossCutScene/Node2D/Crow2:visible")
tracks/53/interp = 1
tracks/53/loop_wrap = true
tracks/53/keys = {
"times": PackedFloat32Array(0, 51.3),
"transitions": PackedFloat32Array(1, 1),
"update": 1,
"values": [true, false]
}

[sub_resource type="AnimationLibrary" id="AnimationLibrary_mdch8"]
_data = {
"RESET": SubResource("Animation_iyjug"),
"default": SubResource("Animation_paeog")
}

[sub_resource type="CapsuleShape2D" id="CapsuleShape2D_8uhbr"]
height = 46.0

[sub_resource type="Animation" id="Animation_6gifg"]
length = 0.001
tracks/0/type = "value"
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/path = NodePath("Sprite2D:texture")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 1,
"values": [ExtResource("25_6w6m1")]
}
tracks/1/type = "value"
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/path = NodePath("Sprite2D:hframes")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 1,
"values": [8]
}
tracks/2/type = "value"
tracks/2/imported = false
tracks/2/enabled = true
tracks/2/path = NodePath("Sprite2D:vframes")
tracks/2/interp = 1
tracks/2/loop_wrap = true
tracks/2/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 1,
"values": [3]
}
tracks/3/type = "value"
tracks/3/imported = false
tracks/3/enabled = true
tracks/3/path = NodePath("Sprite2D:frame")
tracks/3/interp = 1
tracks/3/loop_wrap = true
tracks/3/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 1,
"values": [0]
}

[sub_resource type="Animation" id="Animation_4x5ew"]
resource_name = "closing"
length = 0.7
tracks/0/type = "value"
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/path = NodePath("Sprite2D:texture")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 1,
"values": [ExtResource("25_6w6m1")]
}
tracks/1/type = "value"
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/path = NodePath("Sprite2D:hframes")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 1,
"values": [8]
}
tracks/2/type = "value"
tracks/2/imported = false
tracks/2/enabled = true
tracks/2/path = NodePath("Sprite2D:vframes")
tracks/2/interp = 1
tracks/2/loop_wrap = true
tracks/2/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 1,
"values": [3]
}
tracks/3/type = "value"
tracks/3/imported = false
tracks/3/enabled = true
tracks/3/path = NodePath("Sprite2D:frame")
tracks/3/interp = 1
tracks/3/loop_wrap = true
tracks/3/keys = {
"times": PackedFloat32Array(0, 0.1, 0.2, 0.3, 0.4, 0.5),
"transitions": PackedFloat32Array(1, 1, 1, 1, 1, 1),
"update": 1,
"values": [16, 17, 18, 19, 20, 21]
}

[sub_resource type="Animation" id="Animation_lvaar"]
resource_name = "idle"
length = 0.8
loop_mode = 1
tracks/0/type = "value"
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/path = NodePath("Sprite2D:texture")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 1,
"values": [ExtResource("25_6w6m1")]
}
tracks/1/type = "value"
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/path = NodePath("Sprite2D:hframes")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 1,
"values": [8]
}
tracks/2/type = "value"
tracks/2/imported = false
tracks/2/enabled = true
tracks/2/path = NodePath("Sprite2D:vframes")
tracks/2/interp = 1
tracks/2/loop_wrap = true
tracks/2/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 1,
"values": [3]
}
tracks/3/type = "value"
tracks/3/imported = false
tracks/3/enabled = true
tracks/3/path = NodePath("Sprite2D:frame")
tracks/3/interp = 1
tracks/3/loop_wrap = true
tracks/3/keys = {
"times": PackedFloat32Array(0, 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7),
"transitions": PackedFloat32Array(1, 1, 1, 1, 1, 1, 1, 1),
"update": 1,
"values": [0, 1, 2, 3, 4, 5, 6, 7]
}

[sub_resource type="Animation" id="Animation_6rdc7"]
resource_name = "open"
length = 0.7
tracks/0/type = "value"
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/path = NodePath("Sprite2D:texture")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 1,
"values": [ExtResource("25_6w6m1")]
}
tracks/1/type = "value"
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/path = NodePath("Sprite2D:hframes")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 1,
"values": [8]
}
tracks/2/type = "value"
tracks/2/imported = false
tracks/2/enabled = true
tracks/2/path = NodePath("Sprite2D:vframes")
tracks/2/interp = 1
tracks/2/loop_wrap = true
tracks/2/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 1,
"values": [3]
}
tracks/3/type = "value"
tracks/3/imported = false
tracks/3/enabled = true
tracks/3/path = NodePath("Sprite2D:frame")
tracks/3/interp = 1
tracks/3/loop_wrap = true
tracks/3/keys = {
"times": PackedFloat32Array(0, 0.1, 0.2, 0.3, 0.4, 0.5),
"transitions": PackedFloat32Array(1, 1, 1, 1, 1, 1),
"update": 1,
"values": [8, 9, 10, 11, 12, 13]
}

[sub_resource type="AnimationLibrary" id="AnimationLibrary_b8agh"]
_data = {
"RESET": SubResource("Animation_6gifg"),
"closing": SubResource("Animation_4x5ew"),
"idle": SubResource("Animation_lvaar"),
"open": SubResource("Animation_6rdc7")
}

[sub_resource type="AtlasTexture" id="AtlasTexture_5qjnj"]
atlas = ExtResource("26_lnyvi")
region = Rect2(0, 0, 20, 22)

[sub_resource type="AtlasTexture" id="AtlasTexture_inlud"]
atlas = ExtResource("27_cr0n0")
region = Rect2(0, 0, 20, 22)

[sub_resource type="AtlasTexture" id="AtlasTexture_6ad3c"]
atlas = ExtResource("28_3j6fu")
region = Rect2(0, 0, 20, 22)

[sub_resource type="AtlasTexture" id="AtlasTexture_oyewu"]
atlas = ExtResource("29_2aju2")
region = Rect2(0, 0, 20, 22)

[sub_resource type="SpriteFrames" id="SpriteFrames_n5vql"]
animations = [{
"frames": [{
"duration": 1.0,
"texture": SubResource("AtlasTexture_5qjnj")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_inlud")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_6ad3c")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_oyewu")
}],
"loop": true,
"name": &"default",
"speed": 5.0
}]

[sub_resource type="CapsuleShape2D" id="CapsuleShape2D_x4l77"]
radius = 6.0
height = 24.0

[sub_resource type="Animation" id="Animation_387of"]
length = 0.001
tracks/0/type = "value"
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/path = NodePath("Walk:texture")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 1,
"values": [ExtResource("29_0qnps")]
}
tracks/1/type = "value"
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/path = NodePath("Walk:hframes")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 1,
"values": [5]
}
tracks/2/type = "value"
tracks/2/imported = false
tracks/2/enabled = true
tracks/2/path = NodePath("Walk:vframes")
tracks/2/interp = 1
tracks/2/loop_wrap = true
tracks/2/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 1,
"values": [1]
}
tracks/3/type = "value"
tracks/3/imported = false
tracks/3/enabled = true
tracks/3/path = NodePath("Walk:frame")
tracks/3/interp = 1
tracks/3/loop_wrap = true
tracks/3/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 1,
"values": [0]
}
tracks/4/type = "value"
tracks/4/imported = false
tracks/4/enabled = true
tracks/4/path = NodePath("Laught:texture")
tracks/4/interp = 1
tracks/4/loop_wrap = true
tracks/4/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 1,
"values": [ExtResource("29_0qnps")]
}
tracks/5/type = "value"
tracks/5/imported = false
tracks/5/enabled = true
tracks/5/path = NodePath("Laught:hframes")
tracks/5/interp = 1
tracks/5/loop_wrap = true
tracks/5/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 1,
"values": [4]
}
tracks/6/type = "value"
tracks/6/imported = false
tracks/6/enabled = true
tracks/6/path = NodePath("Laught:vframes")
tracks/6/interp = 1
tracks/6/loop_wrap = true
tracks/6/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 1,
"values": [1]
}
tracks/7/type = "value"
tracks/7/imported = false
tracks/7/enabled = true
tracks/7/path = NodePath("Laught:frame")
tracks/7/interp = 1
tracks/7/loop_wrap = true
tracks/7/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 1,
"values": [0]
}
tracks/8/type = "value"
tracks/8/imported = false
tracks/8/enabled = true
tracks/8/path = NodePath("Crow:texture")
tracks/8/interp = 1
tracks/8/loop_wrap = true
tracks/8/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 1,
"values": [ExtResource("29_0qnps")]
}
tracks/9/type = "value"
tracks/9/imported = false
tracks/9/enabled = true
tracks/9/path = NodePath("Crow:hframes")
tracks/9/interp = 1
tracks/9/loop_wrap = true
tracks/9/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 1,
"values": [4]
}
tracks/10/type = "value"
tracks/10/imported = false
tracks/10/enabled = true
tracks/10/path = NodePath("Crow:vframes")
tracks/10/interp = 1
tracks/10/loop_wrap = true
tracks/10/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 1,
"values": [1]
}
tracks/11/type = "value"
tracks/11/imported = false
tracks/11/enabled = true
tracks/11/path = NodePath("Crow:frame")
tracks/11/interp = 1
tracks/11/loop_wrap = true
tracks/11/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 1,
"values": [0]
}
tracks/12/type = "value"
tracks/12/imported = false
tracks/12/enabled = true
tracks/12/path = NodePath("Smoking:texture")
tracks/12/interp = 1
tracks/12/loop_wrap = true
tracks/12/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 1,
"values": [ExtResource("29_0qnps")]
}
tracks/13/type = "value"
tracks/13/imported = false
tracks/13/enabled = true
tracks/13/path = NodePath("Smoking:hframes")
tracks/13/interp = 1
tracks/13/loop_wrap = true
tracks/13/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 1,
"values": [4]
}
tracks/14/type = "value"
tracks/14/imported = false
tracks/14/enabled = true
tracks/14/path = NodePath("Smoking:vframes")
tracks/14/interp = 1
tracks/14/loop_wrap = true
tracks/14/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 1,
"values": [1]
}
tracks/15/type = "value"
tracks/15/imported = false
tracks/15/enabled = true
tracks/15/path = NodePath("Smoking:frame")
tracks/15/interp = 1
tracks/15/loop_wrap = true
tracks/15/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 1,
"values": [0]
}
tracks/16/type = "value"
tracks/16/imported = false
tracks/16/enabled = true
tracks/16/path = NodePath("Jump:texture")
tracks/16/interp = 1
tracks/16/loop_wrap = true
tracks/16/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 1,
"values": [ExtResource("29_0qnps")]
}
tracks/17/type = "value"
tracks/17/imported = false
tracks/17/enabled = true
tracks/17/path = NodePath("Jump:hframes")
tracks/17/interp = 1
tracks/17/loop_wrap = true
tracks/17/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 1,
"values": [3]
}
tracks/18/type = "value"
tracks/18/imported = false
tracks/18/enabled = true
tracks/18/path = NodePath("Jump:vframes")
tracks/18/interp = 1
tracks/18/loop_wrap = true
tracks/18/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 1,
"values": [1]
}
tracks/19/type = "value"
tracks/19/imported = false
tracks/19/enabled = true
tracks/19/path = NodePath("Jump:frame")
tracks/19/interp = 1
tracks/19/loop_wrap = true
tracks/19/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 1,
"values": [0]
}
tracks/20/type = "value"
tracks/20/imported = false
tracks/20/enabled = true
tracks/20/path = NodePath("Jump2:texture")
tracks/20/interp = 1
tracks/20/loop_wrap = true
tracks/20/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 1,
"values": [ExtResource("29_0qnps")]
}
tracks/21/type = "value"
tracks/21/imported = false
tracks/21/enabled = true
tracks/21/path = NodePath("Jump2:hframes")
tracks/21/interp = 1
tracks/21/loop_wrap = true
tracks/21/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 1,
"values": [4]
}
tracks/22/type = "value"
tracks/22/imported = false
tracks/22/enabled = true
tracks/22/path = NodePath("Jump2:vframes")
tracks/22/interp = 1
tracks/22/loop_wrap = true
tracks/22/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 1,
"values": [1]
}
tracks/23/type = "value"
tracks/23/imported = false
tracks/23/enabled = true
tracks/23/path = NodePath("Jump2:frame")
tracks/23/interp = 1
tracks/23/loop_wrap = true
tracks/23/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 1,
"values": [0]
}
tracks/24/type = "value"
tracks/24/imported = false
tracks/24/enabled = true
tracks/24/path = NodePath("Jump:visible")
tracks/24/interp = 1
tracks/24/loop_wrap = true
tracks/24/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 1,
"values": [false]
}
tracks/25/type = "value"
tracks/25/imported = false
tracks/25/enabled = true
tracks/25/path = NodePath("Jump2:visible")
tracks/25/interp = 1
tracks/25/loop_wrap = true
tracks/25/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 1,
"values": [false]
}

[sub_resource type="Animation" id="Animation_otuud"]
resource_name = "crow"
length = 2.0
loop_mode = 1
tracks/0/type = "value"
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/path = NodePath("Crow:texture")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 1,
"values": [ExtResource("29_0qnps")]
}
tracks/1/type = "value"
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/path = NodePath("Crow:hframes")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 1,
"values": [4]
}
tracks/2/type = "value"
tracks/2/imported = false
tracks/2/enabled = true
tracks/2/path = NodePath("Crow:vframes")
tracks/2/interp = 1
tracks/2/loop_wrap = true
tracks/2/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 1,
"values": [1]
}
tracks/3/type = "value"
tracks/3/imported = false
tracks/3/enabled = true
tracks/3/path = NodePath("Crow:frame")
tracks/3/interp = 1
tracks/3/loop_wrap = true
tracks/3/keys = {
"times": PackedFloat32Array(0, 0.2, 0.4, 0.6, 0.8, 1),
"transitions": PackedFloat32Array(1, 1, 1, 1, 1, 1),
"update": 1,
"values": [3, 1, 3, 2, 1, 0]
}

[sub_resource type="Animation" id="Animation_jh43t"]
resource_name = "jump"
length = 1.4
step = 0.2
tracks/0/type = "value"
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/path = NodePath("Jump:texture")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 1,
"values": [ExtResource("29_0qnps")]
}
tracks/1/type = "value"
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/path = NodePath("Jump:hframes")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 1,
"values": [3]
}
tracks/2/type = "value"
tracks/2/imported = false
tracks/2/enabled = true
tracks/2/path = NodePath("Jump:vframes")
tracks/2/interp = 1
tracks/2/loop_wrap = true
tracks/2/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 1,
"values": [1]
}
tracks/3/type = "value"
tracks/3/imported = false
tracks/3/enabled = true
tracks/3/path = NodePath("Jump:frame")
tracks/3/interp = 1
tracks/3/loop_wrap = true
tracks/3/keys = {
"times": PackedFloat32Array(0, 0.2, 0.4),
"transitions": PackedFloat32Array(1, 1, 1),
"update": 1,
"values": [0, 1, 2]
}
tracks/4/type = "value"
tracks/4/imported = false
tracks/4/enabled = true
tracks/4/path = NodePath("Jump2:texture")
tracks/4/interp = 1
tracks/4/loop_wrap = true
tracks/4/keys = {
"times": PackedFloat32Array(0.6),
"transitions": PackedFloat32Array(1),
"update": 1,
"values": [ExtResource("29_0qnps")]
}
tracks/5/type = "value"
tracks/5/imported = false
tracks/5/enabled = true
tracks/5/path = NodePath("Jump2:hframes")
tracks/5/interp = 1
tracks/5/loop_wrap = true
tracks/5/keys = {
"times": PackedFloat32Array(0.6),
"transitions": PackedFloat32Array(1),
"update": 1,
"values": [4]
}
tracks/6/type = "value"
tracks/6/imported = false
tracks/6/enabled = true
tracks/6/path = NodePath("Jump2:vframes")
tracks/6/interp = 1
tracks/6/loop_wrap = true
tracks/6/keys = {
"times": PackedFloat32Array(0.6),
"transitions": PackedFloat32Array(1),
"update": 1,
"values": [1]
}
tracks/7/type = "value"
tracks/7/imported = false
tracks/7/enabled = true
tracks/7/path = NodePath("Jump2:frame")
tracks/7/interp = 1
tracks/7/loop_wrap = true
tracks/7/keys = {
"times": PackedFloat32Array(0.6, 0.8, 1, 1.2),
"transitions": PackedFloat32Array(1, 1, 1, 1),
"update": 1,
"values": [0, 1, 2, 3]
}
tracks/8/type = "value"
tracks/8/imported = false
tracks/8/enabled = true
tracks/8/path = NodePath("Jump:visible")
tracks/8/interp = 1
tracks/8/loop_wrap = true
tracks/8/keys = {
"times": PackedFloat32Array(0, 0.6),
"transitions": PackedFloat32Array(1, 1),
"update": 1,
"values": [true, false]
}
tracks/9/type = "value"
tracks/9/imported = false
tracks/9/enabled = true
tracks/9/path = NodePath("Jump2:visible")
tracks/9/interp = 1
tracks/9/loop_wrap = true
tracks/9/keys = {
"times": PackedFloat32Array(0, 0.6),
"transitions": PackedFloat32Array(1, 1),
"update": 1,
"values": [false, true]
}

[sub_resource type="Animation" id="Animation_61vaf"]
resource_name = "laught"
length = 1.1
loop_mode = 1
tracks/0/type = "value"
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/path = NodePath("Laught:texture")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 1,
"values": [ExtResource("29_0qnps")]
}
tracks/1/type = "value"
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/path = NodePath("Laught:hframes")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 1,
"values": [4]
}
tracks/2/type = "value"
tracks/2/imported = false
tracks/2/enabled = true
tracks/2/path = NodePath("Laught:vframes")
tracks/2/interp = 1
tracks/2/loop_wrap = true
tracks/2/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 1,
"values": [1]
}
tracks/3/type = "value"
tracks/3/imported = false
tracks/3/enabled = true
tracks/3/path = NodePath("Laught:frame")
tracks/3/interp = 1
tracks/3/loop_wrap = true
tracks/3/keys = {
"times": PackedFloat32Array(0, 0.2, 0.4, 0.6, 0.8, 1),
"transitions": PackedFloat32Array(1, 1, 1, 1, 1, 1),
"update": 1,
"values": [0, 1, 2, 1, 2, 1]
}

[sub_resource type="Animation" id="Animation_jxv0h"]
resource_name = "smoking"
length = 0.8
loop_mode = 1
tracks/0/type = "value"
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/path = NodePath("Smoking:texture")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 1,
"values": [ExtResource("29_0qnps")]
}
tracks/1/type = "value"
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/path = NodePath("Smoking:hframes")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 1,
"values": [4]
}
tracks/2/type = "value"
tracks/2/imported = false
tracks/2/enabled = true
tracks/2/path = NodePath("Smoking:vframes")
tracks/2/interp = 1
tracks/2/loop_wrap = true
tracks/2/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 1,
"values": [1]
}
tracks/3/type = "value"
tracks/3/imported = false
tracks/3/enabled = true
tracks/3/path = NodePath("Smoking:frame")
tracks/3/interp = 1
tracks/3/loop_wrap = true
tracks/3/keys = {
"times": PackedFloat32Array(0, 0.2, 0.4, 0.6),
"transitions": PackedFloat32Array(1, 1, 1, 1),
"update": 1,
"values": [0, 1, 0, 1]
}

[sub_resource type="Animation" id="Animation_lytxy"]
resource_name = "walk"
loop_mode = 1
tracks/0/type = "value"
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/path = NodePath("Walk:texture")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 1,
"values": [ExtResource("29_0qnps")]
}
tracks/1/type = "value"
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/path = NodePath("Walk:hframes")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 1,
"values": [5]
}
tracks/2/type = "value"
tracks/2/imported = false
tracks/2/enabled = true
tracks/2/path = NodePath("Walk:vframes")
tracks/2/interp = 1
tracks/2/loop_wrap = true
tracks/2/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 1,
"values": [1]
}
tracks/3/type = "value"
tracks/3/imported = false
tracks/3/enabled = true
tracks/3/path = NodePath("Walk:frame")
tracks/3/interp = 1
tracks/3/loop_wrap = true
tracks/3/keys = {
"times": PackedFloat32Array(0, 0.3, 0.6, 0.9),
"transitions": PackedFloat32Array(1, 1, 1, 1),
"update": 1,
"values": [0, 1, 2, 3]
}

[sub_resource type="AnimationLibrary" id="AnimationLibrary_wjwsd"]
_data = {
"RESET": SubResource("Animation_387of"),
"crow": SubResource("Animation_otuud"),
"jump": SubResource("Animation_jh43t"),
"laught": SubResource("Animation_61vaf"),
"smoking": SubResource("Animation_jxv0h"),
"walk": SubResource("Animation_lytxy")
}

[sub_resource type="Animation" id="Animation_j2rpx"]
length = 0.001
tracks/0/type = "value"
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/path = NodePath("../Sprite2D:texture")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 0,
"values": [ExtResource("34_2iw1i")]
}
tracks/1/type = "value"
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/path = NodePath("../Sprite2D:vframes")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 0,
"values": [4]
}
tracks/2/type = "value"
tracks/2/imported = false
tracks/2/enabled = true
tracks/2/path = NodePath("../Sprite2D:hframes")
tracks/2/interp = 1
tracks/2/loop_wrap = true
tracks/2/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 0,
"values": [4]
}
tracks/3/type = "value"
tracks/3/imported = false
tracks/3/enabled = true
tracks/3/path = NodePath("../Sprite2D:frame")
tracks/3/interp = 1
tracks/3/loop_wrap = true
tracks/3/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 1,
"values": [11]
}
tracks/4/type = "value"
tracks/4/imported = false
tracks/4/enabled = true
tracks/4/path = NodePath("../Sprite2D:position")
tracks/4/interp = 1
tracks/4/loop_wrap = true
tracks/4/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 0,
"values": [Vector2(0, 0)]
}
tracks/5/type = "value"
tracks/5/imported = false
tracks/5/enabled = true
tracks/5/path = NodePath("../Sprite2D:modulate")
tracks/5/interp = 1
tracks/5/loop_wrap = true
tracks/5/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 0,
"values": [Color(1, 1, 1, 1)]
}
tracks/6/type = "value"
tracks/6/imported = false
tracks/6/enabled = true
tracks/6/path = NodePath("../Sprite2D:visible")
tracks/6/interp = 1
tracks/6/loop_wrap = true
tracks/6/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 1,
"values": [true]
}
tracks/7/type = "value"
tracks/7/imported = false
tracks/7/enabled = true
tracks/7/path = NodePath("../Sprite2D:rotation")
tracks/7/interp = 1
tracks/7/loop_wrap = true
tracks/7/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 0,
"values": [0.0]
}

[sub_resource type="Animation" id="Animation_6554j"]
resource_name = "fly"
length = 1.4
loop_mode = 1
tracks/0/type = "value"
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/path = NodePath("../Sprite2D:texture")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 0,
"values": [ExtResource("34_2iw1i")]
}
tracks/1/type = "value"
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/path = NodePath("../Sprite2D:vframes")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 0,
"values": [4]
}
tracks/2/type = "value"
tracks/2/imported = false
tracks/2/enabled = true
tracks/2/path = NodePath("../Sprite2D:hframes")
tracks/2/interp = 1
tracks/2/loop_wrap = true
tracks/2/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 0,
"values": [4]
}
tracks/3/type = "value"
tracks/3/imported = false
tracks/3/enabled = true
tracks/3/path = NodePath("../Sprite2D:frame")
tracks/3/interp = 1
tracks/3/loop_wrap = true
tracks/3/keys = {
"times": PackedFloat32Array(0, 0.5),
"transitions": PackedFloat32Array(1, 1),
"update": 1,
"values": [13, 14]
}
tracks/4/type = "value"
tracks/4/imported = false
tracks/4/enabled = true
tracks/4/path = NodePath("../Sprite2D:position")
tracks/4/interp = 1
tracks/4/loop_wrap = true
tracks/4/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 0,
"values": [Vector2(0, 0)]
}
tracks/5/type = "value"
tracks/5/imported = false
tracks/5/enabled = true
tracks/5/path = NodePath("../Sprite2D:modulate")
tracks/5/interp = 1
tracks/5/loop_wrap = true
tracks/5/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 0,
"values": [Color(1, 1, 1, 1)]
}
tracks/6/type = "value"
tracks/6/imported = false
tracks/6/enabled = true
tracks/6/path = NodePath("../Sprite2D:visible")
tracks/6/interp = 1
tracks/6/loop_wrap = true
tracks/6/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 1,
"values": [true]
}
tracks/7/type = "value"
tracks/7/imported = false
tracks/7/enabled = true
tracks/7/path = NodePath("../Sprite2D:rotation")
tracks/7/interp = 1
tracks/7/loop_wrap = true
tracks/7/keys = {
"times": PackedFloat32Array(0, 0.3, 0.7, 1.1, 1.4),
"transitions": PackedFloat32Array(1, 1, 1, 1, 1),
"update": 0,
"values": [0.0, 0.0349066, 0.0, -0.0174533, 0.0]
}

[sub_resource type="Animation" id="Animation_x7yn8"]
resource_name = "fly_and_stay"
tracks/0/type = "value"
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/path = NodePath("../Sprite2D:texture")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 1,
"values": [ExtResource("34_2iw1i")]
}
tracks/1/type = "value"
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/path = NodePath("../Sprite2D:hframes")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 1,
"values": [4]
}
tracks/2/type = "value"
tracks/2/imported = false
tracks/2/enabled = true
tracks/2/path = NodePath("../Sprite2D:vframes")
tracks/2/interp = 1
tracks/2/loop_wrap = true
tracks/2/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 1,
"values": [4]
}
tracks/3/type = "value"
tracks/3/imported = false
tracks/3/enabled = true
tracks/3/path = NodePath("../Sprite2D:frame")
tracks/3/interp = 1
tracks/3/loop_wrap = true
tracks/3/keys = {
"times": PackedFloat32Array(0, 0.2, 0.4),
"transitions": PackedFloat32Array(1, 1, 1),
"update": 1,
"values": [12, 13, 14]
}

[sub_resource type="Animation" id="Animation_h133g"]
resource_name = "fly_attack"
tracks/0/type = "value"
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/path = NodePath("../Sprite2D:texture")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 0,
"values": [ExtResource("34_2iw1i")]
}
tracks/1/type = "value"
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/path = NodePath("../Sprite2D:vframes")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 0,
"values": [4]
}
tracks/2/type = "value"
tracks/2/imported = false
tracks/2/enabled = true
tracks/2/path = NodePath("../Sprite2D:hframes")
tracks/2/interp = 1
tracks/2/loop_wrap = true
tracks/2/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 0,
"values": [4]
}
tracks/3/type = "value"
tracks/3/imported = false
tracks/3/enabled = true
tracks/3/path = NodePath("../Sprite2D:frame")
tracks/3/interp = 1
tracks/3/loop_wrap = true
tracks/3/keys = {
"times": PackedFloat32Array(0, 0.2, 0.4),
"transitions": PackedFloat32Array(1, 1, 1),
"update": 1,
"values": [12, 13, 14]
}
tracks/4/type = "value"
tracks/4/imported = false
tracks/4/enabled = true
tracks/4/path = NodePath("../Sprite2D:position")
tracks/4/interp = 1
tracks/4/loop_wrap = true
tracks/4/keys = {
"times": PackedFloat32Array(0, 0.2, 0.4),
"transitions": PackedFloat32Array(1, 1, 1),
"update": 0,
"values": [Vector2(0, 0), Vector2(0, 0), Vector2(2, 2)]
}
tracks/5/type = "value"
tracks/5/imported = false
tracks/5/enabled = true
tracks/5/path = NodePath("../Sprite2D:modulate")
tracks/5/interp = 1
tracks/5/loop_wrap = true
tracks/5/keys = {
"times": PackedFloat32Array(0, 0.2, 0.4),
"transitions": PackedFloat32Array(1, 1, 1),
"update": 0,
"values": [Color(1, 1, 1, 1), Color(1, 0, 0, 0.407843), Color(1, 0, 0, 1)]
}
tracks/6/type = "method"
tracks/6/imported = false
tracks/6/enabled = true
tracks/6/path = NodePath("..")
tracks/6/interp = 1
tracks/6/loop_wrap = true
tracks/6/keys = {
"times": PackedFloat32Array(0.5),
"transitions": PackedFloat32Array(1),
"values": [{
"args": [],
"method": &"spam_attack"
}]
}
tracks/7/type = "method"
tracks/7/imported = false
tracks/7/enabled = true
tracks/7/path = NodePath("..")
tracks/7/interp = 1
tracks/7/loop_wrap = true
tracks/7/keys = {
"times": PackedFloat32Array(1),
"transitions": PackedFloat32Array(1),
"values": [{
"args": [],
"method": &"die_queue"
}]
}
tracks/8/type = "value"
tracks/8/imported = false
tracks/8/enabled = true
tracks/8/path = NodePath("../Sprite2D:visible")
tracks/8/interp = 1
tracks/8/loop_wrap = true
tracks/8/keys = {
"times": PackedFloat32Array(0, 0.4, 0.5),
"transitions": PackedFloat32Array(1, 1, 1),
"update": 1,
"values": [true, true, false]
}
tracks/9/type = "value"
tracks/9/imported = false
tracks/9/enabled = true
tracks/9/path = NodePath("../Craw:modulate")
tracks/9/interp = 1
tracks/9/loop_wrap = true
tracks/9/keys = {
"times": PackedFloat32Array(0.3, 0.4, 0.5),
"transitions": PackedFloat32Array(1, 1, 1),
"update": 0,
"values": [Color(1, 1, 1, 0), Color(1, 1, 1, 1), Color(1, 1, 1, 0)]
}
tracks/10/type = "audio"
tracks/10/imported = false
tracks/10/enabled = true
tracks/10/path = NodePath("../AudioStreamPlayer")
tracks/10/interp = 1
tracks/10/loop_wrap = true
tracks/10/keys = {
"clips": [{
"end_offset": 0.0,
"start_offset": 0.0,
"stream": ExtResource("27_0t7cb")
}],
"times": PackedFloat32Array(0.4)
}
tracks/10/use_blend = true

[sub_resource type="Animation" id="Animation_3qupy"]
resource_name = "landing"
length = 0.8
loop_mode = 1
tracks/0/type = "value"
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/path = NodePath("../Sprite2D:texture")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 1,
"values": [ExtResource("34_2iw1i")]
}
tracks/1/type = "value"
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/path = NodePath("../Sprite2D:hframes")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 1,
"values": [4]
}
tracks/2/type = "value"
tracks/2/imported = false
tracks/2/enabled = true
tracks/2/path = NodePath("../Sprite2D:vframes")
tracks/2/interp = 1
tracks/2/loop_wrap = true
tracks/2/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 1,
"values": [4]
}
tracks/3/type = "value"
tracks/3/imported = false
tracks/3/enabled = true
tracks/3/path = NodePath("../Sprite2D:frame")
tracks/3/interp = 1
tracks/3/loop_wrap = true
tracks/3/keys = {
"times": PackedFloat32Array(0, 0.2, 0.4, 0.6),
"transitions": PackedFloat32Array(1, 1, 1, 1),
"update": 1,
"values": [10, 11, 10, 11]
}

[sub_resource type="AnimationLibrary" id="AnimationLibrary_f48d5"]
_data = {
"RESET": SubResource("Animation_j2rpx"),
"fly": SubResource("Animation_6554j"),
"fly_and_stay": SubResource("Animation_x7yn8"),
"fly_attack": SubResource("Animation_h133g"),
"landing": SubResource("Animation_3qupy")
}

[sub_resource type="CircleShape2D" id="CircleShape2D_3u6i5"]
radius = 12.0

[sub_resource type="AtlasTexture" id="AtlasTexture_a1xtp"]
atlas = ExtResource("40_dquev")
region = Rect2(0, 0, 20, 22)

[sub_resource type="AtlasTexture" id="AtlasTexture_cjlr5"]
atlas = ExtResource("41_731e1")
region = Rect2(0, 0, 20, 22)

[sub_resource type="AtlasTexture" id="AtlasTexture_1qmbe"]
atlas = ExtResource("42_i6yo3")
region = Rect2(0, 0, 20, 22)

[sub_resource type="AtlasTexture" id="AtlasTexture_g8mcx"]
atlas = ExtResource("43_fu0mb")
region = Rect2(0, 0, 20, 22)

[sub_resource type="SpriteFrames" id="SpriteFrames_nnxxk"]
animations = [{
"frames": [{
"duration": 1.0,
"texture": SubResource("AtlasTexture_a1xtp")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_cjlr5")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_1qmbe")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_g8mcx")
}],
"loop": true,
"name": &"default",
"speed": 5.0
}]

[sub_resource type="Gradient" id="Gradient_m4rmw"]
interpolation_mode = 2
offsets = PackedFloat32Array(0.0693069, 0.277228, 0.534653, 0.772277, 1)
colors = PackedColorArray(0.854634, 0.854634, 0.854634, 1, 1, 0.662745, 0.717647, 1, 1, 0.431373, 1, 1, 0.67451, 0.67451, 0, 1, 0, 0, 0, 0)

[sub_resource type="GradientTexture1D" id="GradientTexture1D_1yf7g"]
gradient = SubResource("Gradient_m4rmw")

[sub_resource type="ParticleProcessMaterial" id="ParticleProcessMaterial_j52qd"]
emission_shape = 6
emission_ring_axis = Vector3(10, 10, 1)
emission_ring_height = 20.0
emission_ring_radius = 20.0
emission_ring_inner_radius = 20.0
particle_flag_disable_z = true
spread = 0.0
gravity = Vector3(0, 0, 0)
initial_velocity_max = 100.0
orbit_velocity_min = 0.0
orbit_velocity_max = 0.0
radial_accel_max = 20.34
scale_min = 0.1
scale_max = 0.1
color_ramp = SubResource("GradientTexture1D_1yf7g")

[sub_resource type="Animation" id="Animation_o3yju"]
length = 0.001
tracks/0/type = "value"
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/path = NodePath("../Sprite2D:texture")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 0,
"values": [ExtResource("34_2iw1i")]
}
tracks/1/type = "value"
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/path = NodePath("../Sprite2D:vframes")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 0,
"values": [4]
}
tracks/2/type = "value"
tracks/2/imported = false
tracks/2/enabled = true
tracks/2/path = NodePath("../Sprite2D:hframes")
tracks/2/interp = 1
tracks/2/loop_wrap = true
tracks/2/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 0,
"values": [4]
}
tracks/3/type = "value"
tracks/3/imported = false
tracks/3/enabled = true
tracks/3/path = NodePath("../Sprite2D:frame")
tracks/3/interp = 1
tracks/3/loop_wrap = true
tracks/3/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 1,
"values": [11]
}
tracks/4/type = "value"
tracks/4/imported = false
tracks/4/enabled = true
tracks/4/path = NodePath("../Sprite2D:position")
tracks/4/interp = 1
tracks/4/loop_wrap = true
tracks/4/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 0,
"values": [Vector2(0, 0)]
}
tracks/5/type = "value"
tracks/5/imported = false
tracks/5/enabled = true
tracks/5/path = NodePath("../Sprite2D:modulate")
tracks/5/interp = 1
tracks/5/loop_wrap = true
tracks/5/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 0,
"values": [Color(1, 1, 1, 1)]
}
tracks/6/type = "value"
tracks/6/imported = false
tracks/6/enabled = true
tracks/6/path = NodePath("../Sprite2D:visible")
tracks/6/interp = 1
tracks/6/loop_wrap = true
tracks/6/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 1,
"values": [true]
}
tracks/7/type = "value"
tracks/7/imported = false
tracks/7/enabled = true
tracks/7/path = NodePath("../Sprite2D:rotation")
tracks/7/interp = 1
tracks/7/loop_wrap = true
tracks/7/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 0,
"values": [0.0]
}
tracks/8/type = "value"
tracks/8/imported = false
tracks/8/enabled = true
tracks/8/path = NodePath("../Craw:modulate")
tracks/8/interp = 1
tracks/8/loop_wrap = true
tracks/8/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 0,
"values": [Color(1, 1, 1, 0)]
}

[sub_resource type="Animation" id="Animation_dq6es"]
resource_name = "fly"
length = 1.4
loop_mode = 1
tracks/0/type = "value"
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/path = NodePath("../Sprite2D:texture")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 0,
"values": [ExtResource("34_2iw1i")]
}
tracks/1/type = "value"
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/path = NodePath("../Sprite2D:vframes")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 0,
"values": [4]
}
tracks/2/type = "value"
tracks/2/imported = false
tracks/2/enabled = true
tracks/2/path = NodePath("../Sprite2D:hframes")
tracks/2/interp = 1
tracks/2/loop_wrap = true
tracks/2/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 0,
"values": [4]
}
tracks/3/type = "value"
tracks/3/imported = false
tracks/3/enabled = true
tracks/3/path = NodePath("../Sprite2D:frame")
tracks/3/interp = 1
tracks/3/loop_wrap = true
tracks/3/keys = {
"times": PackedFloat32Array(0, 0.5),
"transitions": PackedFloat32Array(1, 1),
"update": 1,
"values": [13, 14]
}
tracks/4/type = "value"
tracks/4/imported = false
tracks/4/enabled = true
tracks/4/path = NodePath("../Sprite2D:position")
tracks/4/interp = 1
tracks/4/loop_wrap = true
tracks/4/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 0,
"values": [Vector2(0, 0)]
}
tracks/5/type = "value"
tracks/5/imported = false
tracks/5/enabled = true
tracks/5/path = NodePath("../Sprite2D:modulate")
tracks/5/interp = 1
tracks/5/loop_wrap = true
tracks/5/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 0,
"values": [Color(1, 1, 1, 1)]
}
tracks/6/type = "value"
tracks/6/imported = false
tracks/6/enabled = true
tracks/6/path = NodePath("../Sprite2D:visible")
tracks/6/interp = 1
tracks/6/loop_wrap = true
tracks/6/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 1,
"values": [true]
}
tracks/7/type = "value"
tracks/7/imported = false
tracks/7/enabled = true
tracks/7/path = NodePath("../Sprite2D:rotation")
tracks/7/interp = 1
tracks/7/loop_wrap = true
tracks/7/keys = {
"times": PackedFloat32Array(0, 0.3, 0.7, 1.1, 1.4),
"transitions": PackedFloat32Array(1, 1, 1, 1, 1),
"update": 0,
"values": [0.0, 0.0349066, 0.0, -0.0174533, 0.0]
}

[sub_resource type="Animation" id="Animation_wpc7m"]
resource_name = "fly_and_stay"
tracks/0/type = "value"
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/path = NodePath("../Sprite2D:texture")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 1,
"values": [ExtResource("34_2iw1i")]
}
tracks/1/type = "value"
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/path = NodePath("../Sprite2D:hframes")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 1,
"values": [4]
}
tracks/2/type = "value"
tracks/2/imported = false
tracks/2/enabled = true
tracks/2/path = NodePath("../Sprite2D:vframes")
tracks/2/interp = 1
tracks/2/loop_wrap = true
tracks/2/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 1,
"values": [4]
}
tracks/3/type = "value"
tracks/3/imported = false
tracks/3/enabled = true
tracks/3/path = NodePath("../Sprite2D:frame")
tracks/3/interp = 1
tracks/3/loop_wrap = true
tracks/3/keys = {
"times": PackedFloat32Array(0, 0.2, 0.4),
"transitions": PackedFloat32Array(1, 1, 1),
"update": 1,
"values": [12, 13, 14]
}

[sub_resource type="Animation" id="Animation_g7af7"]
resource_name = "fly_attack"
tracks/0/type = "value"
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/path = NodePath("../Sprite2D:texture")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 0,
"values": [ExtResource("34_2iw1i")]
}
tracks/1/type = "value"
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/path = NodePath("../Sprite2D:vframes")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 0,
"values": [4]
}
tracks/2/type = "value"
tracks/2/imported = false
tracks/2/enabled = true
tracks/2/path = NodePath("../Sprite2D:hframes")
tracks/2/interp = 1
tracks/2/loop_wrap = true
tracks/2/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 0,
"values": [4]
}
tracks/3/type = "value"
tracks/3/imported = false
tracks/3/enabled = true
tracks/3/path = NodePath("../Sprite2D:frame")
tracks/3/interp = 1
tracks/3/loop_wrap = true
tracks/3/keys = {
"times": PackedFloat32Array(0, 0.2, 0.4),
"transitions": PackedFloat32Array(1, 1, 1),
"update": 1,
"values": [12, 13, 14]
}
tracks/4/type = "value"
tracks/4/imported = false
tracks/4/enabled = true
tracks/4/path = NodePath("../Sprite2D:position")
tracks/4/interp = 1
tracks/4/loop_wrap = true
tracks/4/keys = {
"times": PackedFloat32Array(0, 0.2, 0.4),
"transitions": PackedFloat32Array(1, 1, 1),
"update": 0,
"values": [Vector2(0, 0), Vector2(0, 0), Vector2(2, 2)]
}
tracks/5/type = "value"
tracks/5/imported = false
tracks/5/enabled = true
tracks/5/path = NodePath("../Sprite2D:modulate")
tracks/5/interp = 1
tracks/5/loop_wrap = true
tracks/5/keys = {
"times": PackedFloat32Array(0, 0.2, 0.4),
"transitions": PackedFloat32Array(1, 1, 1),
"update": 0,
"values": [Color(1, 1, 1, 1), Color(1, 0, 0, 0.407843), Color(1, 0, 0, 1)]
}
tracks/6/type = "method"
tracks/6/imported = false
tracks/6/enabled = true
tracks/6/path = NodePath("..")
tracks/6/interp = 1
tracks/6/loop_wrap = true
tracks/6/keys = {
"times": PackedFloat32Array(0.5),
"transitions": PackedFloat32Array(1),
"values": [{
"args": [],
"method": &"spam_attack"
}]
}
tracks/7/type = "method"
tracks/7/imported = false
tracks/7/enabled = true
tracks/7/path = NodePath("..")
tracks/7/interp = 1
tracks/7/loop_wrap = true
tracks/7/keys = {
"times": PackedFloat32Array(1),
"transitions": PackedFloat32Array(1),
"values": [{
"args": [],
"method": &"die_queue"
}]
}
tracks/8/type = "value"
tracks/8/imported = false
tracks/8/enabled = true
tracks/8/path = NodePath("../Sprite2D:visible")
tracks/8/interp = 1
tracks/8/loop_wrap = true
tracks/8/keys = {
"times": PackedFloat32Array(0, 0.4, 0.5),
"transitions": PackedFloat32Array(1, 1, 1),
"update": 1,
"values": [true, true, false]
}
tracks/9/type = "value"
tracks/9/imported = false
tracks/9/enabled = true
tracks/9/path = NodePath("../Craw:modulate")
tracks/9/interp = 1
tracks/9/loop_wrap = true
tracks/9/keys = {
"times": PackedFloat32Array(0.3, 0.4, 0.5),
"transitions": PackedFloat32Array(1, 1, 1),
"update": 0,
"values": [Color(1, 1, 1, 0), Color(1, 1, 1, 1), Color(1, 1, 1, 0)]
}
tracks/10/type = "audio"
tracks/10/imported = false
tracks/10/enabled = true
tracks/10/path = NodePath("../AudioStreamPlayer")
tracks/10/interp = 1
tracks/10/loop_wrap = true
tracks/10/keys = {
"clips": [{
"end_offset": 0.0,
"start_offset": 0.0,
"stream": ExtResource("27_0t7cb")
}],
"times": PackedFloat32Array(0.4)
}
tracks/10/use_blend = true

[sub_resource type="Animation" id="Animation_u3tta"]
resource_name = "landing"
length = 0.8
loop_mode = 1
tracks/0/type = "value"
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/path = NodePath("../Sprite2D:texture")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 1,
"values": [ExtResource("34_2iw1i")]
}
tracks/1/type = "value"
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/path = NodePath("../Sprite2D:hframes")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 1,
"values": [4]
}
tracks/2/type = "value"
tracks/2/imported = false
tracks/2/enabled = true
tracks/2/path = NodePath("../Sprite2D:vframes")
tracks/2/interp = 1
tracks/2/loop_wrap = true
tracks/2/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 1,
"values": [4]
}
tracks/3/type = "value"
tracks/3/imported = false
tracks/3/enabled = true
tracks/3/path = NodePath("../Sprite2D:frame")
tracks/3/interp = 1
tracks/3/loop_wrap = true
tracks/3/keys = {
"times": PackedFloat32Array(0, 0.2, 0.4, 0.6),
"transitions": PackedFloat32Array(1, 1, 1, 1),
"update": 1,
"values": [10, 11, 10, 11]
}

[sub_resource type="AnimationLibrary" id="AnimationLibrary_bhn6j"]
_data = {
"RESET": SubResource("Animation_o3yju"),
"fly": SubResource("Animation_dq6es"),
"fly_and_stay": SubResource("Animation_wpc7m"),
"fly_attack": SubResource("Animation_g7af7"),
"landing": SubResource("Animation_u3tta")
}

[sub_resource type="CircleShape2D" id="CircleShape2D_4fway"]
radius = 12.0

[sub_resource type="CircleShape2D" id="CircleShape2D_8s1yb"]
radius = 80.0

[sub_resource type="RectangleShape2D" id="RectangleShape2D_m5a3s"]
size = Vector2(120, 179)

[sub_resource type="Animation" id="Animation_cek1k"]
length = 0.001
tracks/0/type = "value"
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/path = NodePath("DoneCutScene/Corvissius:position")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 0,
"values": [Vector2(3108, 152)]
}
tracks/1/type = "value"
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/path = NodePath("DoneCutScene/Corvissius/Smoking:flip_h")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 1,
"values": [true]
}
tracks/2/type = "value"
tracks/2/imported = false
tracks/2/enabled = true
tracks/2/path = NodePath("DoneCutScene/Corvissius/Smoking:visible")
tracks/2/interp = 1
tracks/2/loop_wrap = true
tracks/2/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 1,
"values": [true]
}
tracks/3/type = "value"
tracks/3/imported = false
tracks/3/enabled = true
tracks/3/path = NodePath("Player:position")
tracks/3/interp = 1
tracks/3/loop_wrap = true
tracks/3/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 0,
"values": [Vector2(27, 123)]
}
tracks/4/type = "value"
tracks/4/imported = false
tracks/4/enabled = true
tracks/4/path = NodePath("DoneCutScene/BallonBoss:position")
tracks/4/interp = 1
tracks/4/loop_wrap = true
tracks/4/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 0,
"values": [Vector2(2895, 36)]
}
tracks/5/type = "value"
tracks/5/imported = false
tracks/5/enabled = true
tracks/5/path = NodePath("DoneCutScene/BallonBoss:modulate")
tracks/5/interp = 1
tracks/5/loop_wrap = true
tracks/5/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 0,
"values": [Color(1, 1, 1, 0)]
}
tracks/6/type = "value"
tracks/6/imported = false
tracks/6/enabled = true
tracks/6/path = NodePath("DoneCutScene/BallonBoss:size")
tracks/6/interp = 1
tracks/6/loop_wrap = true
tracks/6/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 0,
"values": [Vector2(139, 48.0002)]
}
tracks/7/type = "value"
tracks/7/imported = false
tracks/7/enabled = true
tracks/7/path = NodePath("DoneCutScene/RichTextLabel:position")
tracks/7/interp = 1
tracks/7/loop_wrap = true
tracks/7/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 0,
"values": [Vector2(2901, 41)]
}
tracks/8/type = "value"
tracks/8/imported = false
tracks/8/enabled = true
tracks/8/path = NodePath("DoneCutScene/RichTextLabel:size")
tracks/8/interp = 1
tracks/8/loop_wrap = true
tracks/8/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 0,
"values": [Vector2(167, 52.0001)]
}
tracks/9/type = "value"
tracks/9/imported = false
tracks/9/enabled = true
tracks/9/path = NodePath("DoneCutScene/RichTextLabel:visible_ratio")
tracks/9/interp = 1
tracks/9/loop_wrap = true
tracks/9/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 0,
"values": [0.0]
}
tracks/10/type = "value"
tracks/10/imported = false
tracks/10/enabled = true
tracks/10/path = NodePath("DoneCutScene/RichTextLabel:text")
tracks/10/interp = 1
tracks/10/loop_wrap = true
tracks/10/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 1,
"values": ["E não é que você sabe voar? HAHAHA"]
}
tracks/11/type = "value"
tracks/11/imported = false
tracks/11/enabled = true
tracks/11/path = NodePath("DoneCutScene/Corvissius/Laught:visible")
tracks/11/interp = 1
tracks/11/loop_wrap = true
tracks/11/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 1,
"values": [false]
}
tracks/12/type = "value"
tracks/12/imported = false
tracks/12/enabled = true
tracks/12/path = NodePath("DoneCutScene/Corvissius/Walk:visible")
tracks/12/interp = 1
tracks/12/loop_wrap = true
tracks/12/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 1,
"values": [false]
}
tracks/13/type = "value"
tracks/13/imported = false
tracks/13/enabled = true
tracks/13/path = NodePath("DoneCutScene/Corvissius/Crow:visible")
tracks/13/interp = 1
tracks/13/loop_wrap = true
tracks/13/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 1,
"values": [false]
}
tracks/14/type = "value"
tracks/14/imported = false
tracks/14/enabled = true
tracks/14/path = NodePath("DoneCutScene/Corvissius/Jump:visible")
tracks/14/interp = 1
tracks/14/loop_wrap = true
tracks/14/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 1,
"values": [false]
}
tracks/15/type = "value"
tracks/15/imported = false
tracks/15/enabled = true
tracks/15/path = NodePath("DoneCutScene/Corvissius/Jump2:visible")
tracks/15/interp = 1
tracks/15/loop_wrap = true
tracks/15/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 1,
"values": [false]
}
tracks/16/type = "value"
tracks/16/imported = false
tracks/16/enabled = true
tracks/16/path = NodePath("Player/Texture:flip_h")
tracks/16/interp = 1
tracks/16/loop_wrap = true
tracks/16/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 1,
"values": [false]
}
tracks/17/type = "value"
tracks/17/imported = false
tracks/17/enabled = true
tracks/17/path = NodePath("DoneCutScene/Flash:visible")
tracks/17/interp = 1
tracks/17/loop_wrap = true
tracks/17/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 1,
"values": [false]
}
tracks/18/type = "value"
tracks/18/imported = false
tracks/18/enabled = true
tracks/18/path = NodePath("DoneCutScene/Flash:position")
tracks/18/interp = 1
tracks/18/loop_wrap = true
tracks/18/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 0,
"values": [Vector2(3041, 142)]
}
tracks/19/type = "value"
tracks/19/imported = false
tracks/19/enabled = true
tracks/19/path = NodePath("Player:rotation")
tracks/19/interp = 1
tracks/19/loop_wrap = true
tracks/19/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 0,
"values": [0.0]
}

[sub_resource type="Animation" id="Animation_3y5d3"]
resource_name = "done"
length = 20.0
tracks/0/type = "value"
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/path = NodePath("DoneCutScene/Corvissius:position")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/keys = {
"times": PackedFloat32Array(0, 3.9, 5.3, 11.09, 11.1, 11.79, 11.8, 12.8, 13.2, 13.4, 14, 15, 16.4),
"transitions": PackedFloat32Array(1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1),
"update": 0,
"values": [Vector2(3108, 152), Vector2(3108, 152), Vector2(3072, 152), Vector2(3072, 152), Vector2(3072, 157), Vector2(3072, 157), Vector2(3072, 152), Vector2(3072, 152), Vector2(3001.5, 145), Vector2(2984.56, 165.344), Vector2(2970, 313), Vector2(2970, 313), Vector2(2953, 313)]
}
tracks/1/type = "value"
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/path = NodePath("DoneCutScene/Corvissius/Smoking:flip_h")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 1,
"values": [true]
}
tracks/2/type = "value"
tracks/2/imported = false
tracks/2/enabled = true
tracks/2/path = NodePath("DoneCutScene/Corvissius/Smoking:visible")
tracks/2/interp = 1
tracks/2/loop_wrap = true
tracks/2/keys = {
"times": PackedFloat32Array(0, 2.4, 5.3, 11.2),
"transitions": PackedFloat32Array(1, 1, 1, 1),
"update": 1,
"values": [true, false, true, false]
}
tracks/3/type = "animation"
tracks/3/imported = false
tracks/3/enabled = true
tracks/3/path = NodePath("DoneCutScene/Corvissius/AnimationPlayer")
tracks/3/interp = 1
tracks/3/loop_wrap = true
tracks/3/keys = {
"clips": PackedStringArray("smoking", "laught", "walk", "smoking", "jump", "jump", "laught", "walk", "jump"),
"times": PackedFloat32Array(0, 2.4, 3.9, 5.3, 11.2, 12.8, 14, 15, 16)
}
tracks/4/type = "value"
tracks/4/imported = false
tracks/4/enabled = true
tracks/4/path = NodePath("Player:position")
tracks/4/interp = 1
tracks/4/loop_wrap = true
tracks/4/keys = {
"times": PackedFloat32Array(0, 3.9, 5.3, 11.8, 12.2, 12.5, 13.8, 16.6, 17.3, 17.9, 19.5),
"transitions": PackedFloat32Array(1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1),
"update": 0,
"values": [Vector2(3040, 159), Vector2(3040, 159), Vector2(3024, 159), Vector2(3024, 159), Vector2(2993, 149), Vector2(2965, 189), Vector2(2914, 338), Vector2(2914, 338), Vector2(2889, 328), Vector2(2856, 328), Vector2(2785, 485)]
}
tracks/5/type = "animation"
tracks/5/imported = false
tracks/5/enabled = true
tracks/5/path = NodePath("Player/AnimationPlayer")
tracks/5/interp = 1
tracks/5/loop_wrap = true
tracks/5/keys = {
"clips": PackedStringArray("idle", "run", "idle"),
"times": PackedFloat32Array(0, 3.9, 5.3)
}
tracks/6/type = "value"
tracks/6/imported = false
tracks/6/enabled = true
tracks/6/path = NodePath("DoneCutScene/BallonBoss:position")
tracks/6/interp = 1
tracks/6/loop_wrap = true
tracks/6/keys = {
"times": PackedFloat32Array(0, 14.6, 15.5),
"transitions": PackedFloat32Array(1, 1, 1),
"update": 0,
"values": [Vector2(2895, 36), Vector2(2895, 36), Vector2(2808, 222)]
}
tracks/7/type = "value"
tracks/7/imported = false
tracks/7/enabled = true
tracks/7/path = NodePath("DoneCutScene/BallonBoss:modulate")
tracks/7/interp = 1
tracks/7/loop_wrap = true
tracks/7/keys = {
"times": PackedFloat32Array(0, 1, 3.2, 3.9, 5.3, 6.5, 10.3, 11, 15.5, 16.4, 17.6),
"transitions": PackedFloat32Array(1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1),
"update": 0,
"values": [Color(1, 1, 1, 0), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 1), Color(1, 1, 1, 0)]
}
tracks/8/type = "value"
tracks/8/imported = false
tracks/8/enabled = true
tracks/8/path = NodePath("DoneCutScene/BallonBoss:size")
tracks/8/interp = 1
tracks/8/loop_wrap = true
tracks/8/keys = {
"times": PackedFloat32Array(0, 14.6, 15.5),
"transitions": PackedFloat32Array(1, 1, 1),
"update": 0,
"values": [Vector2(139, 48.0002), Vector2(139, 48.0002), Vector2(83, 48)]
}
tracks/9/type = "value"
tracks/9/imported = false
tracks/9/enabled = true
tracks/9/path = NodePath("DoneCutScene/RichTextLabel:position")
tracks/9/interp = 1
tracks/9/loop_wrap = true
tracks/9/keys = {
"times": PackedFloat32Array(0, 14.6, 15.5),
"transitions": PackedFloat32Array(1, 1, 1),
"update": 0,
"values": [Vector2(2901, 41), Vector2(2901, 41), Vector2(2814, 228)]
}
tracks/10/type = "value"
tracks/10/imported = false
tracks/10/enabled = true
tracks/10/path = NodePath("DoneCutScene/RichTextLabel:size")
tracks/10/interp = 1
tracks/10/loop_wrap = true
tracks/10/keys = {
"times": PackedFloat32Array(0, 14.6, 15.5),
"transitions": PackedFloat32Array(1, 1, 1),
"update": 0,
"values": [Vector2(167, 52.0001), Vector2(167, 52.0001), Vector2(94, 52)]
}
tracks/11/type = "value"
tracks/11/imported = false
tracks/11/enabled = true
tracks/11/path = NodePath("DoneCutScene/RichTextLabel:visible_ratio")
tracks/11/interp = 1
tracks/11/loop_wrap = true
tracks/11/keys = {
"times": PackedFloat32Array(0, 2.9, 3.8, 3.8001, 3.81, 5.3, 7.1, 7.799, 7.8, 9.4, 10.9, 10.91, 15.5, 16.6, 17.6, 17.62),
"transitions": PackedFloat32Array(1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1),
"update": 0,
"values": [0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0]
}
tracks/12/type = "value"
tracks/12/imported = false
tracks/12/enabled = true
tracks/12/path = NodePath("DoneCutScene/RichTextLabel:text")
tracks/12/interp = 1
tracks/12/loop_wrap = true
tracks/12/keys = {
"times": PackedFloat32Array(0, 5.3, 7.8, 15.5),
"transitions": PackedFloat32Array(1, 1, 1, 1),
"update": 1,
"values": ["E não é que você sabe voar? HAHAHA", "Muito bem, pombinho...", "Agora chega de brincadeira.", "MORRA!"]
}
tracks/13/type = "value"
tracks/13/imported = false
tracks/13/enabled = true
tracks/13/path = NodePath("DoneCutScene/Corvissius/Laught:visible")
tracks/13/interp = 1
tracks/13/loop_wrap = true
tracks/13/keys = {
"times": PackedFloat32Array(0, 2.4, 3.9, 14, 15),
"transitions": PackedFloat32Array(1, 1, 1, 1, 1),
"update": 1,
"values": [false, true, false, true, false]
}
tracks/14/type = "value"
tracks/14/imported = false
tracks/14/enabled = true
tracks/14/path = NodePath("DoneCutScene/Corvissius/Walk:visible")
tracks/14/interp = 1
tracks/14/loop_wrap = true
tracks/14/keys = {
"times": PackedFloat32Array(0, 3.9, 5.3, 15, 16.6),
"transitions": PackedFloat32Array(1, 1, 1, 1, 1),
"update": 1,
"values": [false, true, false, true, false]
}
tracks/15/type = "value"
tracks/15/imported = false
tracks/15/enabled = true
tracks/15/path = NodePath("DoneCutScene/Corvissius/Crow:visible")
tracks/15/interp = 1
tracks/15/loop_wrap = true
tracks/15/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 1,
"values": [false]
}
tracks/16/type = "value"
tracks/16/imported = false
tracks/16/enabled = true
tracks/16/path = NodePath("DoneCutScene/Corvissius/Jump:visible")
tracks/16/interp = 1
tracks/16/loop_wrap = true
tracks/16/keys = {
"times": PackedFloat32Array(0, 11.2, 11.8, 12.8, 13.4),
"transitions": PackedFloat32Array(1, 1, 1, 1, 1),
"update": 1,
"values": [false, true, false, true, false]
}
tracks/17/type = "value"
tracks/17/imported = false
tracks/17/enabled = true
tracks/17/path = NodePath("DoneCutScene/Corvissius/Jump2:visible")
tracks/17/interp = 1
tracks/17/loop_wrap = true
tracks/17/keys = {
"times": PackedFloat32Array(0, 11.8, 12.8, 13.4, 14, 16.6),
"transitions": PackedFloat32Array(1, 1, 1, 1, 1, 1),
"update": 1,
"values": [false, true, false, true, false, true]
}
tracks/18/type = "value"
tracks/18/imported = false
tracks/18/enabled = true
tracks/18/path = NodePath("Player/Texture:flip_h")
tracks/18/interp = 1
tracks/18/loop_wrap = true
tracks/18/keys = {
"times": PackedFloat32Array(0, 4.1, 4.9),
"transitions": PackedFloat32Array(1, 1, 1),
"update": 1,
"values": [false, true, false]
}
tracks/19/type = "method"
tracks/19/imported = false
tracks/19/enabled = true
tracks/19/path = NodePath(".")
tracks/19/interp = 1
tracks/19/loop_wrap = true
tracks/19/keys = {
"times": PackedFloat32Array(11.8, 16.6, 20),
"transitions": PackedFloat32Array(1, 1, 1),
"values": [{
"args": [],
"method": &"do_flash"
}, {
"args": [],
"method": &"do_flash"
}, {
"args": [],
"method": &"pass_level"
}]
}
tracks/20/type = "value"
tracks/20/imported = false
tracks/20/enabled = true
tracks/20/path = NodePath("DoneCutScene/Flash:visible")
tracks/20/interp = 1
tracks/20/loop_wrap = true
tracks/20/keys = {
"times": PackedFloat32Array(0, 11.8, 12.6, 16.6, 17.6),
"transitions": PackedFloat32Array(1, 1, 1, 1, 1),
"update": 1,
"values": [false, true, false, true, false]
}
tracks/21/type = "value"
tracks/21/imported = false
tracks/21/enabled = true
tracks/21/path = NodePath("DoneCutScene/Flash:position")
tracks/21/interp = 1
tracks/21/loop_wrap = true
tracks/21/keys = {
"times": PackedFloat32Array(0, 14, 16.3),
"transitions": PackedFloat32Array(1, 1, 1),
"update": 0,
"values": [Vector2(3041, 142), Vector2(3041, 142), Vector2(2927, 314)]
}
tracks/22/type = "value"
tracks/22/imported = false
tracks/22/enabled = true
tracks/22/path = NodePath("Player:rotation")
tracks/22/interp = 1
tracks/22/loop_wrap = true
tracks/22/keys = {
"times": PackedFloat32Array(0, 11.7, 11.9, 12.2, 12.6, 13.4, 13.8, 16.7, 17, 17.4, 18.1, 18.5, 19, 19.01, 19.3, 19.5),
"transitions": PackedFloat32Array(1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1),
"update": 0,
"values": [0.0, 0.0, -0.404916, -1.01229, -1.82387, -2.22879, -2.43124, -2.43124, -3.03862, -3.64599, -4.66003, -5.47161, -6.28319, 0.0, -0.607375, -1.01279]
}
tracks/23/type = "audio"
tracks/23/imported = false
tracks/23/enabled = true
tracks/23/path = NodePath("DoneCutScene/AudioStreamPlayer")
tracks/23/interp = 1
tracks/23/loop_wrap = true
tracks/23/keys = {
"clips": [{
"end_offset": 0.0,
"start_offset": 0.0,
"stream": ExtResource("22_7cm1m")
}, {
"end_offset": 0.0,
"start_offset": 0.0,
"stream": ExtResource("22_7cm1m")
}, {
"end_offset": 0.0,
"start_offset": 0.0,
"stream": ExtResource("22_7cm1m")
}, {
"end_offset": 0.0,
"start_offset": 0.0,
"stream": ExtResource("22_7cm1m")
}, {
"end_offset": 0.0,
"start_offset": 0.0,
"stream": ExtResource("22_7cm1m")
}, {
"end_offset": 0.0,
"start_offset": 0.0,
"stream": ExtResource("22_7cm1m")
}, {
"end_offset": 0.0,
"start_offset": 0.0,
"stream": ExtResource("22_7cm1m")
}, {
"end_offset": 0.0,
"start_offset": 0.0,
"stream": ExtResource("22_7cm1m")
}, {
"end_offset": 0.0,
"start_offset": 0.0,
"stream": ExtResource("22_7cm1m")
}, {
"end_offset": 0.0,
"start_offset": 0.0,
"stream": ExtResource("22_7cm1m")
}, {
"end_offset": 0.0,
"start_offset": 0.0,
"stream": ExtResource("22_7cm1m")
}, {
"end_offset": 0.0,
"start_offset": 0.0,
"stream": ExtResource("22_7cm1m")
}, {
"end_offset": 0.0,
"start_offset": 0.0,
"stream": ExtResource("22_7cm1m")
}, {
"end_offset": 0.0,
"start_offset": 0.0,
"stream": ExtResource("22_7cm1m")
}, {
"end_offset": 0.0,
"start_offset": 0.0,
"stream": ExtResource("22_7cm1m")
}, {
"end_offset": 0.0,
"start_offset": 0.0,
"stream": ExtResource("22_7cm1m")
}, {
"end_offset": 0.0,
"start_offset": 0.0,
"stream": ExtResource("22_7cm1m")
}, {
"end_offset": 0.0,
"start_offset": 0.0,
"stream": ExtResource("22_7cm1m")
}, {
"end_offset": 0.0,
"start_offset": 0.0,
"stream": ExtResource("22_7cm1m")
}, {
"end_offset": 0.0,
"start_offset": 0.0,
"stream": ExtResource("22_7cm1m")
}, {
"end_offset": 0.0,
"start_offset": 0.0,
"stream": ExtResource("22_7cm1m")
}, {
"end_offset": 0.0,
"start_offset": 0.0,
"stream": ExtResource("22_7cm1m")
}, {
"end_offset": 0.0,
"start_offset": 0.0,
"stream": ExtResource("22_7cm1m")
}, {
"end_offset": 0.0,
"start_offset": 0.0,
"stream": ExtResource("22_7cm1m")
}, {
"end_offset": 0.0,
"start_offset": 0.0,
"stream": ExtResource("22_7cm1m")
}, {
"end_offset": 0.0,
"start_offset": 0.0,
"stream": ExtResource("22_7cm1m")
}, {
"end_offset": 0.0,
"start_offset": 0.0,
"stream": ExtResource("22_7cm1m")
}, {
"end_offset": 0.0,
"start_offset": 0.0,
"stream": ExtResource("22_7cm1m")
}, {
"end_offset": 0.0,
"start_offset": 0.0,
"stream": ExtResource("22_7cm1m")
}, {
"end_offset": 0.0,
"start_offset": 0.0,
"stream": ExtResource("22_7cm1m")
}, {
"end_offset": 0.0,
"start_offset": 0.0,
"stream": ExtResource("22_7cm1m")
}, {
"end_offset": 0.0,
"start_offset": 0.0,
"stream": ExtResource("22_7cm1m")
}, {
"end_offset": 0.0,
"start_offset": 0.0,
"stream": ExtResource("22_7cm1m")
}, {
"end_offset": 0.0,
"start_offset": 0.0,
"stream": ExtResource("22_7cm1m")
}, {
"end_offset": 0.0,
"start_offset": 0.0,
"stream": ExtResource("22_7cm1m")
}, {
"end_offset": 0.0,
"start_offset": 0.0,
"stream": ExtResource("22_7cm1m")
}, {
"end_offset": 0.0,
"start_offset": 0.0,
"stream": ExtResource("22_7cm1m")
}, {
"end_offset": 0.0,
"start_offset": 0.0,
"stream": ExtResource("22_7cm1m")
}, {
"end_offset": 0.0,
"start_offset": 0.0,
"stream": ExtResource("22_7cm1m")
}, {
"end_offset": 0.0,
"start_offset": 0.0,
"stream": ExtResource("22_7cm1m")
}, {
"end_offset": 0.0,
"start_offset": 0.0,
"stream": ExtResource("22_7cm1m")
}, {
"end_offset": 0.0,
"start_offset": 0.0,
"stream": ExtResource("22_7cm1m")
}, {
"end_offset": 0.0,
"start_offset": 0.0,
"stream": ExtResource("22_7cm1m")
}, {
"end_offset": 0.0,
"start_offset": 0.0,
"stream": ExtResource("22_7cm1m")
}, {
"end_offset": 0.0,
"start_offset": 0.0,
"stream": ExtResource("22_7cm1m")
}, {
"end_offset": 0.0,
"start_offset": 0.0,
"stream": ExtResource("22_7cm1m")
}, {
"end_offset": 0.0,
"start_offset": 0.0,
"stream": ExtResource("22_7cm1m")
}, {
"end_offset": 0.0,
"start_offset": 0.0,
"stream": ExtResource("22_7cm1m")
}, {
"end_offset": 0.0,
"start_offset": 0.0,
"stream": ExtResource("22_7cm1m")
}, {
"end_offset": 0.0,
"start_offset": 0.0,
"stream": ExtResource("22_7cm1m")
}, {
"end_offset": 0.0,
"start_offset": 0.0,
"stream": ExtResource("22_7cm1m")
}, {
"end_offset": 0.0,
"start_offset": 0.0,
"stream": ExtResource("22_7cm1m")
}, {
"end_offset": 0.0,
"start_offset": 0.0,
"stream": ExtResource("22_7cm1m")
}, {
"end_offset": 0.0,
"start_offset": 0.0,
"stream": ExtResource("22_7cm1m")
}, {
"end_offset": 0.0,
"start_offset": 0.0,
"stream": ExtResource("22_7cm1m")
}, {
"end_offset": 0.0,
"start_offset": 0.0,
"stream": ExtResource("22_7cm1m")
}, {
"end_offset": 0.0,
"start_offset": 0.0,
"stream": ExtResource("22_7cm1m")
}, {
"end_offset": 0.0,
"start_offset": 0.0,
"stream": ExtResource("22_7cm1m")
}, {
"end_offset": 0.0,
"start_offset": 0.0,
"stream": ExtResource("22_7cm1m")
}, {
"end_offset": 0.0,
"start_offset": 0.0,
"stream": ExtResource("22_7cm1m")
}, {
"end_offset": 0.0,
"start_offset": 0.0,
"stream": ExtResource("22_7cm1m")
}, {
"end_offset": 0.0,
"start_offset": 0.0,
"stream": ExtResource("22_7cm1m")
}, {
"end_offset": 0.0,
"start_offset": 0.0,
"stream": ExtResource("22_7cm1m")
}, {
"end_offset": 0.0,
"start_offset": 0.0,
"stream": ExtResource("22_7cm1m")
}],
"times": PackedFloat32Array(0.1, 0.3, 0.4, 0.5, 0.6, 0.8, 0.9, 1, 1.2, 1.3, 1.4, 1.6, 1.7, 1.8, 2, 2.1, 2.2, 2.3, 2.4, 2.5, 2.6, 2.7, 2.8, 2.9, 5.4, 5.5, 5.6, 5.7, 5.8, 5.9, 6, 6.1, 6.18, 6.3, 6.4, 6.5, 6.6, 6.7, 6.8, 6.9, 7, 7.2, 7.9, 8, 8.1, 8.2, 8.3, 8.4, 8.5, 8.6, 8.7, 8.8, 8.9, 9, 9.1, 9.2, 9.3, 9.4, 15.7, 15.9, 16.1, 16.3, 16.5, 16.7)
}
tracks/23/use_blend = true
tracks/24/type = "audio"
tracks/24/imported = false
tracks/24/enabled = true
tracks/24/path = NodePath("DoneCutScene/AudioStreamPlayer")
tracks/24/interp = 1
tracks/24/loop_wrap = true
tracks/24/keys = {
"clips": [{
"end_offset": 0.0,
"start_offset": 0.0,
"stream": ExtResource("44_eqtr5")
}, {
"end_offset": 0.0,
"start_offset": 0.0,
"stream": ExtResource("44_eqtr5")
}],
"times": PackedFloat32Array(11.8, 16.6)
}
tracks/24/use_blend = true

[sub_resource type="AnimationLibrary" id="AnimationLibrary_ovasl"]
_data = {
"RESET": SubResource("Animation_cek1k"),
"done": SubResource("Animation_3y5d3")
}

[sub_resource type="CapsuleShape2D" id="CapsuleShape2D_nb8ow"]
radius = 6.0
height = 24.0

[sub_resource type="Animation" id="Animation_hpy3o"]
length = 0.001
tracks/0/type = "value"
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/path = NodePath("Walk:texture")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 1,
"values": [ExtResource("29_0qnps")]
}
tracks/1/type = "value"
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/path = NodePath("Walk:hframes")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 1,
"values": [5]
}
tracks/2/type = "value"
tracks/2/imported = false
tracks/2/enabled = true
tracks/2/path = NodePath("Walk:vframes")
tracks/2/interp = 1
tracks/2/loop_wrap = true
tracks/2/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 1,
"values": [1]
}
tracks/3/type = "value"
tracks/3/imported = false
tracks/3/enabled = true
tracks/3/path = NodePath("Walk:frame")
tracks/3/interp = 1
tracks/3/loop_wrap = true
tracks/3/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 1,
"values": [0]
}
tracks/4/type = "value"
tracks/4/imported = false
tracks/4/enabled = true
tracks/4/path = NodePath("Laught:texture")
tracks/4/interp = 1
tracks/4/loop_wrap = true
tracks/4/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 1,
"values": [ExtResource("29_0qnps")]
}
tracks/5/type = "value"
tracks/5/imported = false
tracks/5/enabled = true
tracks/5/path = NodePath("Laught:hframes")
tracks/5/interp = 1
tracks/5/loop_wrap = true
tracks/5/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 1,
"values": [4]
}
tracks/6/type = "value"
tracks/6/imported = false
tracks/6/enabled = true
tracks/6/path = NodePath("Laught:vframes")
tracks/6/interp = 1
tracks/6/loop_wrap = true
tracks/6/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 1,
"values": [1]
}
tracks/7/type = "value"
tracks/7/imported = false
tracks/7/enabled = true
tracks/7/path = NodePath("Laught:frame")
tracks/7/interp = 1
tracks/7/loop_wrap = true
tracks/7/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 1,
"values": [0]
}
tracks/8/type = "value"
tracks/8/imported = false
tracks/8/enabled = true
tracks/8/path = NodePath("Crow:texture")
tracks/8/interp = 1
tracks/8/loop_wrap = true
tracks/8/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 1,
"values": [ExtResource("29_0qnps")]
}
tracks/9/type = "value"
tracks/9/imported = false
tracks/9/enabled = true
tracks/9/path = NodePath("Crow:hframes")
tracks/9/interp = 1
tracks/9/loop_wrap = true
tracks/9/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 1,
"values": [4]
}
tracks/10/type = "value"
tracks/10/imported = false
tracks/10/enabled = true
tracks/10/path = NodePath("Crow:vframes")
tracks/10/interp = 1
tracks/10/loop_wrap = true
tracks/10/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 1,
"values": [1]
}
tracks/11/type = "value"
tracks/11/imported = false
tracks/11/enabled = true
tracks/11/path = NodePath("Crow:frame")
tracks/11/interp = 1
tracks/11/loop_wrap = true
tracks/11/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 1,
"values": [0]
}
tracks/12/type = "value"
tracks/12/imported = false
tracks/12/enabled = true
tracks/12/path = NodePath("Smoking:texture")
tracks/12/interp = 1
tracks/12/loop_wrap = true
tracks/12/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 1,
"values": [ExtResource("29_0qnps")]
}
tracks/13/type = "value"
tracks/13/imported = false
tracks/13/enabled = true
tracks/13/path = NodePath("Smoking:hframes")
tracks/13/interp = 1
tracks/13/loop_wrap = true
tracks/13/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 1,
"values": [4]
}
tracks/14/type = "value"
tracks/14/imported = false
tracks/14/enabled = true
tracks/14/path = NodePath("Smoking:vframes")
tracks/14/interp = 1
tracks/14/loop_wrap = true
tracks/14/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 1,
"values": [1]
}
tracks/15/type = "value"
tracks/15/imported = false
tracks/15/enabled = true
tracks/15/path = NodePath("Smoking:frame")
tracks/15/interp = 1
tracks/15/loop_wrap = true
tracks/15/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 1,
"values": [0]
}
tracks/16/type = "value"
tracks/16/imported = false
tracks/16/enabled = true
tracks/16/path = NodePath("Jump:texture")
tracks/16/interp = 1
tracks/16/loop_wrap = true
tracks/16/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 1,
"values": [ExtResource("29_0qnps")]
}
tracks/17/type = "value"
tracks/17/imported = false
tracks/17/enabled = true
tracks/17/path = NodePath("Jump:hframes")
tracks/17/interp = 1
tracks/17/loop_wrap = true
tracks/17/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 1,
"values": [3]
}
tracks/18/type = "value"
tracks/18/imported = false
tracks/18/enabled = true
tracks/18/path = NodePath("Jump:vframes")
tracks/18/interp = 1
tracks/18/loop_wrap = true
tracks/18/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 1,
"values": [1]
}
tracks/19/type = "value"
tracks/19/imported = false
tracks/19/enabled = true
tracks/19/path = NodePath("Jump:frame")
tracks/19/interp = 1
tracks/19/loop_wrap = true
tracks/19/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 1,
"values": [0]
}
tracks/20/type = "value"
tracks/20/imported = false
tracks/20/enabled = true
tracks/20/path = NodePath("Jump2:texture")
tracks/20/interp = 1
tracks/20/loop_wrap = true
tracks/20/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 1,
"values": [ExtResource("29_0qnps")]
}
tracks/21/type = "value"
tracks/21/imported = false
tracks/21/enabled = true
tracks/21/path = NodePath("Jump2:hframes")
tracks/21/interp = 1
tracks/21/loop_wrap = true
tracks/21/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 1,
"values": [4]
}
tracks/22/type = "value"
tracks/22/imported = false
tracks/22/enabled = true
tracks/22/path = NodePath("Jump2:vframes")
tracks/22/interp = 1
tracks/22/loop_wrap = true
tracks/22/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 1,
"values": [1]
}
tracks/23/type = "value"
tracks/23/imported = false
tracks/23/enabled = true
tracks/23/path = NodePath("Jump2:frame")
tracks/23/interp = 1
tracks/23/loop_wrap = true
tracks/23/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 1,
"values": [0]
}
tracks/24/type = "value"
tracks/24/imported = false
tracks/24/enabled = true
tracks/24/path = NodePath("Jump:visible")
tracks/24/interp = 1
tracks/24/loop_wrap = true
tracks/24/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 1,
"values": [false]
}
tracks/25/type = "value"
tracks/25/imported = false
tracks/25/enabled = true
tracks/25/path = NodePath("Jump2:visible")
tracks/25/interp = 1
tracks/25/loop_wrap = true
tracks/25/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 1,
"values": [false]
}

[sub_resource type="Animation" id="Animation_ipmkd"]
resource_name = "crow"
length = 2.0
loop_mode = 1
tracks/0/type = "value"
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/path = NodePath("Crow:texture")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 1,
"values": [ExtResource("29_0qnps")]
}
tracks/1/type = "value"
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/path = NodePath("Crow:hframes")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 1,
"values": [4]
}
tracks/2/type = "value"
tracks/2/imported = false
tracks/2/enabled = true
tracks/2/path = NodePath("Crow:vframes")
tracks/2/interp = 1
tracks/2/loop_wrap = true
tracks/2/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 1,
"values": [1]
}
tracks/3/type = "value"
tracks/3/imported = false
tracks/3/enabled = true
tracks/3/path = NodePath("Crow:frame")
tracks/3/interp = 1
tracks/3/loop_wrap = true
tracks/3/keys = {
"times": PackedFloat32Array(0, 0.2, 0.4, 0.6, 0.8, 1),
"transitions": PackedFloat32Array(1, 1, 1, 1, 1, 1),
"update": 1,
"values": [3, 1, 3, 2, 1, 0]
}

[sub_resource type="Animation" id="Animation_cs55j"]
resource_name = "jump"
length = 1.4
step = 0.2
tracks/0/type = "value"
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/path = NodePath("Jump:texture")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 1,
"values": [ExtResource("29_0qnps")]
}
tracks/1/type = "value"
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/path = NodePath("Jump:hframes")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 1,
"values": [3]
}
tracks/2/type = "value"
tracks/2/imported = false
tracks/2/enabled = true
tracks/2/path = NodePath("Jump:vframes")
tracks/2/interp = 1
tracks/2/loop_wrap = true
tracks/2/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 1,
"values": [1]
}
tracks/3/type = "value"
tracks/3/imported = false
tracks/3/enabled = true
tracks/3/path = NodePath("Jump:frame")
tracks/3/interp = 1
tracks/3/loop_wrap = true
tracks/3/keys = {
"times": PackedFloat32Array(0, 0.2, 0.4),
"transitions": PackedFloat32Array(1, 1, 1),
"update": 1,
"values": [0, 1, 2]
}
tracks/4/type = "value"
tracks/4/imported = false
tracks/4/enabled = true
tracks/4/path = NodePath("Jump2:texture")
tracks/4/interp = 1
tracks/4/loop_wrap = true
tracks/4/keys = {
"times": PackedFloat32Array(0.6),
"transitions": PackedFloat32Array(1),
"update": 1,
"values": [ExtResource("29_0qnps")]
}
tracks/5/type = "value"
tracks/5/imported = false
tracks/5/enabled = true
tracks/5/path = NodePath("Jump2:hframes")
tracks/5/interp = 1
tracks/5/loop_wrap = true
tracks/5/keys = {
"times": PackedFloat32Array(0.6),
"transitions": PackedFloat32Array(1),
"update": 1,
"values": [4]
}
tracks/6/type = "value"
tracks/6/imported = false
tracks/6/enabled = true
tracks/6/path = NodePath("Jump2:vframes")
tracks/6/interp = 1
tracks/6/loop_wrap = true
tracks/6/keys = {
"times": PackedFloat32Array(0.6),
"transitions": PackedFloat32Array(1),
"update": 1,
"values": [1]
}
tracks/7/type = "value"
tracks/7/imported = false
tracks/7/enabled = true
tracks/7/path = NodePath("Jump2:frame")
tracks/7/interp = 1
tracks/7/loop_wrap = true
tracks/7/keys = {
"times": PackedFloat32Array(0.6, 0.8, 1, 1.2),
"transitions": PackedFloat32Array(1, 1, 1, 1),
"update": 1,
"values": [0, 1, 2, 3]
}
tracks/8/type = "value"
tracks/8/imported = false
tracks/8/enabled = true
tracks/8/path = NodePath("Jump:visible")
tracks/8/interp = 1
tracks/8/loop_wrap = true
tracks/8/keys = {
"times": PackedFloat32Array(0, 0.6),
"transitions": PackedFloat32Array(1, 1),
"update": 1,
"values": [true, false]
}
tracks/9/type = "value"
tracks/9/imported = false
tracks/9/enabled = true
tracks/9/path = NodePath("Jump2:visible")
tracks/9/interp = 1
tracks/9/loop_wrap = true
tracks/9/keys = {
"times": PackedFloat32Array(0, 0.6),
"transitions": PackedFloat32Array(1, 1),
"update": 1,
"values": [false, true]
}

[sub_resource type="Animation" id="Animation_hoxh4"]
resource_name = "laught"
length = 1.1
loop_mode = 1
tracks/0/type = "value"
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/path = NodePath("Laught:texture")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 1,
"values": [ExtResource("29_0qnps")]
}
tracks/1/type = "value"
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/path = NodePath("Laught:hframes")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 1,
"values": [4]
}
tracks/2/type = "value"
tracks/2/imported = false
tracks/2/enabled = true
tracks/2/path = NodePath("Laught:vframes")
tracks/2/interp = 1
tracks/2/loop_wrap = true
tracks/2/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 1,
"values": [1]
}
tracks/3/type = "value"
tracks/3/imported = false
tracks/3/enabled = true
tracks/3/path = NodePath("Laught:frame")
tracks/3/interp = 1
tracks/3/loop_wrap = true
tracks/3/keys = {
"times": PackedFloat32Array(0, 0.2, 0.4, 0.6, 0.8, 1),
"transitions": PackedFloat32Array(1, 1, 1, 1, 1, 1),
"update": 1,
"values": [0, 1, 2, 1, 2, 1]
}

[sub_resource type="Animation" id="Animation_57b42"]
resource_name = "smoking"
length = 0.8
loop_mode = 1
tracks/0/type = "value"
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/path = NodePath("Smoking:texture")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 1,
"values": [ExtResource("29_0qnps")]
}
tracks/1/type = "value"
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/path = NodePath("Smoking:hframes")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 1,
"values": [4]
}
tracks/2/type = "value"
tracks/2/imported = false
tracks/2/enabled = true
tracks/2/path = NodePath("Smoking:vframes")
tracks/2/interp = 1
tracks/2/loop_wrap = true
tracks/2/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 1,
"values": [1]
}
tracks/3/type = "value"
tracks/3/imported = false
tracks/3/enabled = true
tracks/3/path = NodePath("Smoking:frame")
tracks/3/interp = 1
tracks/3/loop_wrap = true
tracks/3/keys = {
"times": PackedFloat32Array(0, 0.2, 0.4, 0.6),
"transitions": PackedFloat32Array(1, 1, 1, 1),
"update": 1,
"values": [0, 1, 0, 1]
}

[sub_resource type="Animation" id="Animation_hipkd"]
resource_name = "walk"
loop_mode = 1
tracks/0/type = "value"
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/path = NodePath("Walk:texture")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 1,
"values": [ExtResource("29_0qnps")]
}
tracks/1/type = "value"
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/path = NodePath("Walk:hframes")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 1,
"values": [5]
}
tracks/2/type = "value"
tracks/2/imported = false
tracks/2/enabled = true
tracks/2/path = NodePath("Walk:vframes")
tracks/2/interp = 1
tracks/2/loop_wrap = true
tracks/2/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 1,
"values": [1]
}
tracks/3/type = "value"
tracks/3/imported = false
tracks/3/enabled = true
tracks/3/path = NodePath("Walk:frame")
tracks/3/interp = 1
tracks/3/loop_wrap = true
tracks/3/keys = {
"times": PackedFloat32Array(0, 0.3, 0.6, 0.9),
"transitions": PackedFloat32Array(1, 1, 1, 1),
"update": 1,
"values": [0, 1, 2, 3]
}

[sub_resource type="AnimationLibrary" id="AnimationLibrary_vb7n3"]
_data = {
"RESET": SubResource("Animation_hpy3o"),
"crow": SubResource("Animation_ipmkd"),
"jump": SubResource("Animation_cs55j"),
"laught": SubResource("Animation_hoxh4"),
"smoking": SubResource("Animation_57b42"),
"walk": SubResource("Animation_hipkd")
}

[sub_resource type="AtlasTexture" id="AtlasTexture_db6hk"]
atlas = ExtResource("46_ly46a")
region = Rect2(557, 0, 557, 550)

[sub_resource type="AtlasTexture" id="AtlasTexture_56qlu"]
atlas = ExtResource("46_ly46a")
region = Rect2(1114, 0, 557, 550)

[sub_resource type="AtlasTexture" id="AtlasTexture_iqorl"]
atlas = ExtResource("46_ly46a")
region = Rect2(1671, 0, 557, 550)

[sub_resource type="AtlasTexture" id="AtlasTexture_3m1xk"]
atlas = ExtResource("46_ly46a")
region = Rect2(2228, 0, 557, 550)

[sub_resource type="AtlasTexture" id="AtlasTexture_u3nvi"]
atlas = ExtResource("46_ly46a")
region = Rect2(2785, 0, 557, 550)

[sub_resource type="AtlasTexture" id="AtlasTexture_d3iet"]
atlas = ExtResource("46_ly46a")
region = Rect2(0, 550, 557, 550)

[sub_resource type="AtlasTexture" id="AtlasTexture_64im0"]
atlas = ExtResource("46_ly46a")
region = Rect2(557, 550, 557, 550)

[sub_resource type="AtlasTexture" id="AtlasTexture_6hvhj"]
atlas = ExtResource("46_ly46a")
region = Rect2(1114, 550, 557, 550)

[sub_resource type="AtlasTexture" id="AtlasTexture_qm1at"]
atlas = ExtResource("46_ly46a")
region = Rect2(1671, 550, 557, 550)

[sub_resource type="AtlasTexture" id="AtlasTexture_py0q1"]
atlas = ExtResource("46_ly46a")
region = Rect2(2228, 550, 557, 550)

[sub_resource type="AtlasTexture" id="AtlasTexture_2qq61"]
atlas = ExtResource("46_ly46a")
region = Rect2(2785, 550, 557, 550)

[sub_resource type="SpriteFrames" id="SpriteFrames_o0g2j"]
animations = [{
"frames": [{
"duration": 1.0,
"texture": SubResource("AtlasTexture_db6hk")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_56qlu")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_iqorl")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_3m1xk")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_u3nvi")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_d3iet")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_64im0")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_6hvhj")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_qm1at")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_py0q1")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_2qq61")
}],
"loop": false,
"name": &"default",
"speed": 20.0
}]

[node name="level_2" type="Node2D" groups=["level"]]
script = ExtResource("1_y7p2d")
next_transition_scene = "res://managment/level-cave.tscn"

[node name="Interface" parent="." instance=ExtResource("2_hxkxe")]
visible = false

[node name="TileMap" type="TileMap" parent="."]
tile_set = SubResource("TileSet_ceiej")
format = 2
layer_0/name = "1"
layer_0/z_index = 1
layer_0/tile_data = PackedInt32Array(524288, 2555904, 20, 524289, 2621440, 20, 524290, 2686976, 20, 524291, 2752512, 20, 917503, 2752512, 15, 1310719, 2752512, 15, 1376255, 2752512, 15, 1441791, 2752512, 15, 1507327, 2752512, 15, 1572863, 2752512, 15, 1638399, 2752512, 15, 1703935, 2752512, 15, 1769471, 2752512, 15, 1835007, 2752512, 15, 1900543, 2752512, 15, 1966079, 2752512, 15, 2031615, 2752512, 15, 2097151, 2752512, 15, 2162687, 2752512, 15, 2228223, 2752512, 15, 2293759, 2752512, 15, 2359295, 2752512, 15, 2424831, 2752512, 15, 2490367, 2752512, 15, 2555903, 2752512, 15, 2621439, 2752512, 15, 2686975, 2752512, 15, 2752511, 2752512, 15, 2818047, 2752512, 15, 524287, 3670016, 8, 458751, 3670016, 8, 393215, 3670016, 8, 327679, 3670016, 8, 262143, 3670016, 8, 196607, 3670016, 8, 131071, 3670016, 8, 65535, 3670016, 8, 524292, 2949120, 20, 1114300, 3801088, 16, 1179836, 3801088, 17, 1245372, 3801088, 18, 1114301, 3866624, 16, 1179837, 3866624, 17, 1245373, 3866624, 18, 1114302, 3932160, 16, 1179838, 3932160, 17, 1245374, 3932160, 18, 1114303, 3997696, 16, 1179839, 3997696, 17, 1245375, 3997696, 18, 655552, 1245184, 21, 1114304, 4063232, 16, 1179840, 4063232, 17, 1245376, 4063232, 18, 655553, 1310720, 21, 1114305, 4128768, 16, 1179841, 4128768, 17, 1245377, 4128768, 18, 1114306, 4194304, 16, 1179842, 4194304, 17, 1245378, 4194304, 18, 1114307, 4259840, 16, 1179843, 4259840, 17, 1245379, 4259840, 18, 655554, 1376256, 21, 1114308, 4325376, 16, 1179844, 4325376, 17, 1245380, 4325376, 18, 1048773, 3670016, 8, 983237, 3670016, 8, 917701, 3670016, 8, 852165, 3670016, 8, 786629, 3670016, 8, 721093, 3670016, 8, 655557, 3670016, 8, 590021, 3670016, 8, 524485, 3670016, 8, 458949, 3670016, 8, 393413, 3670016, 8, 327877, 3670016, 8, 262341, 3670016, 8, 196805, 3670016, 8, 131269, 3670016, 8, 65733, 3670016, 8, 197, 3670016, 8, 655359, 3670016, 8, 589823, 3670016, 8, 655365, 2228224, 13, 720901, 2228224, 14, 786437, 2228224, 15, 655366, 2293760, 13, 720902, 2293760, 14, 786438, 2293760, 15, 851974, 786432, 17, 655367, 2359296, 13, 720903, 2359296, 14, 786439, 2359296, 15, 851975, 2359296, 16, 655362, 655360, 10, 720898, 655360, 11, 786434, 655360, 12, 655363, 720896, 10, 720899, 720896, 11, 786435, 720896, 12, 655364, 786432, 10, 720900, 786432, 11, 786436, 786432, 12, 655360, 1376256, 10, 720896, 1376256, 11, 786432, 1376256, 12, 655361, 1441792, 10, 720897, 1441792, 11, 786433, 1441792, 12, 851967, 2228224, 12, 786431, 2228224, 12, 720895, 2228224, 12, 917506, 2031616, 1, 983042, 2031616, 2, 1048578, 2031616, 3, 1114114, 2031616, 4, 917507, 2097152, 1, 983043, 2097152, 2, 1048579, 2097152, 3, 1114115, 2097152, 4, 917508, 2162688, 1, 983044, 2162688, 2, 1048580, 2162688, 3, 1114116, 2162688, 4, 917509, 851968, 19, 983045, 851968, 20, 1048581, 851968, 21, 917510, 917504, 19, 983046, 917504, 20, 1048582, 917504, 21, 917511, 2359296, 17, 983047, 983040, 20, 1048583, 983040, 21, 983040, 1900544, 2, 1048576, 1900544, 3, 1114112, 1900544, 4, 1179648, 1900544, 5, 983041, 1966080, 2, 1048577, 1966080, 3, 1114113, 1966080, 4, 1179649, 1966080, 5, 1245183, 1769472, 1, 1179647, 1769472, 1, 1114111, 1769472, 1, 1048575, 1769472, 1, 983039, 1769472, 1, 917504, 1769472, 1, 917505, 1769472, 1, 851969, 1769472, 1, 851968, 1769472, 1, 851970, 1769472, 1, 851971, 1769472, 1, 851972, 1769472, 1, 851973, 786432, 17)
layer_1/name = "2"
layer_1/enabled = true
layer_1/modulate = Color(1, 1, 1, 1)
layer_1/y_sort_enabled = false
layer_1/y_sort_origin = 0
layer_1/z_index = 2
layer_1/tile_data = PackedInt32Array(1376438, 851968, 13, 1441974, 851968, 14, 1507510, 851968, 15, 1573046, 1048576, 16, 1638582, 1048576, 17, 1704118, 1048576, 16, 1769654, 851968, 16, 1835190, 851968, 17, 1900726, 851968, 16, 1966262, 1245184, 16, 2031798, 1245184, 17, 2097334, 1245184, 18, 2162870, 1048576, 16, 2228406, 1048576, 17, 2293942, 1048576, 16, 2359478, 851968, 16, 2425014, 851968, 17, 2490550, 851968, 16, 2556086, 1245184, 16, 2621622, 1245184, 17, 1376439, 917504, 13, 1441975, 917504, 14, 1507511, 917504, 15, 1573047, 1114112, 16, 1638583, 1114112, 17, 1704119, 1114112, 18, 1769655, 917504, 16, 1835191, 917504, 17, 1900727, 917504, 18, 1966263, 1310720, 16, 2031799, 1310720, 17, 2097335, 1310720, 18, 2162871, 1114112, 16, 2228407, 1114112, 17, 2293943, 1114112, 18, 2359479, 917504, 16, 2425015, 917504, 17, 2490551, 917504, 18, 2556087, 1310720, 16, 2621623, 1310720, 17, 1376440, 983040, 13, 1441976, 983040, 14, 1507512, 983040, 15, 1573048, 1179648, 16, 1638584, 1179648, 17, 1704120, 1179648, 18, 1769656, 983040, 16, 1835192, 983040, 17, 1900728, 983040, 18, 1966264, 1376256, 16, 2031800, 1376256, 17, 2097336, 1376256, 18, 2162872, 1179648, 16, 2228408, 1179648, 17, 2293944, 1179648, 18, 2359480, 983040, 16, 2425016, 983040, 17, 2490552, 983040, 18, 2556088, 1376256, 16, 2621624, 1376256, 17, 1310905, 1638400, 9, 1376441, 1638400, 10, 1441977, 1638400, 11, 1507513, 1638400, 12, 1573049, 2228224, 11, 1638585, 2228224, 12, 1704121, 2228224, 11, 1769657, 2228224, 12, 1835193, 2228224, 11, 1900729, 2228224, 12, 1966265, 2228224, 11, 2031801, 2228224, 12, 2097337, 2424832, 14, 2162873, 2228224, 11, 2228409, 2228224, 11, 2293945, 2228224, 12, 2359481, 2228224, 11, 2425017, 2228224, 11, 2490553, 2228224, 12, 2556089, 2228224, 11, 2621625, 2228224, 12, 1310906, 1703936, 9, 1376442, 1703936, 10, 1441978, 1703936, 11, 1507514, 1703936, 12, 1573050, 2293760, 11, 1638586, 2293760, 12, 1704122, 2293760, 11, 1769658, 2293760, 12, 1835194, 2293760, 11, 1900730, 2293760, 12, 1966266, 2293760, 11, 2031802, 2293760, 12, 2097338, 2424832, 14, 2162874, 2293760, 11, 2228410, 2293760, 11, 2293946, 2293760, 12, 2359482, 2293760, 11, 2425018, 2293760, 11, 2490554, 2293760, 12, 2556090, 2293760, 11, 2621626, 2293760, 12, 1310907, 1769472, 9, 1376443, 1769472, 10, 1441979, 1769472, 11, 1507515, 1769472, 12, 1573051, 3735552, 7, 1638587, 3735552, 8, 1704123, 3735552, 9, 1769659, 3604480, 7, 1835195, 3604480, 7, 1900731, 3604480, 8, 1966267, 3604480, 9, 2031803, 3604480, 7, 2097339, 3604480, 8, 2162875, 3604480, 9, 2228411, 3604480, 7, 2293947, 3604480, 8, 2359483, 3604480, 9, 2425019, 3604480, 8, 2490555, 3604480, 9, 2556091, 3604480, 7, 2621627, 3604480, 8, 721084, 3801088, 10, 786620, 3801088, 11, 852156, 3801088, 12, 917692, 3801088, 13, 983228, 3801088, 14, 1048764, 3801088, 15, 1114300, 3801088, 16, 1179836, 3801088, 17, 1245372, 1835008, 8, 1310908, 1835008, 9, 1376444, 1835008, 10, 1441980, 1835008, 11, 1507516, 1835008, 12, 1573052, 3604480, 7, 1638588, 3604480, 8, 1704124, 3604480, 9, 1769660, 3670016, 7, 1835196, 3670016, 7, 1900732, 3670016, 8, 1966268, 3670016, 9, 2031804, 3670016, 7, 2097340, 3670016, 8, 2162876, 3670016, 9, 2228412, 3670016, 7, 2293948, 3670016, 8, 2359484, 3670016, 9, 2425020, 3670016, 8, 2490556, 3670016, 9, 2556092, 3670016, 7, 2621628, 3670016, 8, 721085, 3866624, 10, 786621, 3866624, 11, 852157, 3866624, 12, 917693, 3866624, 13, 983229, 3866624, 14, 1048765, 3866624, 15, 1114301, 3866624, 16, 1179837, 3866624, 17, 1245373, 1900544, 8, 1310909, 1900544, 9, 1376445, 1900544, 10, 1441981, 1900544, 11, 1507517, 1900544, 12, 1573053, 3670016, 7, 1638589, 3670016, 8, 1704125, 3670016, 9, 1769661, 3735552, 7, 1835197, 3735552, 7, 1900733, 3735552, 8, 1966269, 3735552, 9, 2031805, 3735552, 7, 2097341, 3735552, 8, 2162877, 3735552, 9, 2228413, 3735552, 7, 2293949, 3735552, 8, 2359485, 3735552, 9, 2425021, 3735552, 8, 2490557, 3735552, 9, 2556093, 3735552, 7, 2621629, 3735552, 8, 721086, 3932160, 10, 786622, 3932160, 11, 852158, 3932160, 12, 917694, 3932160, 13, 983230, 3932160, 14, 1048766, 3932160, 15, 1114302, 3932160, 16, 1179838, 3932160, 17, 1245374, 1966080, 8, 1310910, 1966080, 9, 1376446, 1966080, 10, 1441982, 1966080, 11, 1507518, 1966080, 12, 1573054, 3735552, 7, 1638590, 3735552, 8, 1704126, 3735552, 9, 1769662, 3604480, 7, 1835198, 3604480, 7, 1900734, 3604480, 8, 1966270, 3604480, 9, 2031806, 3604480, 7, 2097342, 3604480, 8, 2162878, 3604480, 9, 2228414, 3604480, 7, 2293950, 3604480, 8, 2359486, 3604480, 9, 2425022, 3604480, 8, 2490558, 3604480, 9, 2556094, 3604480, 7, 2621630, 3604480, 8, 721087, 3997696, 10, 786623, 3997696, 11, 852159, 3997696, 12, 917695, 3997696, 13, 983231, 3997696, 14, 1048767, 3997696, 15, 1114303, 3997696, 16, 1179839, 2031616, 7, 1245375, 2031616, 8, 1310911, 2031616, 9, 1376447, 2031616, 10, 1441983, 2031616, 11, 1507519, 2031616, 12, 1573055, 3604480, 7, 1638591, 3604480, 8, 1704127, 3604480, 9, 1769663, 3670016, 7, 1835199, 3670016, 7, 1900735, 3670016, 8, 1966271, 3670016, 9, 2031807, 3670016, 7, 2097343, 3670016, 8, 2162879, 3670016, 9, 2228415, 3670016, 7, 2293951, 3670016, 8, 2359487, 3670016, 9, 2425023, 3670016, 8, 2490559, 3670016, 9, 2556095, 3670016, 7, 2621631, 3670016, 8, 721088, 4063232, 10, 786624, 4063232, 11, 852160, 4063232, 12, 917696, 4063232, 13, 983232, 4063232, 14, 1048768, 4063232, 15, 1114304, 4063232, 16, 1179840, 2097152, 7, 1245376, 2097152, 8, 1310912, 2097152, 9, 1376448, 2097152, 10, 1441984, 2097152, 11, 1507520, 2097152, 12, 1573056, 3670016, 7, 1638592, 3670016, 8, 1704128, 3670016, 9, 1769664, 3735552, 7, 1835200, 3735552, 7, 1900736, 3735552, 8, 1966272, 3735552, 9, 2031808, 3735552, 7, 2097344, 3735552, 8, 2162880, 3735552, 9, 2228416, 3735552, 7, 2293952, 3735552, 8, 2359488, 3735552, 9, 2425024, 3735552, 8, 2490560, 3735552, 9, 2556096, 3735552, 7, 2621632, 3735552, 8, 655553, 1441792, 21, 721089, 4128768, 10, 786625, 4128768, 11, 852161, 4128768, 12, 917697, 4128768, 13, 983233, 4128768, 14, 1048769, 4128768, 15, 1114305, 4128768, 16, 1179841, 2162688, 7, 1245377, 2162688, 8, 1310913, 2162688, 9, 1376449, 2162688, 10, 1441985, 2162688, 11, 1507521, 2162688, 12, 1573057, 3735552, 7, 1638593, 3735552, 8, 1704129, 3735552, 9, 1769665, 3604480, 7, 1835201, 3604480, 7, 1900737, 3604480, 8, 1966273, 3604480, 9, 2031809, 3604480, 7, 2097345, 3604480, 7, 2162881, 3604480, 8, 2228417, 3604480, 9, 2293953, 3604480, 9, 2359489, 3604480, 7, 2425025, 3604480, 8, 2490561, 3604480, 9, 2556097, 3604480, 7, 2621633, 3604480, 8, 655554, 1507328, 21, 721090, 4194304, 10, 786626, 4194304, 11, 852162, 4194304, 12, 917698, 4194304, 13, 983234, 4194304, 14, 1048770, 4194304, 15, 1114306, 1638400, 9, 1179842, 1835008, 9, 1245378, 1835008, 10, 1310914, 1638400, 12, 1376450, 2162688, 11, 1441986, 2162688, 11, 1507522, 2162688, 12, 1573058, 3604480, 7, 1638594, 3604480, 8, 1704130, 3604480, 9, 1769666, 3670016, 7, 1835202, 3670016, 7, 1900738, 3670016, 8, 1966274, 3670016, 9, 2031810, 3670016, 7, 2097346, 3604480, 7, 2162882, 3604480, 8, 2228418, 3604480, 9, 2293954, 3604480, 7, 2359490, 3604480, 8, 2425026, 3604480, 9, 2490562, 3670016, 9, 2556098, 3670016, 7, 2621634, 3670016, 8, 721091, 4259840, 10, 786627, 4259840, 11, 852163, 4259840, 12, 917699, 4259840, 13, 983235, 4259840, 14, 1048771, 4259840, 15, 1114307, 1703936, 9, 1179843, 1703936, 10, 1245379, 1703936, 11, 1310915, 1703936, 12, 1376451, 2228224, 11, 1441987, 2228224, 11, 1507523, 2228224, 12, 1573059, 3670016, 7, 1638595, 3670016, 8, 1704131, 3670016, 9, 1769667, 3735552, 7, 1835203, 3735552, 7, 1900739, 3735552, 8, 1966275, 3735552, 9, 2031811, 3735552, 7, 2097347, 3670016, 7, 2162883, 3670016, 8, 2228419, 3670016, 9, 2293955, 3670016, 7, 2359491, 3670016, 8, 2425027, 3670016, 9, 2490563, 3735552, 9, 2556099, 3735552, 7, 2621635, 3735552, 8, 1048772, 4325376, 15, 1114308, 1769472, 9, 1179844, 1769472, 10, 1245380, 1769472, 11, 1310916, 1769472, 12, 1376452, 2293760, 11, 1441988, 2293760, 11, 1507524, 2293760, 12, 1573060, 3735552, 7, 1638596, 3735552, 8, 1704132, 3604480, 7, 1769668, 3604480, 8, 1835204, 3604480, 9, 1900740, 3604480, 7, 1966276, 3604480, 8, 2031812, 3604480, 9, 2097348, 3735552, 7, 2162884, 3735552, 8, 2228420, 3735552, 9, 2293956, 3735552, 7, 2359492, 3735552, 8, 2425028, 3735552, 9, 2490564, 3604480, 7, 2556100, 3604480, 8, 2621636, 3604480, 9, 1048773, 1835008, 8, 1114309, 1835008, 9, 1179845, 1835008, 10, 1245381, 1835008, 11, 1310917, 2228224, 11, 1376453, 2228224, 12, 1441989, 2228224, 11, 1507525, 2228224, 12, 1573061, 2228224, 11, 1638597, 2228224, 12, 1704133, 3604480, 7, 1769669, 3604480, 8, 1835205, 3604480, 9, 1900741, 3604480, 7, 1966277, 3604480, 8, 2031813, 3604480, 9, 2097349, 3604480, 7, 2162885, 3604480, 8, 2228421, 3604480, 9, 2293957, 3604480, 7, 2359493, 3604480, 8, 2425029, 3604480, 7, 2490565, 3604480, 7, 2556101, 3604480, 8, 2621637, 3604480, 9, 1048774, 1900544, 8, 1114310, 1900544, 9, 1179846, 1900544, 10, 1245382, 1900544, 11, 1310918, 2228224, 11, 1376454, 2228224, 12, 1441990, 2228224, 11, 1507526, 2228224, 12, 1573062, 2228224, 11, 1638598, 2228224, 12, 1704134, 3670016, 7, 1769670, 3670016, 8, 1835206, 3670016, 9, 1900742, 3670016, 7, 1966278, 3670016, 8, 2031814, 3670016, 9, 2097350, 3670016, 7, 2162886, 3670016, 8, 2228422, 3670016, 9, 2293958, 3670016, 7, 2359494, 3670016, 8, 2425030, 3670016, 7, 2490566, 3670016, 7, 2556102, 3670016, 8, 2621638, 3670016, 9, 655555, 1572864, 21, 721092, 4325376, 10, 786628, 4325376, 11, 852164, 4325376, 12, 917700, 4325376, 13, 983236, 4325376, 14, 1048775, 1966080, 8, 1114311, 1966080, 9, 1179847, 1966080, 10, 1245383, 1966080, 11, 1310919, 2293760, 11, 1376455, 2293760, 12, 1441991, 2293760, 11, 1507527, 2293760, 12, 1573063, 2293760, 11, 1638599, 2293760, 12, 1704135, 3735552, 7, 1769671, 3735552, 8, 1835207, 3735552, 9, 1900743, 3735552, 7, 1966279, 3735552, 8, 2031815, 3735552, 9, 2097351, 3735552, 7, 2162887, 3735552, 8, 2228423, 3735552, 9, 2293959, 3735552, 7, 2359495, 3735552, 8, 2425031, 3735552, 7, 2490567, 3735552, 7, 2556103, 3735552, 8, 2621639, 3735552, 9, 589824, 2686976, 21, 589825, 2752512, 21, 589826, 2818048, 21, 589827, 2883584, 21, 589828, 2949120, 21, 524288, 2686976, 20, 524289, 2752512, 20, 524290, 2818048, 20, 524291, 2883584, 20, 524292, 2949120, 20)
layer_2/name = "0"
layer_2/enabled = true
layer_2/modulate = Color(1, 1, 1, 1)
layer_2/y_sort_enabled = false
layer_2/y_sort_origin = 0
layer_2/z_index = 0
layer_2/tile_data = PackedInt32Array(65534, 3407872, 8, 131070, 3407872, 9, 196606, 3407872, 9, 262142, 3407872, 8, 327678, 3407872, 9, 393214, 3538944, 9, 458750, 3473408, 7, 524286, 3473408, 8, 589822, 3473408, 9, 655358, 3538944, 7, 720894, 3538944, 8, 786430, 3538944, 9, 851966, 3538944, 7, 917502, 3538944, 8, 983038, 3538944, 9, 1048574, 3538944, 7, 1114110, 3538944, 8, 1179646, 3604480, 12, 1245182, 3211264, 7, 1310718, 3211264, 8, 1376254, 3211264, 9, 1441790, 3342336, 7, 1507326, 2949120, 13, 1572862, 2949120, 14, 1638398, 3145728, 7, 1703934, 3145728, 8, 1769470, 3080192, 16, 1835006, 3080192, 17, 1900542, 3145728, 9, 1966078, 3145728, 7, 2031614, 3670016, 17, 2097150, 3670016, 18, 2162686, 2883584, 7, 2228222, 2883584, 8, 2293758, 2883584, 9, 2359294, 2949120, 7, 2424830, 2949120, 7, 2490366, 2949120, 8, 2555902, 2949120, 7, 2621438, 2949120, 8, 2686974, 2949120, 9, 65535, 3473408, 8, 131071, 3473408, 9, 196607, 3473408, 9, 262143, 3473408, 8, 327679, 3473408, 9, 393215, 3407872, 9, 458751, 3538944, 7, 524287, 3538944, 8, 589823, 3538944, 9, 655359, 3407872, 7, 720895, 3407872, 8, 786431, 3407872, 9, 851967, 3407872, 7, 917503, 3407872, 8, 983039, 3407872, 9, 1048575, 3407872, 7, 1114111, 3407872, 8, 1179647, 3670016, 12, 1245183, 3276800, 7, 1310719, 3276800, 8, 1376255, 3276800, 9, 1441791, 3211264, 7, 1507327, 2818048, 13, 1572863, 2818048, 14, 1638399, 3014656, 7, 1703935, 3014656, 8, 1769471, 3145728, 16, 1835007, 3145728, 17, 1900543, 3014656, 9, 1966079, 3014656, 7, 2031615, 3735552, 17, 2097151, 3735552, 18, 2162687, 2949120, 7, 2228223, 2949120, 8, 2293759, 2949120, 9, 2359295, 2818048, 7, 2424831, 2818048, 7, 2490367, 2818048, 8, 2555903, 2818048, 7, 2621439, 2818048, 8, 2686975, 2818048, 9, 0, 3538944, 8, 65536, 3538944, 9, 131072, 3538944, 9, 196608, 3538944, 8, 262144, 3538944, 9, 327680, 3473408, 9, 393216, 3407872, 9, 458752, 3407872, 8, 524288, 3407872, 9, 589824, 3407872, 7, 655360, 3407872, 8, 720896, 3407872, 9, 786432, 3473408, 7, 851968, 3473408, 8, 917504, 3473408, 9, 983040, 3473408, 7, 1048576, 3473408, 8, 1114112, 3735552, 12, 1179648, 3342336, 7, 1245184, 3342336, 8, 1310720, 3342336, 9, 1376256, 3276800, 7, 1441792, 2883584, 13, 1507328, 2883584, 14, 1572864, 3080192, 7, 1638400, 3080192, 8, 1703936, 3080192, 9, 1769472, 3080192, 8, 1835008, 3080192, 9, 1900544, 3080192, 7, 1966080, 3080192, 8, 2031616, 2949120, 18, 2097152, 2818048, 7, 2162688, 2818048, 8, 2228224, 2818048, 9, 2293760, 2883584, 7, 2359296, 2883584, 7, 2424832, 2883584, 8, 2490368, 2883584, 7, 2555904, 2883584, 8, 2621440, 2883584, 9, 1, 3407872, 8, 65537, 3407872, 7, 131073, 3407872, 8, 196609, 3407872, 9, 262145, 3407872, 9, 327681, 3407872, 9, 393217, 3473408, 9, 458753, 3473408, 8, 524289, 3473408, 9, 589825, 3473408, 7, 655361, 3473408, 8, 720897, 3473408, 9, 786433, 3407872, 7, 851969, 3407872, 8, 917505, 3407872, 9, 983041, 3538944, 7, 1048577, 3538944, 8, 1114113, 2883584, 12, 1179649, 3211264, 7, 1245185, 3211264, 8, 1310721, 3211264, 9, 1376257, 3342336, 7, 1441793, 3211264, 13, 1507329, 3211264, 14, 1572865, 3145728, 7, 1638401, 3145728, 8, 1703937, 3145728, 9, 1769473, 3145728, 8, 1835009, 3145728, 9, 1900545, 3145728, 7, 1966081, 3145728, 8, 2031617, 3014656, 18, 2097153, 2883584, 7, 2162689, 2949120, 9, 2228225, 2949120, 9, 2293761, 2949120, 7, 2359297, 2949120, 7, 2424833, 2949120, 8, 2490369, 2949120, 7, 2555905, 2949120, 8, 2621441, 2949120, 9, 2, 3473408, 8, 65538, 3473408, 7, 131074, 3473408, 8, 196610, 3473408, 9, 262146, 3473408, 9, 327682, 3473408, 9, 393218, 3538944, 9, 458754, 3538944, 8, 524290, 3538944, 9, 589826, 3538944, 7, 655362, 3538944, 8, 720898, 3538944, 9, 786434, 3473408, 7, 851970, 3473408, 8, 917506, 3211264, 10, 983042, 3211264, 11, 1048578, 3407872, 8, 1114114, 2949120, 12, 1179650, 3276800, 7, 1245186, 3276800, 8, 1310722, 3276800, 9, 1376258, 3211264, 7, 1441794, 3276800, 13, 1507330, 3276800, 14, 1572866, 3014656, 7, 1638402, 3014656, 8, 1703938, 3014656, 9, 1769474, 3014656, 8, 1835010, 3014656, 9, 1900546, 3014656, 7, 1966082, 3014656, 8, 2031618, 3080192, 18, 2097154, 2949120, 7, 2162690, 2949120, 8, 2228226, 2949120, 9, 2293762, 2818048, 8, 2359298, 2818048, 7, 2424834, 2818048, 8, 2490370, 2818048, 7, 2555906, 2818048, 8, 2621442, 2818048, 9, 3, 3538944, 8, 65539, 3538944, 7, 131075, 3538944, 8, 196611, 3538944, 9, 262147, 3538944, 9, 327683, 3538944, 9, 393219, 3407872, 7, 458755, 3407872, 8, 524291, 3407872, 9, 589827, 3407872, 7, 655363, 3407872, 8, 720899, 3407872, 9, 786435, 3538944, 7, 851971, 3538944, 8, 917507, 3276800, 10, 983043, 3276800, 11, 1048579, 3473408, 8, 1114115, 3014656, 12, 1179651, 3342336, 7, 1245187, 3342336, 8, 1310723, 3342336, 9, 1376259, 3276800, 7, 1441795, 3342336, 13, 1507331, 3342336, 14, 1572867, 3080192, 7, 1638403, 3080192, 8, 1703939, 3080192, 9, 1769475, 3080192, 8, 1835011, 3080192, 9, 1900547, 3080192, 7, 1966083, 3080192, 8, 2031619, 3145728, 18, 2097155, 2818048, 7, 2162691, 2818048, 8, 2228227, 2818048, 9, 2293763, 2818048, 9, 2359299, 2883584, 7, 2424835, 2883584, 8, 2490371, 2883584, 7, 2555907, 2883584, 8, 2621443, 2883584, 9, 4, 3407872, 8, 65540, 3407872, 7, 131076, 3407872, 8, 196612, 3407872, 9, 262148, 3407872, 9, 327684, 3473408, 9, 393220, 3473408, 7, 458756, 3473408, 8, 524292, 3473408, 9, 589828, 3473408, 7, 655364, 3473408, 8, 720900, 3473408, 9, 786436, 3407872, 7, 851972, 3407872, 8, 917508, 3342336, 10, 983044, 3342336, 11, 1048580, 3538944, 8, 1114116, 3080192, 12, 1179652, 3211264, 7, 1245188, 3211264, 8, 1310724, 3211264, 9, 1376260, 3342336, 7, 1441796, 2818048, 13, 1507332, 2818048, 14, 1572868, 3014656, 7, 1638404, 3014656, 8, 1703940, 3014656, 9, 1769476, 3145728, 8, 1835012, 3145728, 9, 1900548, 3145728, 7, 1966084, 3145728, 8, 2031620, 3211264, 18, 2097156, 2883584, 7, 2162692, 2883584, 8, 2228228, 2883584, 9, 2293764, 2883584, 9, 2359300, 2949120, 7, 2424836, 2949120, 8, 2490372, 2949120, 7, 2555908, 2949120, 8, 2621444, 2949120, 9, 5, 3473408, 8, 65541, 3473408, 7, 131077, 3473408, 8, 196613, 3473408, 9, 262149, 3473408, 9, 327685, 3473408, 9, 393221, 3538944, 7, 458757, 3538944, 8, 524293, 3538944, 9, 589829, 3538944, 7, 655365, 3538944, 8, 720901, 3538944, 9, 786437, 3473408, 7, 851973, 3473408, 8, 917509, 3473408, 9, 983045, 3407872, 7, 1048581, 3407872, 8, 1114117, 3604480, 12, 1179653, 3276800, 7, 1245189, 3276800, 8, 1310725, 3276800, 9, 1376261, 3211264, 7, 1441797, 2883584, 13, 1507333, 2883584, 14, 1572869, 3080192, 7, 1638405, 3080192, 8, 1703941, 3080192, 9, 1769477, 3014656, 8, 1835013, 3014656, 9, 1900549, 3014656, 7, 1966085, 3014656, 8, 2031621, 3276800, 18, 2097157, 2949120, 7, 2162693, 2949120, 8, 2228229, 2949120, 9, 2293765, 2949120, 9, 2359301, 2818048, 7, 2424837, 2818048, 8, 2490373, 2818048, 7, 2555909, 2818048, 8, 2621445, 2818048, 9, 6, 3538944, 8, 65542, 3538944, 7, 131078, 3538944, 8, 196614, 3538944, 9, 262150, 3407872, 8, 327686, 3407872, 9, 393222, 3407872, 7, 458758, 3407872, 8, 524294, 3407872, 9, 589830, 3407872, 7, 655366, 3407872, 8, 720902, 3407872, 9, 786438, 3538944, 7, 851974, 3538944, 8, 917510, 3538944, 9, 983046, 3473408, 7, 1048582, 3473408, 8, 1114118, 3670016, 12, 1179654, 3342336, 7, 1245190, 3342336, 8, 1310726, 3342336, 9, 1376262, 3276800, 7, 1441798, 2949120, 13, 1507334, 2949120, 14, 1572870, 3145728, 7, 1638406, 3145728, 8, 1703942, 3211264, 16, 1769478, 3211264, 17, 1835014, 3080192, 9, 1900550, 3080192, 7, 1966086, 3080192, 8, 2031622, 3342336, 18, 2097158, 2949120, 9, 2162694, 2949120, 9, 2228230, 2949120, 9, 2293766, 2949120, 9, 2359302, 2883584, 7, 2424838, 2883584, 8, 2490374, 2883584, 7, 2555910, 2883584, 8, 2621446, 2883584, 9, 7, 3407872, 8, 65543, 3407872, 7, 131079, 3407872, 8, 196615, 3407872, 9, 262151, 3407872, 7, 327687, 3407872, 8, 393223, 3407872, 9, 458759, 3473408, 8, 524295, 3473408, 9, 589831, 3473408, 7, 655367, 3211264, 10, 720903, 3211264, 11, 786439, 3407872, 7, 851975, 3407872, 8, 917511, 3407872, 9, 983047, 3538944, 7, 1048583, 3538944, 8, 1114119, 3735552, 12, 1179655, 3211264, 7, 1245191, 3211264, 8, 1310727, 3211264, 9, 1376263, 3342336, 7, 1441799, 2818048, 13, 1507335, 2818048, 14, 1572871, 3014656, 7, 1638407, 3014656, 8, 1703943, 3276800, 16, 1769479, 3276800, 17, 1835015, 3145728, 9, 1900551, 3145728, 7, 1966087, 3145728, 8, 2031623, 2818048, 18, 2097159, 2818048, 7, 2162695, 2818048, 8, 2228231, 2818048, 9, 2293767, 2818048, 7, 2359303, 2949120, 7, 2424839, 2949120, 8, 2490375, 2949120, 7, 2555911, 2949120, 8, 2621447, 2949120, 9, 8, 3473408, 8, 65544, 3473408, 7, 131080, 3473408, 8, 196616, 3473408, 9, 262152, 3473408, 7, 327688, 3473408, 8, 393224, 3473408, 9, 458760, 3407872, 8, 524296, 3407872, 9, 589832, 3538944, 7, 655368, 3276800, 10, 720904, 3276800, 11, 786440, 3473408, 7, 851976, 3473408, 8, 917512, 3473408, 9, 983048, 3407872, 7, 1048584, 3407872, 8, 1114120, 2883584, 12, 1179656, 3276800, 7, 1245192, 3276800, 8, 1310728, 3276800, 9, 1376264, 3211264, 7, 1441800, 2883584, 13, 1507336, 2883584, 14, 1572872, 3080192, 7, 1638408, 3080192, 8, 1703944, 3342336, 16, 1769480, 3342336, 17, 1835016, 3014656, 9, 1900552, 3014656, 7, 1966088, 3014656, 8, 2031624, 2883584, 18, 2097160, 2883584, 7, 2162696, 2883584, 8, 2228232, 2883584, 9, 2293768, 2883584, 7, 2359304, 2818048, 7, 2424840, 2818048, 8, 2490376, 2818048, 7, 2555912, 2818048, 8, 2621448, 2818048, 9, 9, 3538944, 8, 65545, 3538944, 7, 131081, 3538944, 8, 196617, 3538944, 9, 262153, 3538944, 7, 327689, 3538944, 8, 393225, 3538944, 9, 458761, 3473408, 8, 524297, 3473408, 9, 589833, 3407872, 7, 655369, 3342336, 10, 720905, 3342336, 11, 786441, 3538944, 7, 851977, 3538944, 8, 917513, 3538944, 9, 983049, 3473408, 7, 1048585, 3473408, 8, 1114121, 2949120, 12, 1179657, 3342336, 7, 1245193, 3342336, 8, 1310729, 3342336, 9, 1376265, 3276800, 7, 1441801, 2949120, 13, 1507337, 2949120, 14, 1572873, 3145728, 7, 1638409, 3145728, 8, 1703945, 3145728, 9, 1769481, 3080192, 8, 1835017, 3080192, 9, 1900553, 3080192, 7, 1966089, 3080192, 8, 2031625, 2949120, 18, 2097161, 2949120, 7, 2162697, 2949120, 8, 2228233, 2949120, 9, 2293769, 2949120, 7, 2359305, 2883584, 7, 2424841, 2883584, 8, 2490377, 2883584, 7, 2555913, 2883584, 8, 2621449, 2883584, 9, 196643, 3473408, 7, 262179, 3473408, 8, 327715, 3473408, 9, 393251, 3407872, 9, 524323, 3407872, 9, 589859, 3407872, 7, 655395, 3407872, 8, 720931, 3407872, 9, 786467, 3473408, 7, 852003, 3473408, 8, 917539, 3473408, 9, 983075, 3473408, 7, 1048611, 3473408, 8, 1114147, 3735552, 12, 1179683, 3342336, 7, 1245219, 3342336, 8, 1310755, 3342336, 9, 1376291, 3276800, 7, 1441827, 2883584, 13, 1507363, 2883584, 14, 1572899, 3080192, 7, 1638435, 3080192, 8, 1703971, 3080192, 9, 1769507, 3080192, 8, 1835043, 3080192, 9, 1900579, 3080192, 7, 1966115, 3080192, 8, 2031651, 2949120, 18, 2097187, 2818048, 7, 2162723, 2818048, 8, 2228259, 2818048, 9, 2293795, 2883584, 7, 2359331, 2883584, 7, 2424867, 2883584, 8, 2490403, 2883584, 7, 2555939, 2883584, 8, 196644, 3538944, 7, 262180, 3538944, 8, 327716, 3538944, 9, 393252, 3473408, 9, 458788, 3473408, 8, 524324, 3473408, 9, 589860, 3473408, 7, 655396, 3473408, 8, 720932, 3473408, 9, 786468, 3407872, 7, 852004, 3407872, 8, 917540, 3407872, 9, 983076, 3538944, 7, 1048612, 3538944, 8, 1114148, 2883584, 12, 1179684, 3211264, 7, 1245220, 3211264, 8, 1310756, 3211264, 9, 1376292, 3342336, 7, 1441828, 3211264, 13, 1507364, 3211264, 14, 1572900, 3145728, 7, 1638436, 3145728, 8, 1703972, 3145728, 9, 1769508, 3145728, 8, 1835044, 3145728, 9, 1900580, 3145728, 7, 1966116, 3145728, 8, 2031652, 3014656, 18, 2097188, 2883584, 7, 2162724, 2949120, 9, 2228260, 2949120, 9, 2293796, 2949120, 7, 2359332, 2949120, 7, 2424868, 2949120, 8, 2490404, 2949120, 7, 2555940, 2949120, 8, 196645, 3407872, 7, 262181, 3407872, 8, 327717, 3407872, 9, 393253, 3538944, 9, 458789, 3538944, 8, 524325, 3538944, 9, 589861, 3538944, 7, 655397, 3538944, 8, 720933, 3538944, 9, 786469, 3473408, 7, 852005, 3473408, 8, 917541, 3211264, 10, 983077, 3211264, 11, 1048613, 3407872, 8, 1114149, 2949120, 12, 1179685, 3276800, 7, 1245221, 3276800, 8, 1310757, 3276800, 9, 1376293, 3211264, 7, 1441829, 3276800, 13, 1507365, 3276800, 14, 1572901, 3014656, 7, 1638437, 3014656, 8, 1703973, 3014656, 9, 1769509, 3014656, 8, 1835045, 3014656, 9, 1900581, 3014656, 7, 1966117, 3014656, 8, 2031653, 3080192, 18, 2097189, 2949120, 7, 2162725, 2949120, 8, 2228261, 2949120, 9, 2293797, 2818048, 8, 2359333, 2818048, 7, 2424869, 2818048, 8, 2490405, 2818048, 7, 2555941, 2818048, 8, 196646, 3473408, 7, 262182, 3473408, 8, 327718, 3473408, 9, 393254, 3407872, 7, 458790, 3407872, 8, 524326, 3407872, 9, 589862, 3407872, 7, 655398, 3407872, 8, 720934, 3407872, 9, 786470, 3538944, 7, 852006, 3538944, 8, 917542, 3276800, 10, 983078, 3276800, 11, 1048614, 3473408, 8, 1114150, 3014656, 12, 1179686, 3342336, 7, 1245222, 3342336, 8, 1310758, 3342336, 9, 1376294, 3276800, 7, 1441830, 3342336, 13, 1507366, 3342336, 14, 1572902, 3080192, 7, 1638438, 3080192, 8, 1703974, 3080192, 9, 1769510, 3080192, 8, 1835046, 3080192, 9, 1900582, 3080192, 7, 1966118, 3080192, 8, 2031654, 3145728, 18, 2097190, 2818048, 7, 2162726, 2818048, 8, 2228262, 2818048, 9, 2293798, 2818048, 9, 2359334, 2883584, 7, 2424870, 2883584, 8, 2490406, 2883584, 7, 2555942, 2883584, 8, 196647, 3538944, 7, 262183, 3538944, 8, 327719, 3538944, 9, 393255, 3473408, 7, 458791, 3473408, 8, 524327, 3473408, 9, 589863, 3473408, 7, 655399, 3473408, 8, 720935, 3473408, 9, 786471, 3407872, 7, 852007, 3407872, 8, 917543, 3342336, 10, 983079, 3342336, 11, 1048615, 3538944, 8, 1114151, 3080192, 12, 1179687, 3211264, 7, 1245223, 3211264, 8, 1310759, 3211264, 9, 1376295, 3342336, 7, 1441831, 2818048, 13, 1507367, 2818048, 14, 1572903, 3014656, 7, 1638439, 3014656, 8, 1703975, 3014656, 9, 1769511, 3145728, 8, 1835047, 3145728, 9, 1900583, 3145728, 7, 1966119, 3145728, 8, 2031655, 3211264, 18, 2097191, 2883584, 7, 2162727, 2883584, 8, 2228263, 2883584, 9, 2293799, 2883584, 9, 2359335, 2949120, 7, 2424871, 2949120, 8, 2490407, 2949120, 7, 2555943, 2949120, 8, 196648, 3407872, 7, 262184, 3407872, 8, 327720, 3407872, 9, 393256, 3538944, 7, 458792, 3538944, 8, 524328, 3538944, 9, 589864, 3538944, 7, 655400, 3538944, 8, 720936, 3538944, 9, 786472, 3473408, 7, 852008, 3473408, 8, 917544, 3473408, 9, 983080, 3407872, 7, 1048616, 3407872, 8, 1114152, 3604480, 12, 1179688, 3276800, 7, 1245224, 3276800, 8, 1310760, 3276800, 9, 1376296, 3211264, 7, 1441832, 2883584, 13, 1507368, 2883584, 14, 1572904, 3080192, 7, 1638440, 3080192, 8, 1703976, 3080192, 9, 1769512, 3014656, 8, 1835048, 3014656, 9, 1900584, 3014656, 7, 1966120, 3014656, 8, 2031656, 3276800, 18, 2097192, 2949120, 7, 2162728, 2949120, 8, 2228264, 2949120, 9, 2293800, 2949120, 9, 2359336, 2818048, 7, 2424872, 2818048, 8, 2490408, 2818048, 7, 2555944, 2818048, 8, 196649, 3473408, 7, 262185, 3473408, 8, 327721, 3473408, 9, 393257, 3407872, 7, 458793, 3407872, 8, 524329, 3407872, 9, 589865, 3407872, 7, 655401, 3407872, 8, 720937, 3407872, 9, 786473, 3538944, 7, 852009, 3538944, 8, 917545, 3538944, 9, 983081, 3473408, 7, 1048617, 3473408, 8, 1114153, 3670016, 12, 1179689, 3342336, 7, 1245225, 3342336, 8, 1310761, 3342336, 9, 1376297, 3276800, 7, 1441833, 2949120, 13, 1507369, 2949120, 14, 1572905, 3145728, 7, 1638441, 3145728, 8, 1703977, 3211264, 16, 1769513, 3211264, 17, 1835049, 3080192, 9, 1900585, 3080192, 7, 1966121, 3080192, 8, 2031657, 3342336, 18, 2097193, 2949120, 9, 2162729, 2949120, 9, 2228265, 2949120, 9, 2293801, 2949120, 9, 2359337, 2883584, 7, 2424873, 2883584, 8, 2490409, 2883584, 7, 2555945, 2883584, 8, 196650, 3538944, 7, 262186, 3538944, 8, 327722, 3538944, 9, 393258, 3473408, 7, 458794, 3473408, 8, 524330, 3473408, 9, 589866, 3473408, 7, 655402, 3211264, 10, 720938, 3211264, 11, 786474, 3407872, 7, 852010, 3407872, 8, 917546, 3407872, 9, 983082, 3538944, 7, 1048618, 3538944, 8, 1114154, 3735552, 12, 1179690, 3211264, 7, 1245226, 3211264, 8, 1310762, 3211264, 9, 1376298, 3342336, 7, 1441834, 2818048, 13, 1507370, 2818048, 14, 1572906, 3014656, 7, 1638442, 3014656, 8, 1703978, 3276800, 16, 1769514, 3276800, 17, 1835050, 3145728, 9, 1900586, 3145728, 7, 1966122, 3145728, 8, 2031658, 2818048, 18, 2097194, 2818048, 7, 2162730, 2818048, 8, 2228266, 2818048, 9, 2293802, 2818048, 7, 2359338, 2949120, 7, 2424874, 2949120, 8, 2490410, 2949120, 7, 2555946, 2949120, 8, 196651, 3407872, 7, 262187, 3407872, 8, 327723, 3407872, 9, 393259, 3407872, 9, 458795, 3407872, 8, 524331, 3407872, 9, 589867, 3538944, 7, 655403, 3276800, 10, 720939, 3276800, 11, 786475, 3473408, 7, 852011, 3473408, 8, 917547, 3473408, 9, 983083, 3407872, 7, 1048619, 3407872, 8, 1114155, 2883584, 12, 1179691, 3276800, 7, 1245227, 3276800, 8, 1310763, 3276800, 9, 1376299, 3211264, 7, 1441835, 2883584, 13, 1507371, 2883584, 14, 1572907, 3080192, 7, 1638443, 3080192, 8, 1703979, 3342336, 16, 1769515, 3342336, 17, 1835051, 3014656, 9, 1900587, 3014656, 7, 1966123, 3014656, 8, 2031659, 2883584, 18, 2097195, 2883584, 7, 2162731, 2883584, 8, 2228267, 2883584, 9, 2293803, 2883584, 7, 2359339, 2818048, 7, 2424875, 2818048, 8, 2490411, 2818048, 7, 2555947, 2818048, 8, 196652, 3473408, 7, 262188, 3473408, 8, 327724, 3473408, 9, 393260, 3473408, 9, 458796, 3473408, 8, 524332, 3473408, 9, 589868, 3407872, 7, 655404, 3342336, 10, 720940, 3342336, 11, 786476, 3538944, 7, 852012, 3538944, 8, 917548, 3538944, 9, 983084, 3473408, 7, 1048620, 3473408, 8, 1114156, 2949120, 12, 1179692, 3342336, 7, 1245228, 3342336, 8, 1310764, 3342336, 9, 1376300, 3276800, 7, 1441836, 2949120, 13, 1507372, 2949120, 14, 1572908, 3145728, 7, 1638444, 3145728, 8, 1703980, 3145728, 9, 1769516, 3080192, 8, 1835052, 3080192, 9, 1900588, 3080192, 7, 1966124, 3080192, 8, 2031660, 2949120, 18, 2097196, 2949120, 7, 2162732, 2949120, 8, 2228268, 2949120, 9, 2293804, 2949120, 7, 2359340, 2883584, 7, 2424876, 2883584, 8, 2490412, 2883584, 7, 2555948, 2883584, 8, 196653, 3538944, 7, 262189, 3538944, 8, 327725, 3538944, 9, 393261, 3538944, 9, 458797, 3538944, 8, 524333, 3538944, 9, 589869, 3211264, 11, 655405, 3473408, 8, 720941, 3473408, 9, 786477, 3407872, 7, 852013, 3407872, 8, 917549, 3407872, 9, 983085, 3538944, 7, 1048621, 3538944, 8, 1114157, 3014656, 12, 1179693, 3211264, 7, 1245229, 3211264, 8, 1310765, 3211264, 9, 1376301, 3342336, 7, 1441837, 2818048, 13, 1507373, 2818048, 14, 1572909, 3014656, 7, 1638445, 3014656, 8, 1703981, 3014656, 9, 1769517, 3145728, 8, 1835053, 3145728, 9, 1900589, 3145728, 7, 1966125, 3604480, 17, 2031661, 3604480, 18, 2097197, 2818048, 7, 2162733, 2818048, 8, 2228269, 2818048, 9, 2293805, 2818048, 7, 2359341, 2818048, 8, 2424877, 2818048, 9, 2490413, 2818048, 7, 2555949, 2818048, 8, 262154, 3407872, 7, 327690, 3407872, 8, 393226, 3407872, 9, 458762, 3473408, 8, 589834, 3538944, 7, 655370, 3538944, 8, 720906, 3538944, 9, 786442, 3473408, 7, 851978, 3473408, 8, 917514, 3473408, 9, 983050, 3407872, 7, 1048586, 3407872, 8, 1114122, 3080192, 12, 1179658, 3276800, 7, 1245194, 3276800, 8, 1310730, 3276800, 9, 1376266, 3211264, 7, 1441802, 2883584, 13, 1507338, 2883584, 14, 1572874, 3080192, 7, 1638410, 3080192, 8, 1703946, 3080192, 9, 1769482, 3014656, 8, 1835018, 3014656, 9, 1900554, 3080192, 9, 1966090, 3080192, 9, 2031626, 3080192, 18, 2097162, 2883584, 7, 2162698, 2883584, 8, 2228234, 2883584, 9, 2293770, 2883584, 7, 2359306, 2818048, 7, 2424842, 2818048, 8, 2490378, 2818048, 7, 2555914, 2818048, 8, 2621450, 2818048, 9, 262155, 3473408, 7, 327691, 3473408, 8, 393227, 3473408, 9, 458763, 3538944, 8, 524299, 3538944, 9, 589835, 3407872, 7, 655371, 3407872, 8, 720907, 3407872, 9, 786443, 3538944, 7, 851979, 3538944, 8, 917515, 3538944, 9, 983051, 3473408, 7, 1048587, 3473408, 8, 1114123, 3145728, 12, 1179659, 3342336, 7, 1245195, 3342336, 8, 1310731, 3342336, 9, 1376267, 3276800, 7, 1441803, 2818048, 13, 1507339, 2818048, 14, 1572875, 3145728, 7, 1638411, 3145728, 8, 1703947, 3145728, 9, 1769483, 3080192, 8, 1835019, 3080192, 9, 1900555, 3080192, 9, 1966091, 3080192, 9, 2031627, 3145728, 18, 2097163, 2949120, 7, 2162699, 2949120, 8, 2228235, 2949120, 9, 2293771, 2949120, 7, 2359307, 2883584, 7, 2424843, 2883584, 8, 2490379, 2883584, 7, 2555915, 2883584, 8, 2621451, 2883584, 9, 262156, 3538944, 7, 327692, 3538944, 8, 393228, 3538944, 9, 458764, 3407872, 8, 524300, 3407872, 9, 589836, 3473408, 7, 655372, 3473408, 8, 720908, 3473408, 9, 786444, 3407872, 7, 851980, 3407872, 8, 917516, 3407872, 9, 983052, 3538944, 7, 1048588, 3538944, 8, 1114124, 3211264, 12, 1179660, 3211264, 7, 1245196, 3211264, 8, 1310732, 3211264, 9, 1376268, 3342336, 7, 1441804, 2883584, 13, 1507340, 2883584, 14, 1572876, 3014656, 7, 1638412, 3014656, 8, 1703948, 3014656, 9, 1769484, 3145728, 8, 1835020, 3145728, 9, 1900556, 3080192, 9, 1966092, 3080192, 9, 2031628, 3211264, 18, 2097164, 2818048, 7, 2162700, 2818048, 8, 2228236, 2818048, 9, 2293772, 2818048, 7, 2359308, 2949120, 7, 2424844, 2949120, 8, 2490380, 2949120, 7, 2555916, 2949120, 8, 2621452, 2949120, 9, 262157, 3407872, 7, 327693, 3407872, 8, 393229, 3407872, 9, 458765, 3473408, 8, 524301, 3473408, 9, 589837, 3538944, 7, 655373, 3538944, 8, 720909, 3538944, 9, 786445, 3473408, 7, 851981, 3473408, 8, 917517, 3473408, 9, 983053, 3407872, 7, 1048589, 3407872, 8, 1114125, 3276800, 12, 1179661, 3276800, 7, 1245197, 3276800, 8, 1310733, 3276800, 9, 1376269, 3211264, 7, 1441805, 2949120, 13, 1507341, 2949120, 14, 1572877, 3080192, 7, 1638413, 3080192, 8, 1703949, 3080192, 9, 1769485, 3014656, 8, 1835021, 3014656, 9, 1900557, 3080192, 9, 1966093, 3080192, 9, 2031629, 3276800, 18, 2097165, 2883584, 7, 2162701, 2883584, 8, 2228237, 2883584, 9, 2293773, 2883584, 7, 2359309, 2818048, 7, 2424845, 2818048, 8, 2490381, 2818048, 7, 2555917, 2818048, 8, 2621453, 2818048, 9, 262158, 3473408, 7, 327694, 3473408, 8, 393230, 3473408, 9, 458766, 3538944, 8, 524302, 3538944, 9, 589838, 3407872, 8, 655374, 3407872, 9, 720910, 3407872, 8, 786446, 3407872, 9, 851982, 3538944, 8, 917518, 3538944, 9, 983054, 3473408, 7, 1048590, 3473408, 8, 1114126, 3342336, 12, 1179662, 3342336, 7, 1245198, 3342336, 8, 1310734, 3342336, 9, 1376270, 3276800, 7, 1441806, 2818048, 13, 1507342, 2818048, 14, 1572878, 3145728, 7, 1638414, 3145728, 8, 1703950, 3145728, 9, 1769486, 3080192, 8, 1835022, 3080192, 9, 1900558, 3080192, 9, 1966094, 3080192, 9, 2031630, 3342336, 18, 2097166, 2949120, 7, 2162702, 2949120, 8, 2228238, 2949120, 9, 2293774, 2949120, 7, 2359310, 2883584, 7, 2424846, 2883584, 8, 2490382, 2883584, 7, 2555918, 2883584, 8, 2621454, 2883584, 9, 262159, 3538944, 7, 327695, 3538944, 8, 393231, 3538944, 9, 458767, 3407872, 8, 524303, 3407872, 9, 589839, 3473408, 8, 655375, 3473408, 9, 720911, 3473408, 8, 786447, 3473408, 9, 851983, 3407872, 8, 917519, 3407872, 9, 983055, 3538944, 7, 1048591, 3538944, 8, 1114127, 3407872, 12, 1179663, 3211264, 7, 1245199, 3211264, 8, 1310735, 3211264, 9, 1376271, 3342336, 7, 1441807, 2883584, 13, 1507343, 2883584, 14, 1572879, 3014656, 7, 1638415, 3014656, 8, 1703951, 3014656, 9, 1769487, 3145728, 8, 1835023, 3145728, 9, 1900559, 3080192, 9, 1966095, 3080192, 9, 2031631, 3407872, 18, 2097167, 2818048, 7, 2162703, 2818048, 8, 2228239, 2818048, 9, 2293775, 2818048, 7, 2359311, 2949120, 7, 2424847, 2949120, 8, 2490383, 2949120, 7, 2555919, 2949120, 8, 2621455, 2949120, 9, 262160, 3407872, 8, 327696, 3407872, 9, 393232, 3473408, 7, 458768, 3473408, 8, 524304, 3473408, 9, 589840, 3538944, 8, 655376, 3538944, 9, 720912, 3538944, 8, 786448, 3538944, 9, 851984, 3473408, 8, 917520, 3473408, 9, 983056, 3407872, 7, 1048592, 3407872, 8, 1114128, 3473408, 12, 1179664, 3276800, 7, 1245200, 3276800, 8, 1310736, 3276800, 9, 1376272, 3211264, 7, 1441808, 2949120, 13, 1507344, 3407872, 14, 1572880, 3080192, 7, 1638416, 3080192, 8, 1703952, 3080192, 9, 1769488, 3014656, 8, 1835024, 3014656, 9, 1900560, 3080192, 9, 1966096, 3080192, 9, 2031632, 3473408, 18, 2097168, 2883584, 7, 2162704, 2883584, 8, 2228240, 2883584, 9, 2293776, 2883584, 7, 2359312, 2818048, 7, 2424848, 2818048, 8, 2490384, 2818048, 7, 2555920, 2818048, 8, 2621456, 2818048, 9, 262161, 3473408, 8, 327697, 3473408, 9, 393233, 3538944, 7, 458769, 3538944, 8, 524305, 3538944, 9, 589841, 3473408, 7, 655377, 3473408, 8, 720913, 3473408, 9, 786449, 3538944, 7, 851985, 3538944, 8, 917521, 3538944, 9, 983057, 3473408, 7, 1048593, 3473408, 8, 1114129, 3538944, 12, 1179665, 3342336, 7, 1245201, 3342336, 8, 1310737, 3342336, 9, 1376273, 3276800, 7, 1441809, 3473408, 13, 1507345, 3473408, 14, 1572881, 3145728, 7, 1638417, 3145728, 8, 1703953, 3145728, 9, 1769489, 3080192, 8, 1835025, 3080192, 9, 1900561, 3080192, 9, 1966097, 3080192, 9, 2031633, 3538944, 18, 2097169, 2949120, 7, 2162705, 2949120, 8, 2228241, 2949120, 9, 2293777, 2949120, 7, 2359313, 2883584, 7, 2424849, 2883584, 8, 2490385, 2883584, 7, 2555921, 2883584, 8, 2621457, 2883584, 9, 262162, 3407872, 9, 327698, 3538944, 9, 393234, 3407872, 7, 458770, 3407872, 8, 524306, 3407872, 9, 589842, 3538944, 7, 655378, 3538944, 8, 720914, 3538944, 9, 786450, 3407872, 7, 851986, 3407872, 8, 917522, 3407872, 9, 983058, 3538944, 7, 1048594, 3538944, 8, 1114130, 3604480, 12, 1179666, 3211264, 7, 1245202, 3211264, 8, 1310738, 3211264, 9, 1376274, 3342336, 7, 1441810, 3538944, 13, 1507346, 3538944, 14, 1572882, 3211264, 16, 1638418, 3211264, 17, 1703954, 3014656, 9, 1769490, 3145728, 8, 1835026, 3145728, 9, 1900562, 3080192, 9, 1966098, 3604480, 17, 2031634, 3604480, 18, 2097170, 2818048, 7, 2162706, 2818048, 8, 2228242, 2818048, 9, 2293778, 2818048, 7, 2359314, 2949120, 7, 2424850, 2949120, 8, 2490386, 2949120, 7, 2555922, 2949120, 8, 2621458, 2949120, 9, 262163, 3473408, 9, 327699, 3538944, 10, 393235, 3407872, 7, 458771, 3407872, 8, 524307, 3407872, 9, 589843, 3407872, 7, 655379, 3407872, 8, 720915, 3407872, 9, 786451, 3473408, 7, 851987, 3473408, 8, 917523, 3473408, 9, 983059, 3407872, 7, 1048595, 3407872, 8, 1114131, 3670016, 12, 1179667, 3211264, 7, 1245203, 3211264, 8, 1310739, 3211264, 9, 1376275, 3211264, 7, 1441811, 3604480, 13, 1507347, 3604480, 14, 1572883, 3276800, 16, 1638419, 3276800, 17, 1703955, 3014656, 9, 1769491, 3014656, 8, 1835027, 3014656, 9, 1900563, 3080192, 9, 1966099, 3670016, 17, 2031635, 3670016, 18, 2097171, 2818048, 7, 2162707, 2818048, 8, 2228243, 2818048, 9, 2293779, 2818048, 7, 2359315, 2818048, 7, 2424851, 2818048, 8, 2490387, 2818048, 7, 2555923, 2818048, 8, 2621459, 2818048, 9, 262164, 3538944, 9, 327700, 3538944, 10, 393236, 3473408, 7, 458772, 3473408, 8, 524308, 3473408, 9, 589844, 3473408, 7, 655380, 3473408, 8, 720916, 3473408, 9, 786452, 3538944, 7, 851988, 3538944, 8, 917524, 3538944, 9, 983060, 3473408, 7, 1048596, 3473408, 8, 1114132, 3735552, 12, 1179668, 3276800, 7, 1245204, 3276800, 8, 1310740, 3276800, 9, 1376276, 3276800, 7, 1441812, 3670016, 13, 1507348, 3670016, 14, 1572884, 3342336, 16, 1638420, 3342336, 17, 1703956, 3080192, 9, 1769492, 3080192, 8, 1835028, 3080192, 9, 1900564, 3080192, 9, 1966100, 3735552, 17, 2031636, 3735552, 18, 2097172, 2883584, 7, 2162708, 2883584, 8, 2228244, 2883584, 9, 2293780, 2883584, 7, 2359316, 2883584, 7, 2424852, 2883584, 8, 2490388, 2883584, 7, 2555924, 2883584, 8, 2621460, 2883584, 9, 262165, 3407872, 9, 327701, 3538944, 10, 393237, 3538944, 7, 458773, 3538944, 8, 524309, 3538944, 9, 589845, 3538944, 7, 655381, 3538944, 8, 720917, 3538944, 9, 786453, 3538944, 7, 851989, 3538944, 8, 917525, 3538944, 9, 983061, 3538944, 7, 1048597, 3538944, 8, 1114133, 3342336, 12, 1179669, 3342336, 7, 1245205, 3342336, 8, 1310741, 3342336, 9, 1376277, 3342336, 7, 1441813, 3735552, 13, 1507349, 3735552, 14, 1572885, 3145728, 7, 1638421, 3145728, 8, 1703957, 3145728, 9, 1769493, 3145728, 8, 1835029, 3145728, 9, 1900565, 3080192, 9, 1966101, 3080192, 9, 2031637, 2949120, 18, 2097173, 2949120, 7, 2162709, 2949120, 8, 2228245, 2949120, 9, 2293781, 2949120, 7, 2359317, 2949120, 7, 2424853, 2949120, 8, 2490389, 2949120, 7, 2555925, 2949120, 8, 2621461, 2949120, 9, 262166, 3473408, 9, 327702, 3407872, 9, 393238, 3538944, 7, 458774, 3538944, 8, 524310, 3538944, 9, 589846, 3407872, 7, 655382, 3407872, 8, 720918, 3407872, 9, 786454, 3407872, 7, 851990, 3407872, 8, 917526, 3407872, 9, 983062, 3407872, 7, 1048598, 3407872, 8, 1114134, 2883584, 12, 1179670, 3276800, 7, 1245206, 3276800, 8, 1310742, 3276800, 9, 1376278, 3211264, 7, 1441814, 3211264, 13, 1507350, 3211264, 14, 1572886, 3211264, 16, 1638422, 3211264, 17, 1703958, 3014656, 9, 1769494, 3014656, 8, 1835030, 3014656, 9, 1900566, 3014656, 7, 1966102, 3014656, 8, 2031638, 3211264, 18, 2097174, 2949120, 7, 2162710, 2949120, 8, 2228246, 2949120, 9, 2293782, 2818048, 7, 2359318, 2818048, 7, 2424854, 2818048, 8, 2490390, 2818048, 7, 2555926, 2818048, 8, 2621462, 2818048, 9, 262167, 3538944, 9, 327703, 3473408, 9, 393239, 3407872, 7, 458775, 3407872, 8, 524311, 3407872, 9, 589847, 3473408, 7, 655383, 3473408, 8, 720919, 3473408, 9, 786455, 3473408, 7, 851991, 3473408, 8, 917527, 3473408, 9, 983063, 3473408, 7, 1048599, 3473408, 8, 1114135, 2949120, 12, 1179671, 3342336, 7, 1245207, 3342336, 8, 1310743, 3342336, 9, 1376279, 3276800, 7, 1441815, 3276800, 13, 1507351, 3276800, 14, 1572887, 3276800, 16, 1638423, 3276800, 17, 1703959, 3080192, 9, 1769495, 3080192, 8, 1835031, 3080192, 9, 1900567, 3080192, 7, 1966103, 3080192, 8, 2031639, 3342336, 18, 2097175, 2818048, 7, 2162711, 2818048, 8, 2228247, 2818048, 9, 2293783, 2883584, 7, 2359319, 2883584, 7, 2424855, 2883584, 8, 2490391, 2883584, 7, 2555927, 2883584, 8, 2621463, 2883584, 9, 262168, 3538944, 8, 327704, 3538944, 9, 393240, 3473408, 7, 458776, 3473408, 8, 524312, 3473408, 9, 589848, 3538944, 7, 655384, 3538944, 8, 720920, 3211264, 10, 786456, 3211264, 11, 851992, 3538944, 8, 917528, 3538944, 9, 983064, 3538944, 7, 1048600, 3538944, 8, 1114136, 3014656, 12, 1179672, 3211264, 7, 1245208, 3211264, 8, 1310744, 3211264, 9, 1376280, 3342336, 7, 1441816, 3342336, 13, 1507352, 3342336, 14, 1572888, 3342336, 16, 1638424, 3342336, 17, 1703960, 3145728, 9, 1769496, 3145728, 8, 1835032, 3145728, 9, 1900568, 3145728, 7, 1966104, 3145728, 8, 2031640, 3342336, 18, 2097176, 2883584, 7, 2162712, 2883584, 8, 2228248, 2883584, 9, 2293784, 2949120, 7, 2359320, 2949120, 7, 2424856, 2949120, 8, 2490392, 2949120, 7, 2555928, 2949120, 8, 2621464, 2949120, 9, 262169, 3407872, 8, 327705, 3407872, 9, 393241, 3538944, 7, 458777, 3538944, 8, 524313, 3538944, 9, 589849, 3407872, 7, 655385, 3407872, 8, 720921, 3276800, 10, 786457, 3276800, 11, 851993, 3407872, 8, 917529, 3407872, 9, 983065, 3407872, 7, 1048601, 3407872, 8, 1114137, 3080192, 12, 1179673, 3276800, 7, 1245209, 3276800, 8, 1310745, 3276800, 9, 1376281, 3211264, 7, 1441817, 2818048, 13, 1507353, 2818048, 14, 1572889, 3014656, 7, 1638425, 3014656, 8, 1703961, 3014656, 9, 1769497, 3014656, 8, 1835033, 3014656, 9, 1900569, 3014656, 7, 1966105, 3014656, 8, 2031641, 3342336, 18, 2097177, 2949120, 7, 2162713, 2949120, 8, 2228249, 2949120, 9, 2293785, 2818048, 7, 2359321, 2818048, 7, 2424857, 2818048, 8, 2490393, 2818048, 7, 2555929, 2818048, 8, 2621465, 2818048, 9, 262170, 3473408, 8, 327706, 3473408, 9, 393242, 3407872, 7, 458778, 3407872, 8, 524314, 3407872, 9, 589850, 3473408, 7, 655386, 3473408, 8, 720922, 3342336, 10, 786458, 3342336, 11, 851994, 3473408, 8, 917530, 3473408, 9, 983066, 3473408, 7, 1048602, 3473408, 8, 1114138, 3145728, 12, 1179674, 3342336, 7, 1245210, 3342336, 8, 1310746, 3342336, 9, 1376282, 3276800, 7, 1441818, 2883584, 13, 1507354, 2883584, 14, 1572890, 3080192, 7, 1638426, 3080192, 8, 1703962, 3080192, 9, 1769498, 3080192, 8, 1835034, 3080192, 9, 1900570, 3080192, 7, 1966106, 3080192, 8, 2031642, 3342336, 18, 2097178, 2818048, 7, 2162714, 2818048, 8, 2228250, 2818048, 9, 2293786, 2883584, 7, 2359322, 2883584, 7, 2424858, 2883584, 8, 2490394, 2883584, 7, 2555930, 2883584, 8, 2621466, 2883584, 9, 262171, 3538944, 8, 327707, 3538944, 9, 393243, 3473408, 7, 458779, 3473408, 8, 524315, 3473408, 9, 589851, 3538944, 7, 655387, 3538944, 8, 720923, 3538944, 9, 786459, 3538944, 7, 851995, 3538944, 8, 917531, 3538944, 9, 983067, 3538944, 7, 1048603, 3538944, 8, 1114139, 3211264, 12, 1179675, 3211264, 7, 1245211, 3211264, 8, 1310747, 3211264, 9, 1376283, 3342336, 7, 1441819, 2949120, 13, 1507355, 2949120, 14, 1572891, 3145728, 7, 1638427, 3145728, 8, 1703963, 3145728, 9, 1769499, 3145728, 8, 1835035, 3145728, 9, 1900571, 3145728, 7, 1966107, 3145728, 8, 2031643, 3342336, 18, 2097179, 2883584, 7, 2162715, 2883584, 8, 2228251, 2949120, 9, 2293787, 2949120, 7, 2359323, 2949120, 7, 2424859, 2949120, 8, 2490395, 2949120, 7, 2555931, 2949120, 8, 2621467, 2949120, 9, 262172, 3407872, 8, 327708, 3407872, 9, 393244, 3538944, 7, 458780, 3538944, 8, 524316, 3538944, 9, 589852, 3407872, 7, 655388, 3407872, 8, 720924, 3407872, 9, 786460, 3407872, 7, 851996, 3407872, 8, 917532, 3407872, 9, 983068, 3407872, 7, 1048604, 3407872, 8, 1114140, 3276800, 12, 1179676, 3276800, 7, 1245212, 3276800, 8, 1310748, 3276800, 9, 1376284, 3211264, 7, 1441820, 3604480, 13, 1507356, 3604480, 14, 1572892, 3014656, 7, 1638428, 3014656, 8, 1703964, 3014656, 9, 1769500, 3014656, 8, 1835036, 3014656, 9, 1900572, 3014656, 7, 1966108, 3014656, 8, 2031644, 3342336, 18, 2097180, 2949120, 7, 2162716, 2949120, 8, 2228252, 2949120, 9, 2293788, 2818048, 7, 2359324, 2818048, 7, 2424860, 2818048, 8, 2490396, 2818048, 7, 2555932, 2818048, 8, 2621468, 2818048, 9, 262173, 3473408, 8, 327709, 3473408, 9, 393245, 3407872, 7, 458781, 3407872, 8, 524317, 3407872, 9, 589853, 3473408, 7, 655389, 3473408, 8, 720925, 3473408, 9, 786461, 3473408, 7, 851997, 3473408, 8, 917533, 3473408, 9, 983069, 3473408, 7, 1048605, 3473408, 8, 1114141, 3342336, 12, 1179677, 3342336, 7, 1245213, 3342336, 8, 1310749, 3342336, 9, 1376285, 3276800, 7, 1441821, 3670016, 13, 1507357, 3670016, 14, 1572893, 3080192, 7, 1638429, 3080192, 8, 1703965, 3080192, 9, 1769501, 3080192, 8, 1835037, 3080192, 9, 1900573, 3080192, 7, 1966109, 3080192, 8, 2031645, 3407872, 18, 2097181, 2818048, 7, 2162717, 2818048, 8, 2228253, 2818048, 9, 2293789, 2883584, 7, 2359325, 2883584, 7, 2424861, 2883584, 8, 2490397, 2883584, 7, 2555933, 2883584, 8, 2621469, 2883584, 9, 262174, 3538944, 8, 327710, 3538944, 9, 393246, 3473408, 7, 458782, 3473408, 8, 524318, 3473408, 9, 589854, 3538944, 7, 655390, 3538944, 8, 720926, 3538944, 9, 786462, 3538944, 7, 851998, 3538944, 8, 917534, 3538944, 9, 983070, 3538944, 7, 1048606, 3538944, 8, 1114142, 3407872, 12, 1179678, 3211264, 7, 1245214, 3211264, 8, 1310750, 3211264, 9, 1376286, 3342336, 7, 1441822, 3735552, 13, 1507358, 3735552, 14, 1572894, 3145728, 7, 1638430, 3145728, 8, 1703966, 3145728, 9, 1769502, 3145728, 8, 1835038, 3145728, 9, 1900574, 3145728, 7, 1966110, 3145728, 8, 2031646, 3473408, 18, 2097182, 2883584, 7, 2162718, 2883584, 8, 2228254, 2883584, 9, 2293790, 2949120, 7, 2359326, 2949120, 7, 2424862, 2949120, 8, 2490398, 2949120, 7, 2555934, 2949120, 8, 2621470, 2949120, 9, 262175, 3407872, 8, 327711, 3407872, 9, 393247, 3538944, 7, 458783, 3538944, 8, 524319, 3538944, 9, 589855, 3407872, 7, 655391, 3407872, 8, 720927, 3407872, 9, 786463, 3407872, 7, 851999, 3407872, 8, 917535, 3407872, 9, 983071, 3407872, 7, 1048607, 3407872, 8, 1114143, 3473408, 12, 1179679, 3276800, 7, 1245215, 3276800, 8, 1310751, 3276800, 9, 1376287, 3211264, 7, 1441823, 2818048, 13, 1507359, 2818048, 14, 1572895, 3014656, 7, 1638431, 3014656, 8, 1703967, 2949120, 16, 1769503, 2949120, 17, 1835039, 3014656, 9, 1900575, 3014656, 7, 1966111, 3014656, 8, 2031647, 3538944, 18, 2097183, 2949120, 7, 2162719, 2949120, 8, 2228255, 2949120, 9, 2293791, 2818048, 7, 2359327, 2818048, 7, 2424863, 2818048, 8, 2490399, 2818048, 7, 2555935, 2818048, 8, 2621471, 2818048, 9, 262176, 3473408, 8, 327712, 3473408, 9, 393248, 3407872, 7, 458784, 3407872, 8, 524320, 3407872, 9, 589856, 3473408, 7, 655392, 3473408, 8, 720928, 3473408, 9, 786464, 3473408, 7, 852000, 3473408, 8, 917536, 3473408, 9, 983072, 3473408, 7, 1048608, 3473408, 8, 1114144, 3538944, 12, 1179680, 3342336, 7, 1245216, 3342336, 8, 1310752, 3342336, 9, 1376288, 3276800, 7, 1441824, 2883584, 13, 1507360, 2883584, 14, 1572896, 3080192, 7, 1638432, 3080192, 8, 1703968, 3014656, 16, 1769504, 3014656, 17, 1835040, 3080192, 9, 1900576, 3080192, 7, 1966112, 3604480, 17, 2031648, 3604480, 18, 2097184, 2818048, 7, 2162720, 2818048, 8, 2228256, 2818048, 9, 2293792, 2883584, 7, 2359328, 2883584, 7, 2424864, 2883584, 8, 2490400, 2883584, 7, 2555936, 2883584, 8, 2621472, 2883584, 9, 33, 3407872, 7, 65569, 3407872, 8, 131105, 3407872, 9, 196641, 3538944, 7, 262177, 3538944, 8, 327713, 3538944, 9, 393249, 3473408, 7, 458785, 3473408, 8, 524321, 3473408, 9, 589857, 3538944, 7, 655393, 3538944, 8, 720929, 3538944, 9, 786465, 3538944, 7, 852001, 3538944, 8, 917537, 3538944, 9, 983073, 3538944, 7, 1048609, 3538944, 8, 1114145, 3604480, 12, 1179681, 3211264, 7, 1245217, 3211264, 8, 1310753, 3211264, 9, 1376289, 3342336, 7, 1441825, 2949120, 13, 1507361, 2949120, 14, 1572897, 3145728, 7, 1638433, 3145728, 8, 1703969, 3080192, 16, 1769505, 3080192, 17, 1835041, 3145728, 9, 1900577, 3145728, 7, 1966113, 3670016, 17, 2031649, 3670016, 18, 2097185, 2883584, 7, 2162721, 2883584, 8, 2228257, 2883584, 9, 2293793, 2949120, 7, 2359329, 2949120, 7, 2424865, 2949120, 8, 2490401, 2949120, 7, 2555937, 2949120, 8, 2621473, 2949120, 9, 34, 3473408, 7, 65570, 3473408, 8, 131106, 3473408, 9, 196642, 3407872, 7, 262178, 3407872, 8, 327714, 3407872, 9, 393250, 3538944, 7, 458786, 3538944, 8, 524322, 3538944, 9, 589858, 3407872, 7, 655394, 3407872, 8, 720930, 3407872, 9, 786466, 3407872, 7, 852002, 3407872, 8, 917538, 3407872, 9, 983074, 3407872, 7, 1048610, 3407872, 8, 1114146, 3670016, 12, 1179682, 3276800, 7, 1245218, 3276800, 8, 1310754, 3276800, 9, 1376290, 3211264, 7, 1441826, 2818048, 13, 1507362, 2818048, 14, 1572898, 3014656, 7, 1638434, 3014656, 8, 1703970, 3145728, 16, 1769506, 3145728, 17, 1835042, 3014656, 9, 1900578, 3014656, 7, 1966114, 3735552, 17, 2031650, 3735552, 18, 2097186, 2949120, 7, 2162722, 2949120, 8, 2228258, 2949120, 9, 2293794, 2818048, 7, 2359330, 2818048, 7, 2424866, 2818048, 8, 2490402, 2818048, 7, 2555938, 2818048, 8, 2621474, 2818048, 9, 35, 3538944, 7, 65571, 3538944, 8, 131107, 3538944, 9, 458787, 3407872, 8, 2621475, 2883584, 9, 36, 3407872, 7, 65572, 3407872, 8, 131108, 3407872, 9, 2621476, 2949120, 9, 37, 3473408, 7, 65573, 3473408, 8, 131109, 3473408, 9, 2621477, 2818048, 9, 38, 3538944, 7, 65574, 3538944, 8, 131110, 3538944, 9, 2621478, 2883584, 9, 39, 3407872, 7, 65575, 3407872, 8, 131111, 3407872, 9, 2621479, 2949120, 9, 40, 3473408, 7, 65576, 3473408, 8, 131112, 3473408, 9, 2621480, 2818048, 9, 41, 3538944, 7, 65577, 3538944, 8, 131113, 3538944, 9, 2621481, 2883584, 9, 42, 3407872, 7, 65578, 3407872, 8, 131114, 3407872, 9, 2621482, 2949120, 9, 43, 3473408, 7, 65579, 3473408, 8, 131115, 3473408, 9, 2621483, 2818048, 9, 44, 3538944, 7, 65580, 3538944, 8, 131116, 3538944, 9, 2621484, 2883584, 9, 45, 3407872, 7, 65581, 3407872, 8, 131117, 3407872, 9, 2621485, 2818048, 9, 393262, 3473408, 7, 458798, 3473408, 8, 524334, 3473408, 9, 589870, 3276800, 11, 655406, 2949120, 10, 720942, 2949120, 11, 786478, 3473408, 7, 852014, 3473408, 8, 917550, 3473408, 9, 983086, 3473408, 7, 1048622, 3473408, 8, 1114158, 2883584, 12, 1179694, 3276800, 7, 1245230, 3276800, 8, 1310766, 3276800, 9, 1376302, 3276800, 7, 1441838, 3407872, 13, 1507374, 3407872, 14, 1572910, 3080192, 7, 1638446, 3080192, 8, 1703982, 3080192, 9, 1769518, 3080192, 8, 1835054, 3080192, 9, 1900590, 3080192, 7, 1966126, 3670016, 17, 2031662, 3670016, 18, 2097198, 2883584, 7, 2162734, 2883584, 8, 2228270, 2883584, 9, 393263, 3538944, 7, 458799, 3538944, 8, 524335, 3538944, 9, 589871, 3342336, 11, 655407, 2949120, 11, 720943, 2949120, 11, 786479, 3538944, 7, 852015, 3538944, 8, 917551, 3538944, 9, 983087, 3538944, 7, 1048623, 3538944, 8, 1114159, 2949120, 12, 1179695, 3342336, 7, 1245231, 3342336, 8, 1310767, 3342336, 9, 1376303, 3342336, 7, 1441839, 3473408, 13, 1507375, 3473408, 14, 1572911, 3145728, 7, 1638447, 3145728, 8, 1703983, 3145728, 9, 1769519, 3145728, 8, 1835055, 3145728, 9, 1900591, 3145728, 7, 1966127, 3735552, 17, 2031663, 3735552, 18, 2097199, 2949120, 7, 2162735, 2949120, 8, 2228271, 2949120, 9, 2293807, 2949120, 7, 393264, 3407872, 7, 458800, 3407872, 8, 524336, 3407872, 9, 589872, 3407872, 7, 655408, 2949120, 11, 720944, 2949120, 11, 786480, 3407872, 7, 852016, 3407872, 8, 917552, 3407872, 9, 983088, 3407872, 7, 1048624, 3407872, 8, 1114160, 3014656, 12, 1179696, 3211264, 7, 1245232, 3211264, 8, 1310768, 3211264, 9, 1376304, 3342336, 7, 1441840, 3538944, 13, 1507376, 3538944, 14, 1572912, 3211264, 16, 1638448, 3211264, 17, 1703984, 2949120, 15, 1769520, 3014656, 8, 1835056, 3014656, 9, 1900592, 3014656, 7, 1966128, 3014656, 8, 2031664, 3014656, 18, 2097200, 2818048, 7, 2162736, 2818048, 8, 2228272, 2818048, 7, 2293808, 2818048, 8, 2359344, 2818048, 7, 393265, 3407872, 7, 458801, 3407872, 8, 524337, 3407872, 9, 589873, 3473408, 7, 655409, 3145728, 10, 720945, 2949120, 11, 786481, 3473408, 7, 852017, 3473408, 8, 917553, 3473408, 9, 983089, 3473408, 7, 1048625, 3473408, 8, 1114161, 3080192, 12, 1179697, 3276800, 7, 1245233, 3276800, 8, 1310769, 3276800, 9, 1376305, 3211264, 7, 1441841, 3604480, 13, 1507377, 3604480, 14, 1572913, 3276800, 16, 1638449, 3276800, 17, 1703985, 2949120, 15, 1769521, 3080192, 8, 1835057, 3080192, 9, 1900593, 3080192, 7, 1966129, 3080192, 8, 2031665, 3080192, 18, 2097201, 2883584, 7, 2162737, 2883584, 8, 2228273, 2883584, 7, 2293809, 2883584, 8, 2359345, 2883584, 7, 393266, 3473408, 7, 458802, 3473408, 8, 524338, 3473408, 9, 589874, 3538944, 7, 655410, 3211264, 10, 720946, 2949120, 11, 786482, 3538944, 7, 852018, 3538944, 8, 917554, 3538944, 9, 983090, 3538944, 7, 1048626, 3538944, 8, 1114162, 3145728, 12, 1179698, 3342336, 7, 1245234, 3342336, 8, 1310770, 3342336, 9, 1376306, 3276800, 7, 1441842, 3670016, 13, 1507378, 3670016, 14, 1572914, 3342336, 16, 1638450, 3342336, 17, 1703986, 2949120, 15, 1769522, 3145728, 8, 1835058, 3145728, 9, 1900594, 3145728, 7, 1966130, 3145728, 8, 2031666, 3145728, 18, 2097202, 2949120, 7, 2162738, 2949120, 8, 2228274, 2949120, 7, 2293810, 2949120, 8, 2359346, 2949120, 7, 2424882, 2949120, 8, 589875, 3407872, 7, 655411, 3014656, 10, 720947, 3014656, 11, 786483, 3407872, 7, 852019, 3407872, 8, 917555, 3407872, 9, 983091, 3407872, 7, 1048627, 3407872, 8, 1114163, 3211264, 12, 1179699, 3211264, 7, 1245235, 3211264, 8, 1310771, 3211264, 9, 1376307, 3342336, 7, 1441843, 3735552, 13, 1507379, 3735552, 14, 1572915, 3014656, 7, 1638451, 3014656, 8, 1703987, 3014656, 9, 1769523, 3014656, 8, 1835059, 3014656, 9, 1900595, 3014656, 7, 1966131, 3014656, 8, 2031667, 3211264, 18, 2097203, 2818048, 7, 2162739, 2818048, 8, 2228275, 2818048, 7, 2293811, 2818048, 8, 2359347, 2949120, 7, 2424883, 2949120, 8, 589876, 3473408, 7, 655412, 3080192, 10, 720948, 3080192, 11, 786484, 3473408, 7, 852020, 3473408, 8, 917556, 3473408, 9, 983092, 3473408, 7, 1048628, 3473408, 8, 1114164, 3276800, 12, 1179700, 3276800, 7, 1245236, 3276800, 8, 1310772, 3276800, 9, 1376308, 3211264, 7, 1441844, 2883584, 13, 1507380, 2883584, 14, 1572916, 3080192, 7, 1638452, 3080192, 8, 1703988, 3080192, 9, 1769524, 3080192, 8, 1835060, 3080192, 9, 1900596, 3080192, 7, 1966132, 3080192, 8, 2031668, 3276800, 18, 2097204, 2883584, 7, 2162740, 2883584, 8, 2228276, 2883584, 7, 2293812, 2883584, 8, 2359348, 2883584, 9, 2424884, 2883584, 8, 589877, 3538944, 7, 655413, 3145728, 10, 720949, 3145728, 11, 786485, 3538944, 7, 852021, 3538944, 8, 917557, 3538944, 9, 983093, 3538944, 7, 1048629, 3538944, 8, 1114165, 3342336, 12, 1179701, 3342336, 7, 1245237, 3342336, 8, 1310773, 3342336, 9, 1376309, 3276800, 7, 1441845, 2949120, 13, 1507381, 2949120, 14, 1572917, 3145728, 7, 1638453, 3145728, 8, 1703989, 3145728, 9, 1769525, 3145728, 8, 1835061, 3145728, 9, 1900597, 3145728, 7, 1966133, 3145728, 8, 2031669, 3342336, 18, 2097205, 2949120, 7, 2162741, 2949120, 8, 2228277, 2949120, 7, 2293813, 2949120, 8, 2359349, 2949120, 9, 2424885, 2883584, 8, 589878, 3538944, 7, 655414, 3538944, 8, 720950, 3538944, 9, 786486, 3538944, 7, 852022, 3538944, 8, 917558, 3538944, 9, 983094, 3538944, 7, 1048630, 3538944, 8, 1114166, 3211264, 12, 1179702, 3211264, 7, 1245238, 3211264, 8, 1310774, 3211264, 9, 1376310, 3342336, 7, 1441846, 2949120, 13, 1507382, 2949120, 14, 1572918, 3145728, 7, 1638454, 3145728, 8, 1703990, 3145728, 9, 1769526, 3145728, 8, 1835062, 3145728, 9, 1900598, 3145728, 7, 1966134, 3145728, 8, 2031670, 3342336, 18, 2097206, 2883584, 7, 2162742, 2883584, 8, 2228278, 2949120, 9, 2293814, 2949120, 7, 2359350, 2949120, 7, 2424886, 2949120, 8, 524298, 3407872, 9, 2293806, 2883584, 7, 2359342, 2883584, 8, 2424878, 2883584, 9, 2359343, 2949120, 8, 2424879, 2949120, 9, 2490414, 2883584, 7, 2555950, 2883584, 8, 2621486, 2883584, 9, 2490415, 2949120, 7, 2555951, 2949120, 8, 2621487, 2949120, 9, 2490416, 2818048, 9, 2555952, 2818048, 8, 2621488, 2818048, 9, 2490417, 2883584, 9, 2555953, 2883584, 8, 2621489, 2883584, 9, 2490418, 2949120, 9, 2555954, 2949120, 8, 2621490, 2949120, 9, 2490419, 2949120, 9, 2555955, 2818048, 8, 2621491, 2818048, 9, 2490420, 2818048, 7, 2555956, 2818048, 8, 2621492, 2818048, 9, 2490421, 2883584, 7, 2555957, 2883584, 8, 2621493, 2883584, 9, 2490422, 2949120, 7, 2555958, 2949120, 8, 2621494, 2949120, 9, 2424881, 2883584, 8, 2424880, 2818048, 8, 393268, 3407872, 7, 458804, 3407872, 8, 524340, 3407872, 9, 393269, 3473408, 7, 458805, 3473408, 8, 524341, 3473408, 9, 393270, 3473408, 7, 458806, 3473408, 8, 524342, 3473408, 9, 393267, 3538944, 7, 458803, 3538944, 8, 524339, 3538944, 9, 196660, 3407872, 7, 262196, 3407872, 8, 327732, 3407872, 9, 196661, 3473408, 7, 262197, 3473408, 8, 327733, 3473408, 9, 196662, 3538944, 9, 262198, 3538944, 8, 327734, 3538944, 9, 196657, 3407872, 7, 262193, 3407872, 8, 327729, 3407872, 9, 196658, 3473408, 7, 262194, 3473408, 8, 327730, 3473408, 9, 196659, 3538944, 7, 262195, 3538944, 8, 327731, 3538944, 9, 196654, 3407872, 7, 262190, 3407872, 8, 327726, 3407872, 9, 196655, 3473408, 7, 262191, 3473408, 8, 327727, 3473408, 9, 196656, 3538944, 7, 262192, 3538944, 8, 327728, 3538944, 9, 196639, 3407872, 7, 196640, 3473408, 7, 196636, 3407872, 7, 196637, 3473408, 7, 196638, 3538944, 7, 196633, 3407872, 9, 196634, 3473408, 9, 196635, 3538944, 9, 196630, 3407872, 9, 196631, 3473408, 9, 196632, 3538944, 9, 22, 3407872, 7, 65558, 3407872, 7, 131094, 3407872, 8, 23, 3473408, 7, 65559, 3473408, 7, 131095, 3473408, 8, 24, 3407872, 7, 65560, 3538944, 7, 131096, 3538944, 8, 19, 3407872, 7, 65555, 3407872, 7, 131091, 3407872, 8, 20, 3473408, 7, 65556, 3473408, 7, 131092, 3473408, 8, 21, 3538944, 7, 65557, 3538944, 7, 131093, 3538944, 8, 16, 3407872, 7, 65552, 3407872, 7, 131088, 3407872, 8, 17, 3473408, 7, 65553, 3473408, 7, 131089, 3473408, 8, 18, 3538944, 7, 65554, 3538944, 7, 131090, 3538944, 8, 13, 3407872, 7, 65549, 3407872, 7, 131085, 3407872, 8, 14, 3473408, 7, 65550, 3473408, 7, 131086, 3473408, 8, 15, 3538944, 7, 65551, 3538944, 7, 131087, 3538944, 8, 10, 3407872, 7, 65546, 3407872, 7, 131082, 3407872, 8, 11, 3473408, 7, 65547, 3473408, 7, 131083, 3473408, 8, 12, 3538944, 7, 65548, 3538944, 7, 131084, 3538944, 8, 196621, 3407872, 9, 196622, 3473408, 9, 196623, 3538944, 9, 196624, 3407872, 9, 196625, 3473408, 9, 196626, 3538944, 9, 196627, 3407872, 9, 196628, 3473408, 9, 196629, 3538944, 9, 25, 3473408, 7, 65561, 3407872, 7, 131097, 3407872, 8, 26, 3538944, 7, 65562, 3473408, 7, 131098, 3473408, 8, 27, 3407872, 7, 65563, 3538944, 7, 131099, 3538944, 8, 28, 3473408, 7, 65564, 3473408, 8, 131100, 3473408, 9, 29, 3538944, 7, 65565, 3538944, 8, 131101, 3538944, 9, 30, 3407872, 7, 65566, 3407872, 8, 131102, 3407872, 9, 31, 3473408, 7, 65567, 3473408, 8, 131103, 3473408, 9, 32, 3538944, 7, 65568, 3538944, 8, 131104, 3538944, 9, 46, 3473408, 7, 65582, 3473408, 8, 131118, 3473408, 9, 47, 3538944, 7, 65583, 3538944, 8, 131119, 3538944, 9, 48, 3407872, 7, 65584, 3407872, 8, 131120, 3407872, 9, 49, 3473408, 7, 65585, 3473408, 8, 131121, 3473408, 9, 50, 3538944, 7, 65586, 3538944, 8, 131122, 3538944, 9, 51, 3407872, 7, 65587, 3407872, 8, 131123, 3407872, 9, 52, 3407872, 7, 65588, 3407872, 8, 131124, 3407872, 9, 53, 3473408, 7, 65589, 3473408, 8, 131125, 3473408, 9, 54, 3407872, 7, 65590, 3538944, 7, 131126, 3538944, 8, 196618, 3407872, 9, 196619, 3473408, 9, 196620, 3538944, 9, 55, 3473408, 7, 65591, 3473408, 8, 131127, 3473408, 9, 196663, 3407872, 7, 262199, 3407872, 8, 327735, 3407872, 9, 393271, 3538944, 7, 458807, 3538944, 8, 524343, 3538944, 9, 589879, 3407872, 7, 655415, 3407872, 8, 720951, 3407872, 9, 786487, 3407872, 7, 852023, 3407872, 8, 917559, 3407872, 9, 983095, 3407872, 7, 1048631, 3407872, 8, 1114167, 3276800, 12, 1179703, 3276800, 7, 1245239, 3276800, 8, 1310775, 3276800, 9, 1376311, 3211264, 7, 1441847, 3604480, 13, 1507383, 3604480, 14, 1572919, 3014656, 7, 1638455, 3014656, 8, 1703991, 3014656, 9, 1769527, 3014656, 8, 1835063, 3014656, 9, 1900599, 3014656, 7, 1966135, 3014656, 8, 2031671, 3342336, 18, 2097207, 2949120, 7, 2162743, 2949120, 8, 2228279, 2949120, 9, 2293815, 2818048, 7, 2359351, 2818048, 7, 2424887, 2818048, 8, 2490423, 2818048, 7, 2555959, 2818048, 8, 2621495, 2818048, 9, 56, 3538944, 7, 65592, 3538944, 8, 131128, 3538944, 9, 196664, 3473408, 7, 262200, 3473408, 8, 327736, 3473408, 9, 393272, 3407872, 7, 458808, 3407872, 8, 524344, 3407872, 9, 589880, 3473408, 7, 655416, 3473408, 8, 720952, 3473408, 9, 786488, 3473408, 7, 852024, 3473408, 8, 917560, 3473408, 9, 983096, 3473408, 7, 1048632, 3473408, 8, 1114168, 3342336, 12, 1179704, 3342336, 7, 1245240, 3342336, 8, 1310776, 3342336, 9, 1376312, 3276800, 7, 1441848, 3670016, 13, 1507384, 3670016, 14, 1572920, 3080192, 7, 1638456, 3080192, 8, 1703992, 3080192, 9, 1769528, 3080192, 8, 1835064, 3080192, 9, 1900600, 3080192, 7, 1966136, 3080192, 8, 2031672, 3407872, 18, 2097208, 2818048, 7, 2162744, 2818048, 8, 2228280, 2818048, 9, 2293816, 2883584, 7, 2359352, 2883584, 7, 2424888, 2883584, 8, 2490424, 2883584, 7, 2555960, 2883584, 8, 2621496, 2883584, 9, 57, 3407872, 7, 65593, 3407872, 8, 131129, 3407872, 9, 196665, 3538944, 7, 262201, 3538944, 8, 327737, 3538944, 9, 393273, 3473408, 7, 458809, 3473408, 8, 524345, 3473408, 9, 589881, 3538944, 7, 655417, 3538944, 8, 720953, 3538944, 9, 786489, 3538944, 7, 852025, 3538944, 8, 917561, 3538944, 9, 983097, 3538944, 7, 1048633, 3538944, 8, 1114169, 3407872, 12, 1179705, 3211264, 7, 1245241, 3211264, 8, 1310777, 3211264, 9, 1376313, 3342336, 7, 1441849, 3735552, 13, 1507385, 3735552, 14, 1572921, 3145728, 7, 1638457, 3145728, 8, 1703993, 3145728, 9, 1769529, 3145728, 8, 1835065, 3145728, 9, 1900601, 3145728, 7, 1966137, 3145728, 8, 2031673, 3473408, 18, 2097209, 2883584, 7, 2162745, 2883584, 8, 2228281, 2883584, 9, 2293817, 2949120, 7, 2359353, 2949120, 7, 2424889, 2949120, 8, 2490425, 2949120, 7, 2555961, 2949120, 8, 2621497, 2949120, 9, 58, 3473408, 7, 65594, 3473408, 8, 131130, 3473408, 9, 196666, 3407872, 7, 262202, 3407872, 8, 327738, 3407872, 9, 393274, 3538944, 7, 458810, 3538944, 8, 524346, 3538944, 9, 589882, 3407872, 7, 655418, 3407872, 8, 720954, 3407872, 9, 786490, 3407872, 7, 852026, 3407872, 8, 917562, 3407872, 9, 983098, 3407872, 7, 1048634, 3407872, 8, 1114170, 3473408, 12, 1179706, 3276800, 7, 1245242, 3276800, 8, 1310778, 3276800, 9, 1376314, 3211264, 7, 1441850, 2818048, 13, 1507386, 2818048, 14, 1572922, 3014656, 7, 1638458, 3014656, 8, 1703994, 2949120, 16, 1769530, 2949120, 17, 1835066, 3014656, 9, 1900602, 3014656, 7, 1966138, 3014656, 8, 2031674, 3538944, 18, 2097210, 2949120, 7, 2162746, 2949120, 8, 2228282, 2949120, 9, 2293818, 2818048, 7, 2359354, 2818048, 7, 2424890, 2818048, 8, 2490426, 2818048, 7, 2555962, 2818048, 8, 2621498, 2818048, 9, 59, 3538944, 7, 65595, 3538944, 8, 131131, 3538944, 9, 196667, 3473408, 7, 262203, 3473408, 8, 327739, 3473408, 9, 393275, 3407872, 7, 458811, 3407872, 8, 524347, 3407872, 9, 589883, 3473408, 7, 655419, 3473408, 8, 720955, 3473408, 9, 786491, 3473408, 7, 852027, 3473408, 8, 917563, 3473408, 9, 983099, 3473408, 7, 1048635, 3473408, 8, 1114171, 3538944, 12, 1179707, 3342336, 7, 1245243, 3342336, 8, 1310779, 3342336, 9, 1376315, 3276800, 7, 1441851, 2883584, 13, 1507387, 2883584, 14, 1572923, 3080192, 7, 1638459, 3080192, 8, 1703995, 3014656, 16, 1769531, 3014656, 17, 1835067, 3080192, 9, 1900603, 3080192, 7, 1966139, 3604480, 17, 2031675, 3604480, 18, 2097211, 2818048, 7, 2162747, 2818048, 8, 2228283, 2818048, 9, 2293819, 2883584, 7, 2359355, 2883584, 7, 2424891, 2883584, 8, 2490427, 2883584, 7, 2555963, 2883584, 8, 2621499, 2883584, 9, 60, 3407872, 7, 65596, 3407872, 8, 131132, 3407872, 9, 196668, 3538944, 7, 262204, 3538944, 8, 327740, 3538944, 9, 393276, 3473408, 7, 458812, 3473408, 8, 524348, 3473408, 9, 589884, 3538944, 7, 655420, 3538944, 8, 720956, 3538944, 9, 786492, 3538944, 7, 852028, 3538944, 8, 917564, 3538944, 9, 983100, 3538944, 7, 1048636, 3538944, 8, 1114172, 3604480, 12, 1179708, 3211264, 7, 1245244, 3211264, 8, 1310780, 3211264, 9, 1376316, 3342336, 7, 1441852, 2949120, 13, 1507388, 2949120, 14, 1572924, 3145728, 7, 1638460, 3145728, 8, 1703996, 3080192, 16, 1769532, 3080192, 17, 1835068, 3145728, 9, 1900604, 3145728, 7, 1966140, 3670016, 17, 2031676, 3670016, 18, 2097212, 2883584, 7, 2162748, 2883584, 8, 2228284, 2883584, 9, 2293820, 2949120, 7, 2359356, 2949120, 7, 2424892, 2949120, 8, 2490428, 2949120, 7, 2555964, 2949120, 8, 2621500, 2949120, 9, 61, 3473408, 7, 65597, 3473408, 8, 131133, 3473408, 9, 196669, 3407872, 7, 262205, 3407872, 8, 327741, 3407872, 9, 393277, 3538944, 7, 458813, 3538944, 8, 524349, 3538944, 9, 589885, 3407872, 7, 655421, 3407872, 8, 720957, 3407872, 9, 786493, 3407872, 7, 852029, 3407872, 8, 917565, 3407872, 9, 983101, 3407872, 7, 1048637, 3407872, 8, 1114173, 3670016, 12, 1179709, 3276800, 7, 1245245, 3276800, 8, 1310781, 3276800, 9, 1376317, 3211264, 7, 1441853, 2818048, 13, 1507389, 2818048, 14, 1572925, 3014656, 7, 1638461, 3014656, 8, 1703997, 3145728, 16, 1769533, 3145728, 17, 1835069, 3014656, 9, 1900605, 3014656, 7, 1966141, 3735552, 17, 2031677, 3735552, 18, 2097213, 2949120, 7, 2162749, 2949120, 8, 2228285, 2949120, 9, 2293821, 2818048, 7, 2359357, 2818048, 7, 2424893, 2818048, 8, 2490429, 2818048, 7, 2555965, 2818048, 8, 2621501, 2818048, 9, 62, 3538944, 7, 65598, 3538944, 8, 131134, 3538944, 9, 196670, 3473408, 7, 262206, 3473408, 8, 327742, 3473408, 9, 393278, 3407872, 9, 458814, 3407872, 8, 524350, 3407872, 9, 589886, 3407872, 7, 655422, 3407872, 8, 720958, 3407872, 9, 786494, 3473408, 7, 852030, 3473408, 8, 917566, 3473408, 9, 983102, 3473408, 7, 1048638, 3473408, 8, 1114174, 3735552, 12, 1179710, 3342336, 7, 1245246, 3342336, 8, 1310782, 3342336, 9, 1376318, 3276800, 7, 1441854, 2883584, 13, 1507390, 2883584, 14, 1572926, 3080192, 7, 1638462, 3080192, 8, 1703998, 3080192, 9, 1769534, 3080192, 8, 1835070, 3080192, 9, 1900606, 3080192, 7, 1966142, 3080192, 8, 2031678, 2949120, 18, 2097214, 2818048, 7, 2162750, 2818048, 8, 2228286, 2818048, 9, 2293822, 2883584, 7, 2359358, 2883584, 7, 2424894, 2883584, 8, 2490430, 2883584, 7, 2555966, 2883584, 8, 2621502, 2883584, 9, 63, 3407872, 7, 65599, 3407872, 8, 131135, 3407872, 9, 196671, 3538944, 7, 262207, 3538944, 8, 327743, 3538944, 9, 393279, 3473408, 9, 458815, 3473408, 8, 524351, 3473408, 9, 589887, 3473408, 7, 655423, 3473408, 8, 720959, 3473408, 9, 786495, 3407872, 7, 852031, 3407872, 8, 917567, 3407872, 9, 983103, 3538944, 7, 1048639, 3538944, 8, 1114175, 2883584, 12, 1179711, 3211264, 7, 1245247, 3211264, 8, 1310783, 3211264, 9, 1376319, 3342336, 7, 1441855, 3211264, 13, 1507391, 3211264, 14, 1572927, 3145728, 7, 1638463, 3145728, 8, 1703999, 3145728, 9, 1769535, 3145728, 8, 1835071, 3145728, 9, 1900607, 3145728, 7, 1966143, 3145728, 8, 2031679, 3014656, 18, 2097215, 2883584, 7, 2162751, 2949120, 9, 2228287, 2949120, 9, 2293823, 2949120, 7, 2359359, 2949120, 7, 2424895, 2949120, 8, 2490431, 2949120, 7, 2555967, 2949120, 8, 2621503, 2949120, 9, 64, 3473408, 7, 65600, 3473408, 8, 131136, 3473408, 9, 196672, 3407872, 7, 262208, 3407872, 8, 327744, 3407872, 9, 393280, 3538944, 9, 458816, 3538944, 8, 524352, 3538944, 9, 589888, 3538944, 7, 655424, 3538944, 8, 720960, 3538944, 9, 786496, 3473408, 7, 852032, 3473408, 8, 917568, 3211264, 10, 983104, 3211264, 11, 1048640, 3407872, 8, 1114176, 2949120, 12, 1179712, 3276800, 7, 1245248, 3276800, 8, 1310784, 3276800, 9, 1376320, 3211264, 7, 1441856, 3276800, 13, 1507392, 3276800, 14, 1572928, 3014656, 7, 1638464, 3014656, 8, 1704000, 3014656, 9, 1769536, 3014656, 8, 1835072, 3014656, 9, 1900608, 3014656, 7, 1966144, 3014656, 8, 2031680, 3080192, 18, 2097216, 2949120, 7, 2162752, 2949120, 8, 2228288, 2949120, 9, 2293824, 2818048, 8, 2359360, 2818048, 7, 2424896, 2818048, 8, 2490432, 2818048, 7, 2555968, 2818048, 8, 2621504, 2818048, 9, 65, 3538944, 7, 65601, 3538944, 8, 131137, 3538944, 9, 196673, 3473408, 7, 262209, 3473408, 8, 327745, 3473408, 9, 393281, 3407872, 7, 458817, 3407872, 8, 524353, 3407872, 9, 589889, 3407872, 7, 655425, 3407872, 8, 720961, 3407872, 9, 786497, 3538944, 7, 852033, 3538944, 8, 917569, 3276800, 10, 983105, 3276800, 11, 1048641, 3473408, 8, 1114177, 3014656, 12, 1179713, 3342336, 7, 1245249, 3342336, 8, 1310785, 3342336, 9, 1376321, 3276800, 7, 1441857, 3342336, 13, 1507393, 3342336, 14, 1572929, 3080192, 7, 1638465, 3080192, 8, 1704001, 3080192, 9, 1769537, 3080192, 8, 1835073, 3080192, 9, 1900609, 3080192, 7, 1966145, 3080192, 8, 2031681, 3145728, 18, 2097217, 2818048, 7, 2162753, 2818048, 8, 2228289, 2818048, 9, 2293825, 2818048, 9, 2359361, 2883584, 7, 2424897, 2883584, 8, 2490433, 2883584, 7, 2555969, 2883584, 8, 2621505, 2883584, 9, 66, 3407872, 7, 65602, 3407872, 8, 131138, 3407872, 9, 196674, 3538944, 7, 262210, 3538944, 8, 327746, 3538944, 9, 393282, 3473408, 7, 458818, 3473408, 8, 524354, 3473408, 9, 589890, 3473408, 7, 655426, 3473408, 8, 720962, 3473408, 9, 786498, 3407872, 7, 852034, 3407872, 8, 917570, 3342336, 10, 983106, 3342336, 11, 1048642, 3538944, 8, 1114178, 3080192, 12, 1179714, 3211264, 7, 1245250, 3211264, 8, 1310786, 3211264, 9, 1376322, 3342336, 7, 1441858, 2818048, 13, 1507394, 2818048, 14, 1572930, 3014656, 7, 1638466, 3014656, 8, 1704002, 3014656, 9, 1769538, 3145728, 8, 1835074, 3145728, 9, 1900610, 3145728, 7, 1966146, 3145728, 8, 2031682, 3211264, 18, 2097218, 2883584, 7, 2162754, 2883584, 8, 2228290, 2883584, 9, 2293826, 2883584, 9, 2359362, 2949120, 7, 2424898, 2949120, 8, 2490434, 2949120, 7, 2555970, 2949120, 8, 2621506, 2949120, 9, 67, 3473408, 7, 65603, 3473408, 8, 131139, 3473408, 9, 196675, 3407872, 7, 262211, 3407872, 8, 327747, 3407872, 9, 393283, 3538944, 7, 458819, 3538944, 8, 524355, 3538944, 9, 589891, 3538944, 7, 655427, 3538944, 8, 720963, 3538944, 9, 786499, 3473408, 7, 852035, 3473408, 8, 917571, 3473408, 9, 983107, 3407872, 7, 1048643, 3407872, 8, 1114179, 3604480, 12, 1179715, 3276800, 7, 1245251, 3276800, 8, 1310787, 3276800, 9, 1376323, 3211264, 7, 1441859, 2883584, 13, 1507395, 2883584, 14, 1572931, 3080192, 7, 1638467, 3080192, 8, 1704003, 3080192, 9, 1769539, 3014656, 8, 1835075, 3014656, 9, 1900611, 3014656, 7, 1966147, 3014656, 8, 2031683, 3276800, 18, 2097219, 2949120, 7, 2162755, 2949120, 8, 2228291, 2949120, 9, 2293827, 2949120, 9, 2359363, 2818048, 7, 2424899, 2818048, 8, 2490435, 2818048, 7, 2555971, 2818048, 8, 2621507, 2818048, 9, 68, 3538944, 7, 65604, 3538944, 8, 131140, 3538944, 9, 196676, 3473408, 7, 262212, 3473408, 8, 327748, 3473408, 9, 393284, 3407872, 7, 458820, 3407872, 8, 524356, 3407872, 9, 589892, 3407872, 7, 655428, 3407872, 8, 720964, 3407872, 9, 786500, 3538944, 7, 852036, 3538944, 8, 917572, 3538944, 9, 983108, 3473408, 7, 1048644, 3473408, 8, 1114180, 3670016, 12, 1179716, 3342336, 7, 1245252, 3342336, 8, 1310788, 3342336, 9, 1376324, 3276800, 7, 1441860, 2949120, 13, 1507396, 2949120, 14, 1572932, 3145728, 7, 1638468, 3145728, 8, 1704004, 3211264, 16, 1769540, 3211264, 17, 1835076, 3080192, 9, 1900612, 3080192, 7, 1966148, 3080192, 8, 2031684, 3342336, 18, 2097220, 2949120, 9, 2162756, 2949120, 9, 2228292, 2949120, 9, 2293828, 2949120, 9, 2359364, 2883584, 7, 2424900, 2883584, 8, 2490436, 2883584, 7, 2555972, 2883584, 8, 2621508, 2883584, 9, 69, 3407872, 7, 65605, 3407872, 8, 131141, 3407872, 9, 196677, 3538944, 7, 262213, 3538944, 8, 327749, 3538944, 9, 393285, 3473408, 7, 458821, 3473408, 8, 524357, 3473408, 9, 589893, 3473408, 7, 655429, 3211264, 10, 720965, 3211264, 11, 786501, 3407872, 7, 852037, 3407872, 8, 917573, 3407872, 9, 983109, 3538944, 7, 1048645, 3538944, 8, 1114181, 3735552, 12, 1179717, 3211264, 7, 1245253, 3211264, 8, 1310789, 3211264, 9, 1376325, 3342336, 7, 1441861, 2818048, 13, 1507397, 2818048, 14, 1572933, 3014656, 7, 1638469, 3014656, 8, 1704005, 3276800, 16, 1769541, 3276800, 17, 1835077, 3145728, 9, 1900613, 3145728, 7, 1966149, 3145728, 8, 2031685, 2818048, 18, 2097221, 2818048, 7, 2162757, 2818048, 8, 2228293, 2818048, 9, 2293829, 2818048, 7, 2359365, 2949120, 7, 2424901, 2949120, 8, 2490437, 2949120, 7, 2555973, 2949120, 8, 2621509, 2949120, 9, 70, 3473408, 7, 65606, 3473408, 8, 131142, 3473408, 9, 196678, 3407872, 7, 262214, 3407872, 8, 327750, 3407872, 9, 393286, 3407872, 9, 458822, 3407872, 8, 524358, 3407872, 9, 589894, 3538944, 7, 655430, 3276800, 10, 720966, 3276800, 11, 786502, 3473408, 7, 852038, 3473408, 8, 917574, 3473408, 9, 983110, 3407872, 7, 1048646, 3407872, 8, 1114182, 2883584, 12, 1179718, 3276800, 7, 1245254, 3276800, 8, 1310790, 3276800, 9, 1376326, 3211264, 7, 1441862, 2883584, 13, 1507398, 2883584, 14, 1572934, 3080192, 7, 1638470, 3080192, 8, 1704006, 3342336, 16, 1769542, 3342336, 17, 1835078, 3014656, 9, 1900614, 3014656, 7, 1966150, 3014656, 8, 2031686, 2883584, 18, 2097222, 2883584, 7, 2162758, 2883584, 8, 2228294, 2883584, 9, 2293830, 2883584, 7, 2359366, 2818048, 7, 2424902, 2818048, 8, 2490438, 2818048, 7, 2555974, 2818048, 8, 2621510, 2818048, 9, 71, 3538944, 7, 65607, 3538944, 8, 131143, 3538944, 9, 196679, 3473408, 7, 262215, 3473408, 8, 327751, 3473408, 9, 393287, 3473408, 9, 458823, 3473408, 8, 524359, 3473408, 9, 589895, 3407872, 7, 655431, 3342336, 10, 720967, 3342336, 11, 786503, 3538944, 7, 852039, 3538944, 8, 917575, 3538944, 9, 983111, 3473408, 7, 1048647, 3473408, 8, 1114183, 2949120, 12, 1179719, 3342336, 7, 1245255, 3342336, 8, 1310791, 3342336, 9, 1376327, 3276800, 7, 1441863, 2949120, 13, 1507399, 2949120, 14, 1572935, 3145728, 7, 1638471, 3145728, 8, 1704007, 3014656, 16, 1769543, 3014656, 17, 1835079, 3080192, 9, 1900615, 3080192, 7, 1966151, 3604480, 17, 2031687, 3604480, 18, 2097223, 2949120, 7, 2162759, 2949120, 8, 2228295, 2949120, 9, 2293831, 2949120, 7, 2359367, 2883584, 7, 2424903, 2883584, 8, 2490439, 2883584, 7, 2555975, 2883584, 8, 2621511, 2883584, 9, 72, 3407872, 8, 65608, 3407872, 9, 131144, 3407872, 9, 196680, 3407872, 8, 262216, 3407872, 9, 327752, 3538944, 9, 393288, 3473408, 7, 458824, 3473408, 8, 524360, 3473408, 9, 589896, 3538944, 7, 655432, 3538944, 8, 720968, 3538944, 9, 786504, 3538944, 7, 852040, 3538944, 8, 917576, 3538944, 9, 983112, 3538944, 7, 1048648, 3538944, 8, 1114184, 3604480, 12, 1179720, 3211264, 7, 1245256, 3211264, 8, 1310792, 3211264, 9, 1376328, 3342336, 7, 1441864, 2949120, 13, 1507400, 2949120, 14, 1572936, 3145728, 7, 1638472, 3145728, 8, 1704008, 3080192, 16, 1769544, 3080192, 17, 1835080, 3145728, 9, 1900616, 3145728, 7, 1966152, 3670016, 17, 2031688, 3670016, 18, 2097224, 2883584, 7, 2162760, 2883584, 8, 2228296, 2883584, 9, 2293832, 2949120, 7, 2359368, 2949120, 7, 2424904, 2949120, 8, 2490440, 2949120, 7, 2555976, 2949120, 8, 2621512, 2949120, 9, 73, 3473408, 8, 65609, 3473408, 9, 131145, 3473408, 9, 196681, 3473408, 8, 262217, 3473408, 9, 327753, 3407872, 9, 393289, 3538944, 7, 458825, 3538944, 8, 524361, 3538944, 9, 589897, 3407872, 7, 655433, 3407872, 8, 720969, 3407872, 9, 786505, 3407872, 7, 852041, 3407872, 8, 917577, 3407872, 9, 983113, 3407872, 7, 1048649, 3407872, 8, 1114185, 3670016, 12, 1179721, 3276800, 7, 1245257, 3276800, 8, 1310793, 3276800, 9, 1376329, 3211264, 7, 1441865, 2818048, 13, 1507401, 2818048, 14, 1572937, 3014656, 7, 1638473, 3014656, 8, 1704009, 3145728, 16, 1769545, 3145728, 17, 1835081, 3014656, 9, 1900617, 3014656, 7, 1966153, 3735552, 17, 2031689, 3735552, 18, 2097225, 2949120, 7, 2162761, 2949120, 8, 2228297, 2949120, 9, 2293833, 2818048, 7, 2359369, 2818048, 7, 2424905, 2818048, 8, 2490441, 2818048, 7, 2555977, 2818048, 8, 2621513, 2818048, 9, 74, 3538944, 8, 65610, 3538944, 9, 131146, 3538944, 9, 196682, 3538944, 8, 262218, 3538944, 9, 327754, 3473408, 9, 393290, 3407872, 9, 458826, 3407872, 8, 524362, 3407872, 9, 589898, 3407872, 7, 655434, 3407872, 8, 720970, 3407872, 9, 786506, 3473408, 7, 852042, 3473408, 8, 917578, 3473408, 9, 983114, 3473408, 7, 1048650, 3473408, 8, 1114186, 3735552, 12, 1179722, 3342336, 7, 1245258, 3342336, 8, 1310794, 3342336, 9, 1376330, 3276800, 7, 1441866, 2883584, 13, 1507402, 2883584, 14, 1572938, 3080192, 7, 1638474, 3080192, 8, 1704010, 3080192, 9, 1769546, 3080192, 8, 1835082, 3080192, 9, 1900618, 3080192, 7, 1966154, 3080192, 8, 2031690, 2949120, 18, 2097226, 2818048, 7, 2162762, 2818048, 8, 2228298, 2818048, 9, 2293834, 2883584, 7, 2359370, 2883584, 7, 2424906, 2883584, 8, 2490442, 2883584, 7, 2555978, 2883584, 8, 2621514, 2883584, 9, 75, 3407872, 8, 65611, 3407872, 7, 131147, 3407872, 8, 196683, 3407872, 9, 262219, 3407872, 9, 327755, 3407872, 9, 393291, 3473408, 9, 458827, 3473408, 8, 524363, 3473408, 9, 589899, 3473408, 7, 655435, 3473408, 8, 720971, 3473408, 9, 786507, 3407872, 7, 852043, 3407872, 8, 917579, 3407872, 9, 983115, 3538944, 7, 1048651, 3538944, 8, 1114187, 2883584, 12, 1179723, 3211264, 7, 1245259, 3211264, 8, 1310795, 3211264, 9, 1376331, 3342336, 7, 1441867, 3211264, 13, 1507403, 3211264, 14, 1572939, 3145728, 7, 1638475, 3145728, 8, 1704011, 3145728, 9, 1769547, 3145728, 8, 1835083, 3145728, 9, 1900619, 3145728, 7, 1966155, 3145728, 8, 2031691, 3014656, 18, 2097227, 2883584, 7, 2162763, 2949120, 9, 2228299, 2949120, 9, 2293835, 2949120, 7, 2359371, 2949120, 7, 2424907, 2949120, 8, 2490443, 2949120, 7, 2555979, 2949120, 8, 2621515, 2949120, 9, 76, 3473408, 8, 65612, 3473408, 7, 131148, 3473408, 8, 196684, 3473408, 9, 262220, 3473408, 9, 327756, 3473408, 9, 393292, 3538944, 9, 458828, 3538944, 8, 524364, 3538944, 9, 589900, 3538944, 7, 655436, 3538944, 8, 720972, 3538944, 9, 786508, 3473408, 7, 852044, 3473408, 8, 917580, 3211264, 10, 983116, 3211264, 11, 1048652, 3407872, 8, 1114188, 2949120, 12, 1179724, 3276800, 7, 1245260, 3276800, 8, 1310796, 3276800, 9, 1376332, 3211264, 7, 1441868, 3276800, 13, 1507404, 3276800, 14, 1572940, 3014656, 7, 1638476, 3014656, 8, 1704012, 3014656, 9, 1769548, 3014656, 8, 1835084, 3014656, 9, 1900620, 3014656, 7, 1966156, 3014656, 8, 2031692, 3080192, 18, 2097228, 2949120, 7, 2162764, 2949120, 8, 2228300, 2949120, 9, 2293836, 2818048, 8, 2359372, 2818048, 7, 2424908, 2818048, 8, 2490444, 2818048, 7, 2555980, 2818048, 8, 2621516, 2818048, 9, 77, 3538944, 8, 65613, 3538944, 7, 131149, 3538944, 8, 196685, 3538944, 9, 262221, 3538944, 9, 327757, 3538944, 9, 393293, 3407872, 7, 458829, 3407872, 8, 524365, 3407872, 9, 589901, 3407872, 7, 655437, 3407872, 8, 720973, 3407872, 9, 786509, 3538944, 7, 852045, 3538944, 8, 917581, 3276800, 10, 983117, 3276800, 11, 1048653, 3473408, 8, 1114189, 3014656, 12, 1179725, 3342336, 7, 1245261, 3342336, 8, 1310797, 3342336, 9, 1376333, 3276800, 7, 1441869, 3342336, 13, 1507405, 3342336, 14, 1572941, 3080192, 7, 1638477, 3080192, 8, 1704013, 3080192, 9, 1769549, 3080192, 8, 1835085, 3080192, 9, 1900621, 3080192, 7, 1966157, 3080192, 8, 2031693, 3145728, 18, 2097229, 2818048, 7, 2162765, 2818048, 8, 2228301, 2818048, 9, 2293837, 2818048, 9, 2359373, 2883584, 7, 2424909, 2883584, 8, 2490445, 2883584, 7, 2555981, 2883584, 8, 2621517, 2883584, 9, 78, 3407872, 8, 65614, 3407872, 7, 131150, 3407872, 8, 196686, 3407872, 9, 262222, 3407872, 9, 327758, 3473408, 9, 393294, 3473408, 7, 458830, 3473408, 8, 524366, 3473408, 9, 589902, 3473408, 7, 655438, 3473408, 8, 720974, 3473408, 9, 786510, 3407872, 7, 852046, 3407872, 8, 917582, 3342336, 10, 983118, 3342336, 11, 1048654, 3538944, 8, 1114190, 3080192, 12, 1179726, 3211264, 7, 1245262, 3211264, 8, 1310798, 3211264, 9, 1376334, 3342336, 7, 1441870, 2818048, 13, 1507406, 2818048, 14, 1572942, 3014656, 7, 1638478, 3014656, 8, 1704014, 3014656, 9, 1769550, 3145728, 8, 1835086, 3145728, 9, 1900622, 3145728, 7, 1966158, 3145728, 8, 2031694, 3211264, 18, 2097230, 2883584, 7, 2162766, 2883584, 8, 2228302, 2883584, 9, 2293838, 2883584, 9, 2359374, 2949120, 7, 2424910, 2949120, 8, 2490446, 2949120, 7, 2555982, 2949120, 8, 2621518, 2949120, 9, 79, 3473408, 8, 65615, 3473408, 7, 131151, 3473408, 8, 196687, 3473408, 9, 262223, 3473408, 9, 327759, 3473408, 9, 393295, 3538944, 7, 458831, 3538944, 8, 524367, 3538944, 9, 589903, 3538944, 7, 655439, 3538944, 8, 720975, 3538944, 9, 786511, 3473408, 7, 852047, 3473408, 8, 917583, 3473408, 9, 983119, 3407872, 7, 1048655, 3407872, 8, 1114191, 3604480, 12, 1179727, 3276800, 7, 1245263, 3276800, 8, 1310799, 3276800, 9, 1376335, 3211264, 7, 1441871, 2883584, 13, 1507407, 2883584, 14, 1572943, 3080192, 7, 1638479, 3080192, 8, 1704015, 3080192, 9, 1769551, 3014656, 8, 1835087, 3014656, 9, 1900623, 3014656, 7, 1966159, 3014656, 8, 2031695, 3276800, 18, 2097231, 2949120, 7, 2162767, 2949120, 8, 2228303, 2949120, 9, 2293839, 2949120, 9, 2359375, 2818048, 7, 2424911, 2818048, 8, 2490447, 2818048, 7, 2555983, 2818048, 8, 2621519, 2818048, 9, 80, 3538944, 8, 65616, 3538944, 7, 131152, 3538944, 8, 196688, 3538944, 9, 262224, 3407872, 8, 327760, 3407872, 9, 393296, 3407872, 7, 458832, 3407872, 8, 524368, 3407872, 9, 589904, 3407872, 7, 655440, 3407872, 8, 720976, 3407872, 9, 786512, 3538944, 7, 852048, 3538944, 8, 917584, 3538944, 9, 983120, 3473408, 7, 1048656, 3473408, 8, 1114192, 3670016, 12, 1179728, 3342336, 7, 1245264, 3342336, 8, 1310800, 3342336, 9, 1376336, 3276800, 7, 1441872, 2949120, 13, 1507408, 2949120, 14, 1572944, 3145728, 7, 1638480, 3145728, 8, 1704016, 3211264, 16, 1769552, 3211264, 17, 1835088, 3080192, 9, 1900624, 3080192, 7, 1966160, 3080192, 8, 2031696, 3342336, 18, 2097232, 2949120, 9, 2162768, 2949120, 9, 2228304, 2949120, 9, 2293840, 2949120, 9, 2359376, 2883584, 7, 2424912, 2883584, 8, 2490448, 2883584, 7, 2555984, 2883584, 8, 2621520, 2883584, 9, 81, 3407872, 8, 65617, 3407872, 7, 131153, 3407872, 8, 196689, 3407872, 9, 262225, 3407872, 7, 327761, 3407872, 8, 393297, 3407872, 9, 458833, 3473408, 8, 524369, 3473408, 9, 589905, 3473408, 7, 655441, 3211264, 10, 720977, 3211264, 11, 786513, 3407872, 7, 852049, 3407872, 8, 917585, 3407872, 9, 983121, 3538944, 7, 1048657, 3538944, 8, 1114193, 3735552, 12, 1179729, 3211264, 7, 1245265, 3211264, 8, 1310801, 3211264, 9, 1376337, 3342336, 7, 1441873, 2818048, 13, 1507409, 2818048, 14, 1572945, 3014656, 7, 1638481, 3014656, 8, 1704017, 3276800, 16, 1769553, 3276800, 17, 1835089, 3145728, 9, 1900625, 3145728, 7, 1966161, 3145728, 8, 2031697, 2818048, 18, 2097233, 2818048, 7, 2162769, 2818048, 8, 2228305, 2818048, 9, 2293841, 2818048, 7, 2359377, 2949120, 7, 2424913, 2949120, 8, 2490449, 2949120, 7, 2555985, 2949120, 8, 2621521, 2949120, 9, 82, 3473408, 8, 65618, 3473408, 7, 131154, 3473408, 8, 196690, 3473408, 9, 262226, 3473408, 7, 327762, 3473408, 8, 393298, 3473408, 9, 458834, 3407872, 8, 524370, 3407872, 9, 589906, 3538944, 7, 655442, 3276800, 10, 720978, 3276800, 11, 786514, 3473408, 7, 852050, 3473408, 8, 917586, 3473408, 9, 983122, 3407872, 7, 1048658, 3407872, 8, 1114194, 2883584, 12, 1179730, 3276800, 7, 1245266, 3276800, 8, 1310802, 3276800, 9, 1376338, 3211264, 7, 1441874, 2883584, 13, 1507410, 2883584, 14, 1572946, 3080192, 7, 1638482, 3080192, 8, 1704018, 3342336, 16, 1769554, 3342336, 17, 1835090, 3014656, 9, 1900626, 3014656, 7, 1966162, 3014656, 8, 2031698, 2883584, 18, 2097234, 2883584, 7, 2162770, 2883584, 8, 2228306, 2883584, 9, 2293842, 2883584, 7, 2359378, 2818048, 7, 2424914, 2818048, 8, 2490450, 2818048, 7, 2555986, 2818048, 8, 2621522, 2818048, 9, 83, 3538944, 8, 65619, 3538944, 7, 131155, 3538944, 8, 196691, 3538944, 9, 262227, 3538944, 7, 327763, 3538944, 8, 393299, 3538944, 9, 458835, 3473408, 8, 524371, 3473408, 9, 589907, 3407872, 7, 655443, 3342336, 10, 720979, 3342336, 11, 786515, 3538944, 7, 852051, 3538944, 8, 917587, 3538944, 9, 983123, 3473408, 7, 1048659, 3473408, 8, 1114195, 2949120, 12, 1179731, 3342336, 7, 1245267, 3342336, 8, 1310803, 3342336, 9, 1376339, 3276800, 7, 1441875, 2949120, 13, 1507411, 2949120, 14, 1572947, 3145728, 7, 1638483, 3145728, 8, 1704019, 3145728, 9, 1769555, 3080192, 8, 1835091, 3080192, 9, 1900627, 3080192, 7, 1966163, 3080192, 8, 2031699, 2949120, 18, 2097235, 2949120, 7, 2162771, 2949120, 8, 2228307, 2949120, 9, 2293843, 2949120, 7, 2359379, 2883584, 7, 2424915, 2883584, 8, 2490451, 2883584, 7, 2555987, 2883584, 8, 2621523, 2883584, 9, 84, 3407872, 7, 65620, 3407872, 7, 131156, 3407872, 8, 196692, 3407872, 9, 262228, 3407872, 7, 327764, 3407872, 8, 393300, 3407872, 9, 458836, 3473408, 8, 524372, 3407872, 9, 589908, 3538944, 7, 655444, 3538944, 8, 720980, 3538944, 9, 786516, 3473408, 7, 852052, 3473408, 8, 917588, 3473408, 9, 983124, 3407872, 7, 1048660, 3407872, 8, 1114196, 3080192, 12, 1179732, 3276800, 7, 1245268, 3276800, 8, 1310804, 3276800, 9, 1376340, 3211264, 7, 1441876, 2883584, 13, 1507412, 2883584, 14, 1572948, 3080192, 7, 1638484, 3080192, 8, 1704020, 3080192, 9, 1769556, 3014656, 8, 1835092, 3014656, 9, 1900628, 3080192, 9, 1966164, 3080192, 9, 2031700, 3080192, 18, 2097236, 2883584, 7, 2162772, 2883584, 8, 2228308, 2883584, 9, 2293844, 2883584, 7, 2359380, 2818048, 7, 2424916, 2818048, 8, 2490452, 2818048, 7, 2555988, 2818048, 8, 2621524, 2818048, 9, 85, 3473408, 7, 65621, 3473408, 7, 131157, 3473408, 8, 196693, 3473408, 9, 262229, 3473408, 7, 327765, 3473408, 8, 393301, 3473408, 9, 458837, 3538944, 8, 524373, 3538944, 9, 589909, 3407872, 7, 655445, 3407872, 8, 720981, 3407872, 9, 786517, 3538944, 7, 852053, 3538944, 8, 917589, 3538944, 9, 983125, 3473408, 7, 1048661, 3473408, 8, 1114197, 3145728, 12, 1179733, 3342336, 7, 1245269, 3342336, 8, 1310805, 3342336, 9, 1376341, 3276800, 7, 1441877, 2818048, 13, 1507413, 2818048, 14, 1572949, 3145728, 7, 1638485, 3145728, 8, 1704021, 3145728, 9, 1769557, 3080192, 8, 1835093, 3080192, 9, 1900629, 3080192, 9, 1966165, 3080192, 9, 2031701, 3145728, 18, 2097237, 2949120, 7, 2162773, 2949120, 8, 2228309, 2949120, 9, 2293845, 2949120, 7, 2359381, 2883584, 7, 2424917, 2883584, 8, 2490453, 2883584, 7, 2555989, 2883584, 8, 2621525, 2883584, 9, 86, 3538944, 7, 65622, 3538944, 7, 131158, 3538944, 8, 196694, 3538944, 9, 262230, 3538944, 7, 327766, 3538944, 8, 393302, 3538944, 9, 458838, 3407872, 8, 524374, 3407872, 9, 589910, 3473408, 7, 655446, 3473408, 8, 720982, 3473408, 9, 786518, 3407872, 7, 852054, 3407872, 8, 917590, 3407872, 9, 983126, 3538944, 7, 1048662, 3538944, 8, 1114198, 3211264, 12, 1179734, 3211264, 7, 1245270, 3211264, 8, 1310806, 3211264, 9, 1376342, 3342336, 7, 1441878, 2883584, 13, 1507414, 2883584, 14, 1572950, 3014656, 7, 1638486, 3014656, 8, 1704022, 3014656, 9, 1769558, 3145728, 8, 1835094, 3145728, 9, 1900630, 3080192, 9, 1966166, 3080192, 9, 2031702, 3211264, 18, 2097238, 2818048, 7, 2162774, 2818048, 8, 2228310, 2818048, 9, 2293846, 2818048, 7, 2359382, 2949120, 7, 2424918, 2949120, 8, 2490454, 2949120, 7, 2555990, 2949120, 8, 2621526, 2949120, 9, 87, 3407872, 7, 65623, 3407872, 7, 131159, 3407872, 8, 196695, 3407872, 9, 262231, 3407872, 7, 327767, 3407872, 8, 393303, 3407872, 9, 458839, 3473408, 8, 524375, 3473408, 9, 589911, 3538944, 7, 655447, 3538944, 8, 720983, 3538944, 9, 786519, 3473408, 7, 852055, 3473408, 8, 917591, 3473408, 9, 983127, 3407872, 7, 1048663, 3407872, 8, 1114199, 3276800, 12, 1179735, 3276800, 7, 1245271, 3276800, 8, 1310807, 3276800, 9, 1376343, 3211264, 7, 1441879, 2949120, 13, 1507415, 2949120, 14, 1572951, 3080192, 7, 1638487, 3080192, 8, 1704023, 3080192, 9, 1769559, 3014656, 8, 1835095, 3014656, 9, 1900631, 3080192, 9, 1966167, 3080192, 9, 2031703, 3276800, 18, 2097239, 2883584, 7, 2162775, 2883584, 8, 2228311, 2883584, 9, 2293847, 2883584, 7, 2359383, 2818048, 7, 2424919, 2818048, 8, 2490455, 2818048, 7, 2555991, 2818048, 8, 2621527, 2818048, 9, 88, 3473408, 7, 65624, 3473408, 7, 131160, 3473408, 8, 196696, 3473408, 9, 262232, 3473408, 7, 327768, 3473408, 8, 393304, 3473408, 9, 458840, 3538944, 8, 524376, 3538944, 9, 589912, 3407872, 8, 655448, 3407872, 9, 720984, 3407872, 8, 786520, 3407872, 9, 852056, 3538944, 8, 917592, 3538944, 9, 983128, 3473408, 7, 1048664, 3473408, 8, 1114200, 3342336, 12, 1179736, 3342336, 7, 1245272, 3342336, 8, 1310808, 3342336, 9, 1376344, 3276800, 7, 1441880, 2818048, 13, 1507416, 2818048, 14, 1572952, 3145728, 7, 1638488, 3145728, 8, 1704024, 3145728, 9, 1769560, 3080192, 8, 1835096, 3080192, 9, 1900632, 3080192, 9, 1966168, 3080192, 9, 2031704, 3342336, 18, 2097240, 2949120, 7, 2162776, 2949120, 8, 2228312, 2949120, 9, 2293848, 2949120, 7, 2359384, 2883584, 7, 2424920, 2883584, 8, 2490456, 2883584, 7, 2555992, 2883584, 8, 2621528, 2883584, 9, 89, 3538944, 7, 65625, 3538944, 7, 131161, 3538944, 8, 196697, 3538944, 9, 262233, 3538944, 7, 327769, 3538944, 8, 393305, 3538944, 9, 458841, 3407872, 8, 524377, 3407872, 9, 589913, 3473408, 8, 655449, 3473408, 9, 720985, 3473408, 8, 786521, 3473408, 9, 852057, 3407872, 8, 917593, 3407872, 9, 983129, 3538944, 7, 1048665, 3538944, 8, 1114201, 3407872, 12, 1179737, 3211264, 7, 1245273, 3211264, 8, 1310809, 3211264, 9, 1376345, 3342336, 7, 1441881, 2883584, 13, 1507417, 2883584, 14, 1572953, 3014656, 7, 1638489, 3014656, 8, 1704025, 3014656, 9, 1769561, 3145728, 8, 1835097, 3145728, 9, 1900633, 3080192, 9, 1966169, 3080192, 9, 2031705, 3407872, 18, 2097241, 2818048, 7, 2162777, 2818048, 8, 2228313, 2818048, 9, 2293849, 2818048, 7, 2359385, 2949120, 7, 2424921, 2949120, 8, 2490457, 2949120, 7, 2555993, 2949120, 8, 2621529, 2949120, 9, 90, 3407872, 7, 65626, 3407872, 7, 131162, 3407872, 8, 196698, 3407872, 9, 262234, 3407872, 8, 327770, 3407872, 9, 393306, 3473408, 7, 458842, 3473408, 8, 524378, 3473408, 9, 589914, 3538944, 8, 655450, 3538944, 9, 720986, 3538944, 8, 786522, 3538944, 9, 852058, 3473408, 8, 917594, 3473408, 9, 983130, 3407872, 7, 1048666, 3407872, 8, 1114202, 3473408, 12, 1179738, 3276800, 7, 1245274, 3276800, 8, 1310810, 3276800, 9, 1376346, 3211264, 7, 1441882, 2949120, 13, 1507418, 3407872, 14, 1572954, 3080192, 7, 1638490, 3080192, 8, 1704026, 3080192, 9, 1769562, 3014656, 8, 1835098, 3014656, 9, 1900634, 3080192, 9, 1966170, 3080192, 9, 2031706, 3473408, 18, 2097242, 2883584, 7, 2162778, 2883584, 8, 2228314, 2883584, 9, 2293850, 2883584, 7, 2359386, 2818048, 7, 2424922, 2818048, 8, 2490458, 2818048, 7, 2555994, 2818048, 8, 2621530, 2818048, 9, 91, 3473408, 7, 65627, 3473408, 7, 131163, 3473408, 8, 196699, 3473408, 9, 262235, 3473408, 8, 327771, 3473408, 9, 393307, 3538944, 7, 458843, 3538944, 8, 524379, 3538944, 9, 589915, 3473408, 7, 655451, 3473408, 8, 720987, 3473408, 9, 786523, 3538944, 7, 852059, 3538944, 8, 917595, 3538944, 9, 983131, 3473408, 7, 1048667, 3473408, 8, 1114203, 3538944, 12, 1179739, 3342336, 7, 1245275, 3342336, 8, 1310811, 3342336, 9, 1376347, 3276800, 7, 1441883, 3473408, 13, 1507419, 3473408, 14, 1572955, 3145728, 7, 1638491, 3145728, 8, 1704027, 3145728, 9, 1769563, 3080192, 8, 1835099, 3080192, 9, 1900635, 3080192, 9, 1966171, 3080192, 9, 2031707, 3538944, 18, 2097243, 2949120, 7, 2162779, 2949120, 8, 2228315, 2949120, 9, 2293851, 2949120, 7, 2359387, 2883584, 7, 2424923, 2883584, 8, 2490459, 2883584, 7, 2555995, 2883584, 8, 2621531, 2883584, 9, 92, 3538944, 7, 65628, 3538944, 7, 131164, 3538944, 8, 196700, 3538944, 9, 262236, 3407872, 9, 327772, 3538944, 9, 393308, 3407872, 7, 458844, 3407872, 8, 524380, 3407872, 9, 589916, 3538944, 7, 655452, 3538944, 8, 720988, 3538944, 9, 786524, 3407872, 7, 852060, 3407872, 8, 917596, 3407872, 9, 983132, 3538944, 7, 1048668, 3538944, 8, 1114204, 3604480, 12, 1179740, 3211264, 7, 1245276, 3211264, 8, 1310812, 3211264, 9, 1376348, 3342336, 7, 1441884, 3538944, 13, 1507420, 3538944, 14, 1572956, 3211264, 16, 1638492, 3211264, 17, 1704028, 3014656, 9, 1769564, 3145728, 8, 1835100, 3145728, 9, 1900636, 3080192, 9, 1966172, 3604480, 17, 2031708, 3604480, 18, 2097244, 2818048, 7, 2162780, 2818048, 8, 2228316, 2818048, 9, 2293852, 2818048, 7, 2359388, 2949120, 7, 2424924, 2949120, 8, 2490460, 2949120, 7, 2555996, 2949120, 8, 2621532, 2949120, 9, 93, 3407872, 7, 65629, 3407872, 7, 131165, 3407872, 8, 196701, 3407872, 9, 262237, 3473408, 9, 327773, 3538944, 10, 393309, 3407872, 7, 458845, 3407872, 8, 524381, 3407872, 9, 589917, 3407872, 7, 655453, 3407872, 8, 720989, 3407872, 9, 786525, 3473408, 7, 852061, 3473408, 8, 917597, 3473408, 9, 983133, 3407872, 7, 1048669, 3407872, 8, 1114205, 3670016, 12, 1179741, 3211264, 7, 1245277, 3211264, 8, 1310813, 3211264, 9, 1376349, 3211264, 7, 1441885, 3604480, 13, 1507421, 3604480, 14, 1572957, 3276800, 16, 1638493, 3276800, 17, 1704029, 3014656, 9, 1769565, 3014656, 8, 1835101, 3014656, 9, 1900637, 3080192, 9, 1966173, 3670016, 17, 2031709, 3670016, 18, 2097245, 2818048, 7, 2162781, 2818048, 8, 2228317, 2818048, 9, 2293853, 2818048, 7, 2359389, 2818048, 7, 2424925, 2818048, 8, 2490461, 2818048, 7, 2555997, 2818048, 8, 2621533, 2818048, 9, 94, 3473408, 7, 65630, 3473408, 7, 131166, 3473408, 8, 196702, 3473408, 9, 262238, 3538944, 9, 327774, 3538944, 10, 393310, 3473408, 7, 458846, 3473408, 8, 524382, 3473408, 9, 589918, 3473408, 7, 655454, 3473408, 8, 720990, 3473408, 9, 786526, 3538944, 7, 852062, 3538944, 8, 917598, 3538944, 9, 983134, 3473408, 7, 1048670, 3473408, 8, 1114206, 3735552, 12, 1179742, 3276800, 7, 1245278, 3276800, 8, 1310814, 3276800, 9, 1376350, 3276800, 7, 1441886, 3670016, 13, 1507422, 3670016, 14, 1572958, 3342336, 16, 1638494, 3342336, 17, 1704030, 3080192, 9, 1769566, 3080192, 8, 1835102, 3080192, 9, 1900638, 3080192, 9, 1966174, 3735552, 17, 2031710, 3735552, 18, 2097246, 2883584, 7, 2162782, 2883584, 8, 2228318, 2883584, 9, 2293854, 2883584, 7, 2359390, 2883584, 7, 2424926, 2883584, 8, 2490462, 2883584, 7, 2555998, 2883584, 8, 2621534, 2883584, 9, 95, 3538944, 7, 65631, 3538944, 7, 131167, 3538944, 8, 196703, 3538944, 9, 262239, 3407872, 9, 327775, 3538944, 10, 393311, 3538944, 7, 458847, 3538944, 8, 524383, 3538944, 9, 589919, 3538944, 7, 655455, 3538944, 8, 720991, 3538944, 9, 786527, 3538944, 7, 852063, 3538944, 8, 917599, 3538944, 9, 983135, 3538944, 7, 1048671, 3538944, 8, 1114207, 3342336, 12, 1179743, 3342336, 7, 1245279, 3342336, 8, 1310815, 3342336, 9, 1376351, 3342336, 7, 1441887, 3735552, 13, 1507423, 3735552, 14, 1572959, 3145728, 7, 1638495, 3145728, 8, 1704031, 3145728, 9, 1769567, 3145728, 8, 1835103, 3145728, 9, 1900639, 3080192, 9, 1966175, 3080192, 9, 2031711, 2949120, 18, 2097247, 2949120, 7, 2162783, 2949120, 8, 2228319, 2949120, 9, 2293855, 2949120, 7, 2359391, 2949120, 7, 2424927, 2949120, 8, 2490463, 2949120, 7, 2555999, 2949120, 8, 2621535, 2949120, 9, 96, 3407872, 7, 65632, 3407872, 7, 131168, 3407872, 8, 196704, 3407872, 9, 262240, 3473408, 9, 327776, 3407872, 9, 393312, 3538944, 7, 458848, 3538944, 8, 524384, 3538944, 9, 589920, 3407872, 7, 655456, 3407872, 8, 720992, 3407872, 9, 786528, 3407872, 7, 852064, 3407872, 8, 917600, 3407872, 9, 983136, 3407872, 7, 1048672, 3407872, 8, 1114208, 2883584, 12, 1179744, 3276800, 7, 1245280, 3276800, 8, 1310816, 3276800, 9, 1376352, 3211264, 7, 1441888, 3211264, 13, 1507424, 3211264, 14, 1572960, 3211264, 16, 1638496, 3211264, 17, 1704032, 3014656, 9, 1769568, 3014656, 8, 1835104, 3014656, 9, 1900640, 3014656, 7, 1966176, 3014656, 8, 2031712, 3211264, 18, 2097248, 2949120, 7, 2162784, 2949120, 8, 2228320, 2949120, 9, 2293856, 2818048, 7, 2359392, 2818048, 7, 2424928, 2818048, 8, 2490464, 2818048, 7, 2556000, 2818048, 8, 2621536, 2818048, 9, 97, 3473408, 7, 65633, 3473408, 7, 131169, 3473408, 8, 196705, 3473408, 9, 262241, 3538944, 9, 327777, 3473408, 9, 393313, 3407872, 7, 458849, 3407872, 8, 524385, 3407872, 9, 589921, 3473408, 7, 655457, 3473408, 8, 720993, 3473408, 9, 786529, 3473408, 7, 852065, 3473408, 8, 917601, 3473408, 9, 983137, 3473408, 7, 1048673, 3473408, 8, 1114209, 2949120, 12, 1179745, 3342336, 7, 1245281, 3342336, 8, 1310817, 3342336, 9, 1376353, 3276800, 7, 1441889, 3276800, 13, 1507425, 3276800, 14, 1572961, 3276800, 16, 1638497, 3276800, 17, 1704033, 3080192, 9, 1769569, 3080192, 8, 1835105, 3080192, 9, 1900641, 3080192, 7, 1966177, 3080192, 8, 2031713, 3342336, 18, 2097249, 2818048, 7, 2162785, 2818048, 8, 2228321, 2818048, 9, 2293857, 2883584, 7, 2359393, 2883584, 7, 2424929, 2883584, 8, 2490465, 2883584, 7, 2556001, 2883584, 8, 2621537, 2883584, 9, 98, 3407872, 7, 65634, 3538944, 7, 131170, 3538944, 8, 196706, 3538944, 9, 262242, 3538944, 8, 327778, 3538944, 9, 393314, 3473408, 7, 458850, 3473408, 8, 524386, 3473408, 9, 589922, 3538944, 7, 655458, 3538944, 8, 720994, 3211264, 10, 786530, 3211264, 11, 852066, 3538944, 8, 917602, 3538944, 9, 983138, 3538944, 7, 1048674, 3538944, 8, 1114210, 3014656, 12, 1179746, 3211264, 7, 1245282, 3211264, 8, 1310818, 3211264, 9, 1376354, 3342336, 7, 1441890, 3342336, 13, 1507426, 3342336, 14, 1572962, 3342336, 16, 1638498, 3342336, 17, 1704034, 3145728, 9, 1769570, 3145728, 8, 1835106, 3145728, 9, 1900642, 3145728, 7, 1966178, 3145728, 8, 2031714, 3342336, 18, 2097250, 2883584, 7, 2162786, 2883584, 8, 2228322, 2883584, 9, 2293858, 2949120, 7, 2359394, 2949120, 7, 2424930, 2949120, 8, 2490466, 2949120, 7, 2556002, 2949120, 8, 2621538, 2949120, 9, 99, 3473408, 7, 65635, 3407872, 7, 131171, 3407872, 8, 196707, 3407872, 9, 262243, 3407872, 8, 327779, 3407872, 9, 393315, 3538944, 7, 458851, 3538944, 8, 524387, 3538944, 9, 589923, 3407872, 7, 655459, 3407872, 8, 720995, 3276800, 10, 786531, 3276800, 11, 852067, 3407872, 8, 917603, 3407872, 9, 983139, 3407872, 7, 1048675, 3407872, 8, 1114211, 3080192, 12, 1179747, 3276800, 7, 1245283, 3276800, 8, 1310819, 3276800, 9, 1376355, 3211264, 7, 1441891, 2818048, 13, 1507427, 2818048, 14, 1572963, 3014656, 7, 1638499, 3014656, 8, 1704035, 3014656, 9, 1769571, 3014656, 8, 1835107, 3014656, 9, 1900643, 3014656, 7, 1966179, 3014656, 8, 2031715, 3342336, 18, 2097251, 2949120, 7, 2162787, 2949120, 8, 2228323, 2949120, 9, 2293859, 2818048, 7, 2359395, 2818048, 7, 2424931, 2818048, 8, 2490467, 2818048, 7, 2556003, 2818048, 8, 2621539, 2818048, 9, 100, 3538944, 7, 65636, 3473408, 7, 131172, 3473408, 8, 196708, 3473408, 9, 262244, 3473408, 8, 327780, 3473408, 9, 393316, 3407872, 7, 458852, 3407872, 8, 524388, 3407872, 9, 589924, 3473408, 7, 655460, 3473408, 8, 720996, 3342336, 10, 786532, 3342336, 11, 852068, 3473408, 8, 917604, 3473408, 9, 983140, 3473408, 7, 1048676, 3473408, 8, 1114212, 3145728, 12, 1179748, 3342336, 7, 1245284, 3342336, 8, 1310820, 3342336, 9, 1376356, 3276800, 7, 1441892, 2883584, 13, 1507428, 2883584, 14, 1572964, 3080192, 7, 1638500, 3080192, 8, 1704036, 3080192, 9, 1769572, 3080192, 8, 1835108, 3080192, 9, 1900644, 3080192, 7, 1966180, 3080192, 8, 2031716, 3342336, 18, 2097252, 2818048, 7, 2162788, 2818048, 8, 2228324, 2818048, 9, 2293860, 2883584, 7, 2359396, 2883584, 7, 2424932, 2883584, 8, 2490468, 2883584, 7, 2556004, 2883584, 8, 2621540, 2883584, 9, 101, 3407872, 7, 65637, 3538944, 7, 131173, 3538944, 8, 196709, 3538944, 9, 262245, 3538944, 8, 327781, 3538944, 9, 393317, 3473408, 7, 458853, 3473408, 8, 524389, 3473408, 9, 589925, 3538944, 7, 655461, 3538944, 8, 720997, 3538944, 9, 786533, 3538944, 7, 852069, 3538944, 8, 917605, 3538944, 9, 983141, 3538944, 7, 1048677, 3538944, 8, 1114213, 3211264, 12, 1179749, 3211264, 7, 1245285, 3211264, 8, 1310821, 3211264, 9, 1376357, 3342336, 7, 1441893, 2949120, 13, 1507429, 2949120, 14, 1572965, 3145728, 7, 1638501, 3145728, 8, 1704037, 3145728, 9, 1769573, 3145728, 8, 1835109, 3145728, 9, 1900645, 3145728, 7, 1966181, 3145728, 8, 2031717, 3342336, 18, 2097253, 2883584, 7, 2162789, 2883584, 8, 2228325, 2949120, 9, 2293861, 2949120, 7, 2359397, 2949120, 7, 2424933, 2949120, 8, 2490469, 2949120, 7, 2556005, 2949120, 8, 2621541, 2949120, 9, 102, 3473408, 7, 65638, 3473408, 8, 131174, 3473408, 9, 196710, 3407872, 7, 262246, 3407872, 8, 327782, 3407872, 9, 393318, 3538944, 7, 458854, 3538944, 8, 524390, 3538944, 9, 589926, 3407872, 7, 655462, 3407872, 8, 720998, 3407872, 9, 786534, 3407872, 7, 852070, 3407872, 8, 917606, 3407872, 9, 983142, 3407872, 7, 1048678, 3407872, 8, 1114214, 3276800, 12, 1179750, 3276800, 7, 1245286, 3276800, 8, 1310822, 3276800, 9, 1376358, 3211264, 7, 1441894, 3604480, 13, 1507430, 3604480, 14, 1572966, 3014656, 7, 1638502, 3014656, 8, 1704038, 3014656, 9, 1769574, 3014656, 8, 1835110, 3014656, 9, 1900646, 3014656, 7, 1966182, 3014656, 8, 2031718, 3342336, 18, 2097254, 2949120, 7, 2162790, 2949120, 8, 2228326, 2949120, 9, 2293862, 2818048, 7, 2359398, 2818048, 7, 2424934, 2818048, 8, 2490470, 2818048, 7, 2556006, 2818048, 8, 2621542, 2818048, 9, 103, 3538944, 7, 65639, 3538944, 8, 131175, 3538944, 9, 196711, 3473408, 7, 262247, 3473408, 8, 327783, 3473408, 9, 393319, 3407872, 7, 458855, 3407872, 8, 524391, 3407872, 9, 589927, 3473408, 7, 655463, 3473408, 8, 720999, 3473408, 9, 786535, 3473408, 7, 852071, 3473408, 8, 917607, 3473408, 9, 983143, 3473408, 7, 1048679, 3473408, 8, 1114215, 3342336, 12, 1179751, 3342336, 7, 1245287, 3342336, 8, 1310823, 3342336, 9, 1376359, 3276800, 7, 1441895, 3670016, 13, 1507431, 3670016, 14, 1572967, 3080192, 7, 1638503, 3080192, 8, 1704039, 3080192, 9, 1769575, 3080192, 8, 1835111, 3080192, 9, 1900647, 3080192, 7, 1966183, 3080192, 8, 2031719, 3407872, 18, 2097255, 2818048, 7, 2162791, 2818048, 8, 2228327, 2818048, 9, 2293863, 2883584, 7, 2359399, 2883584, 7, 2424935, 2883584, 8, 2490471, 2883584, 7, 2556007, 2883584, 8, 2621543, 2883584, 9, 104, 3407872, 7, 65640, 3407872, 8, 131176, 3407872, 9, 196712, 3538944, 7, 262248, 3538944, 8, 327784, 3538944, 9, 393320, 3473408, 7, 458856, 3473408, 8, 524392, 3473408, 9, 589928, 3538944, 7, 655464, 3538944, 8, 721000, 3538944, 9, 786536, 3538944, 7, 852072, 3538944, 8, 917608, 3538944, 9, 983144, 3538944, 7, 1048680, 3538944, 8, 1114216, 3407872, 12, 1179752, 3211264, 7, 1245288, 3211264, 8, 1310824, 3211264, 9, 1376360, 3342336, 7, 1441896, 3735552, 13, 1507432, 3735552, 14, 1572968, 3145728, 7, 1638504, 3145728, 8, 1704040, 3145728, 9, 1769576, 3145728, 8, 1835112, 3145728, 9, 1900648, 3145728, 7, 1966184, 3145728, 8, 2031720, 3473408, 18, 2097256, 2883584, 7, 2162792, 2883584, 8, 2228328, 2883584, 9, 2293864, 2949120, 7, 2359400, 2949120, 7, 2424936, 2949120, 8, 2490472, 2949120, 7, 2556008, 2949120, 8, 2621544, 2949120, 9, 105, 3473408, 7, 65641, 3473408, 8, 131177, 3473408, 9, 196713, 3407872, 7, 262249, 3407872, 8, 327785, 3407872, 9, 393321, 3538944, 7, 458857, 3538944, 8, 524393, 3538944, 9, 589929, 3407872, 7, 655465, 3407872, 8, 721001, 3407872, 9, 786537, 3407872, 7, 852073, 3407872, 8, 917609, 3407872, 9, 983145, 3407872, 7, 1048681, 3407872, 8, 1114217, 3473408, 12, 1179753, 3276800, 7, 1245289, 3276800, 8, 1310825, 3276800, 9, 1376361, 3211264, 7, 1441897, 2818048, 13, 1507433, 2818048, 14, 1572969, 3014656, 7, 1638505, 3014656, 8, 1704041, 2949120, 16, 1769577, 2949120, 17, 1835113, 3014656, 9, 1900649, 3014656, 7, 1966185, 3014656, 8, 2031721, 3538944, 18, 2097257, 2949120, 7, 2162793, 2949120, 8, 2228329, 2949120, 9, 2293865, 2818048, 7, 2359401, 2818048, 7, 2424937, 2818048, 8, 2490473, 2818048, 7, 2556009, 2818048, 8, 2621545, 2818048, 9, 106, 3538944, 7, 65642, 3538944, 8, 131178, 3538944, 9, 196714, 3473408, 7, 262250, 3473408, 8, 327786, 3473408, 9, 393322, 3407872, 7, 458858, 3407872, 8, 524394, 3407872, 9, 589930, 3473408, 7, 655466, 3473408, 8, 721002, 3473408, 9, 786538, 3473408, 7, 852074, 3473408, 8, 917610, 3473408, 9, 983146, 3473408, 7, 1048682, 3473408, 8, 1114218, 3538944, 12, 1179754, 3342336, 7, 1245290, 3342336, 8, 1310826, 3342336, 9, 1376362, 3276800, 7, 1441898, 2883584, 13, 1507434, 2883584, 14, 1572970, 3080192, 7, 1638506, 3080192, 8, 1704042, 3014656, 16, 1769578, 3014656, 17, 1835114, 3080192, 9, 1900650, 3080192, 7, 1966186, 3604480, 17, 2031722, 3604480, 18, 2097258, 2818048, 7, 2162794, 2818048, 8, 2228330, 2818048, 9, 2293866, 2883584, 7, 2359402, 2883584, 7, 2424938, 2883584, 8, 2490474, 2883584, 7, 2556010, 2883584, 8, 2621546, 2883584, 9, 107, 3407872, 7, 65643, 3407872, 8, 131179, 3407872, 9, 196715, 3538944, 7, 262251, 3538944, 8, 327787, 3538944, 9, 393323, 3473408, 7, 458859, 3473408, 8, 524395, 3473408, 9, 589931, 3538944, 7, 655467, 3538944, 8, 721003, 3538944, 9, 786539, 3538944, 7, 852075, 3538944, 8, 917611, 3538944, 9, 983147, 3538944, 7, 1048683, 3538944, 8, 1114219, 3604480, 12, 1179755, 3211264, 7, 1245291, 3211264, 8, 1310827, 3211264, 9, 1376363, 3342336, 7, 1441899, 2949120, 13, 1507435, 2949120, 14, 1572971, 3145728, 7, 1638507, 3145728, 8, 1704043, 3080192, 16, 1769579, 3080192, 17, 1835115, 3145728, 9, 1900651, 3145728, 7, 1966187, 3670016, 17, 2031723, 3670016, 18, 2097259, 2883584, 7, 2162795, 2883584, 8, 2228331, 2883584, 9, 2293867, 2949120, 7, 2359403, 2949120, 7, 2424939, 2949120, 8, 2490475, 2949120, 7, 2556011, 2949120, 8, 2621547, 2949120, 9, 108, 3473408, 7, 65644, 3473408, 8, 131180, 3473408, 9, 196716, 3407872, 7, 262252, 3407872, 8, 327788, 3407872, 9, 393324, 3538944, 7, 458860, 3538944, 8, 524396, 3538944, 9, 589932, 3407872, 7, 655468, 3407872, 8, 721004, 3407872, 9, 786540, 3407872, 7, 852076, 3407872, 8, 917612, 3407872, 9, 983148, 3407872, 7, 1048684, 3407872, 8, 1114220, 3670016, 12, 1179756, 3276800, 7, 1245292, 3276800, 8, 1310828, 3276800, 9, 1376364, 3211264, 7, 1441900, 2818048, 13, 1507436, 2818048, 14, 1572972, 3014656, 7, 1638508, 3014656, 8, 1704044, 3145728, 16, 1769580, 3145728, 17, 1835116, 3014656, 9, 1900652, 3014656, 7, 1966188, 3735552, 17, 2031724, 3735552, 18, 2097260, 2949120, 7, 2162796, 2949120, 8, 2228332, 2949120, 9, 2293868, 2818048, 7, 2359404, 2818048, 7, 2424940, 2818048, 8, 2490476, 2818048, 7, 2556012, 2818048, 8, 2621548, 2818048, 9, 109, 3538944, 7, 65645, 3538944, 8, 131181, 3538944, 9, 196717, 3473408, 7, 262253, 3473408, 8, 327789, 3473408, 9, 393325, 3407872, 9, 458861, 3407872, 8, 524397, 3407872, 9, 589933, 3407872, 7, 655469, 3407872, 8, 721005, 3407872, 9, 786541, 3473408, 7, 852077, 3473408, 8, 917613, 3473408, 9, 983149, 3473408, 7, 1048685, 3473408, 8, 1114221, 3735552, 12, 1179757, 3342336, 7, 1245293, 3342336, 8, 1310829, 3342336, 9, 1376365, 3276800, 7, 1441901, 2883584, 13, 1507437, 2883584, 14, 1572973, 3080192, 7, 1638509, 3080192, 8, 1704045, 3080192, 9, 1769581, 3080192, 8, 1835117, 3080192, 9, 1900653, 3080192, 7, 1966189, 3080192, 8, 2031725, 2949120, 18, 2097261, 2818048, 7, 2162797, 2818048, 8, 2228333, 2818048, 9, 2293869, 2883584, 7, 2359405, 2883584, 7, 2424941, 2883584, 8, 2490477, 2883584, 7, 2556013, 2883584, 8, 2621549, 2883584, 9, 110, 3407872, 7, 65646, 3407872, 8, 131182, 3407872, 9, 196718, 3538944, 7, 262254, 3538944, 8, 327790, 3538944, 9, 393326, 3473408, 9, 458862, 3473408, 8, 524398, 3473408, 9, 589934, 3473408, 7, 655470, 3473408, 8, 721006, 3473408, 9, 786542, 3407872, 7, 852078, 3407872, 8, 917614, 3407872, 9, 983150, 3538944, 7, 1048686, 3538944, 8, 1114222, 2883584, 12, 1179758, 3211264, 7, 1245294, 3211264, 8, 1310830, 3211264, 9, 1376366, 3342336, 7, 1441902, 3211264, 13, 1507438, 3211264, 14, 1572974, 3145728, 7, 1638510, 3145728, 8, 1704046, 3145728, 9, 1769582, 3145728, 8, 1835118, 3145728, 9, 1900654, 3145728, 7, 1966190, 3145728, 8, 2031726, 3014656, 18, 2097262, 2883584, 7, 2162798, 2949120, 9, 2228334, 2949120, 9, 2293870, 2949120, 7, 2359406, 2949120, 7, 2424942, 2949120, 8, 2490478, 2949120, 7, 2556014, 2949120, 8, 2621550, 2949120, 9, 111, 3473408, 7, 65647, 3473408, 8, 131183, 3473408, 9, 196719, 3407872, 7, 262255, 3407872, 8, 327791, 3407872, 9, 393327, 3538944, 9, 458863, 3538944, 8, 524399, 3538944, 9, 589935, 3538944, 7, 655471, 3538944, 8, 721007, 3538944, 9, 786543, 3473408, 7, 852079, 3473408, 8, 917615, 3211264, 10, 983151, 3211264, 11, 1048687, 3407872, 8, 1114223, 2949120, 12, 1179759, 3276800, 7, 1245295, 3276800, 8, 1310831, 3276800, 9, 1376367, 3211264, 7, 1441903, 3276800, 13, 1507439, 3276800, 14, 1572975, 3014656, 7, 1638511, 3014656, 8, 1704047, 3014656, 9, 1769583, 3014656, 8, 1835119, 3014656, 9, 1900655, 3014656, 7, 1966191, 3014656, 8, 2031727, 3080192, 18, 2097263, 2949120, 7, 2162799, 2949120, 8, 2228335, 2949120, 9, 2293871, 2818048, 8, 2359407, 2818048, 7, 2424943, 2818048, 8, 2490479, 2818048, 7, 2556015, 2818048, 8, 2621551, 2818048, 9, 112, 3538944, 7, 65648, 3538944, 8, 131184, 3538944, 9, 196720, 3473408, 7, 262256, 3473408, 8, 327792, 3473408, 9, 393328, 3407872, 7, 458864, 3407872, 8, 524400, 3407872, 9, 589936, 3407872, 7, 655472, 3407872, 8, 721008, 3407872, 9, 786544, 3538944, 7, 852080, 3538944, 8, 917616, 3276800, 10, 983152, 3276800, 11, 1048688, 3473408, 8, 1114224, 3014656, 12, 1179760, 3342336, 7, 1245296, 3342336, 8, 1310832, 3342336, 9, 1376368, 3276800, 7, 1441904, 3342336, 13, 1507440, 3342336, 14, 1572976, 3080192, 7, 1638512, 3080192, 8, 1704048, 3080192, 9, 1769584, 3080192, 8, 1835120, 3080192, 9, 1900656, 3080192, 7, 1966192, 3080192, 8, 2031728, 3145728, 18, 2097264, 2818048, 7, 2162800, 2818048, 8, 2228336, 2818048, 9, 2293872, 2818048, 9, 2359408, 2883584, 7, 2424944, 2883584, 8, 2490480, 2883584, 7, 2556016, 2883584, 8, 2621552, 2883584, 9, 113, 3407872, 7, 65649, 3407872, 8, 131185, 3407872, 9, 196721, 3538944, 7, 262257, 3538944, 8, 327793, 3538944, 9, 393329, 3473408, 7, 458865, 3473408, 8, 524401, 3473408, 9, 589937, 3473408, 7, 655473, 3473408, 8, 721009, 3473408, 9, 786545, 3407872, 7, 852081, 3407872, 8, 917617, 3342336, 10, 983153, 3342336, 11, 1048689, 3538944, 8, 1114225, 3080192, 12, 1179761, 3211264, 7, 1245297, 3211264, 8, 1310833, 3211264, 9, 1376369, 3342336, 7, 1441905, 2818048, 13, 1507441, 2818048, 14, 1572977, 3014656, 7, 1638513, 3014656, 8, 1704049, 3014656, 9, 1769585, 3145728, 8, 1835121, 3145728, 9, 1900657, 3145728, 7, 1966193, 3145728, 8, 2031729, 3211264, 18, 2097265, 2883584, 7, 2162801, 2883584, 8, 2228337, 2883584, 9, 2293873, 2883584, 9, 2359409, 2949120, 7, 2424945, 2949120, 8, 2490481, 2949120, 7, 2556017, 2949120, 8, 2621553, 2949120, 9, 114, 3473408, 7, 65650, 3473408, 8, 131186, 3473408, 9, 196722, 3407872, 7, 262258, 3407872, 8, 327794, 3407872, 9, 393330, 3538944, 7, 458866, 3538944, 8, 524402, 3538944, 9, 589938, 3538944, 7, 655474, 3538944, 8, 721010, 3538944, 9, 786546, 3473408, 7, 852082, 3473408, 8, 917618, 3473408, 9, 983154, 3407872, 7, 1048690, 3407872, 8, 1114226, 3604480, 12, 1179762, 3276800, 7, 1245298, 3276800, 8, 1310834, 3276800, 9, 1376370, 3211264, 7, 1441906, 2883584, 13, 1507442, 2883584, 14, 1572978, 3080192, 7, 1638514, 3080192, 8, 1704050, 3080192, 9, 1769586, 3014656, 8, 1835122, 3014656, 9, 1900658, 3014656, 7, 1966194, 3014656, 8, 2031730, 3276800, 18, 2097266, 2949120, 7, 2162802, 2949120, 8, 2228338, 2949120, 9, 2293874, 2949120, 9, 2359410, 2818048, 7, 2424946, 2818048, 8, 2490482, 2818048, 7, 2556018, 2818048, 8, 2621554, 2818048, 9, 115, 3538944, 7, 65651, 3538944, 8, 131187, 3538944, 9, 196723, 3473408, 7, 262259, 3473408, 8, 327795, 3473408, 9, 393331, 3407872, 7, 458867, 3407872, 8, 524403, 3407872, 9, 589939, 3407872, 7, 655475, 3407872, 8, 721011, 3407872, 9, 786547, 3538944, 7, 852083, 3538944, 8, 917619, 3538944, 9, 983155, 3473408, 7, 1048691, 3473408, 8, 1114227, 3670016, 12, 1179763, 3342336, 7, 1245299, 3342336, 8, 1310835, 3342336, 9, 1376371, 3276800, 7, 1441907, 2949120, 13, 1507443, 2949120, 14, 1572979, 3145728, 7, 1638515, 3145728, 8, 1704051, 3211264, 16, 1769587, 3211264, 17, 1835123, 3080192, 9, 1900659, 3080192, 7, 1966195, 3080192, 8, 2031731, 3342336, 18, 2097267, 2949120, 9, 2162803, 2949120, 9, 2228339, 2949120, 9, 2293875, 2949120, 9, 2359411, 2883584, 7, 2424947, 2883584, 8, 2490483, 2883584, 7, 2556019, 2883584, 8, 2621555, 2883584, 9, 116, 3407872, 7, 65652, 3407872, 8, 131188, 3407872, 9, 196724, 3538944, 7, 262260, 3538944, 8, 327796, 3538944, 9, 393332, 3473408, 7, 458868, 3473408, 8, 524404, 3473408, 9, 589940, 3473408, 7, 655476, 3211264, 10, 721012, 3211264, 11, 786548, 3407872, 7, 852084, 3407872, 8, 917620, 3407872, 9, 983156, 3538944, 7, 1048692, 3538944, 8, 1114228, 3735552, 12, 1179764, 3211264, 7, 1245300, 3211264, 8, 1310836, 3211264, 9, 1376372, 3342336, 7, 1441908, 2818048, 13, 1507444, 2818048, 14, 1572980, 3014656, 7, 1638516, 3014656, 8, 1704052, 3276800, 16, 1769588, 3276800, 17, 1835124, 3145728, 9, 1900660, 3145728, 7, 1966196, 3145728, 8, 2031732, 2818048, 18, 2097268, 2818048, 7, 2162804, 2818048, 8, 2228340, 2818048, 9, 2293876, 2818048, 7, 2359412, 2949120, 7, 2424948, 2949120, 8, 2490484, 2949120, 7, 2556020, 2949120, 8, 2621556, 2949120, 9, 117, 3473408, 7, 65653, 3473408, 8, 131189, 3473408, 9, 196725, 3407872, 7, 262261, 3407872, 8, 327797, 3407872, 9, 393333, 3407872, 9, 458869, 3407872, 8, 524405, 3407872, 9, 589941, 3538944, 7, 655477, 3276800, 10, 721013, 3276800, 11, 786549, 3473408, 7, 852085, 3473408, 8, 917621, 3473408, 9, 983157, 3407872, 7, 1048693, 3407872, 8, 1114229, 2883584, 12, 1179765, 3276800, 7, 1245301, 3276800, 8, 1310837, 3276800, 9, 1376373, 3211264, 7, 1441909, 2883584, 13, 1507445, 2883584, 14, 1572981, 3080192, 7, 1638517, 3080192, 8, 1704053, 3342336, 16, 1769589, 3342336, 17, 1835125, 3014656, 9, 1900661, 3014656, 7, 1966197, 3014656, 8, 2031733, 2883584, 18, 2097269, 2883584, 7, 2162805, 2883584, 8, 2228341, 2883584, 9, 2293877, 2883584, 7, 2359413, 2818048, 7, 2424949, 2818048, 8, 2490485, 2818048, 7, 2556021, 2818048, 8, 2621557, 2818048, 9, 118, 3538944, 7, 65654, 3538944, 8, 131190, 3538944, 9, 196726, 3473408, 7, 262262, 3473408, 8, 327798, 3473408, 9, 393334, 3473408, 9, 458870, 3473408, 8, 524406, 3473408, 9, 589942, 3407872, 7, 655478, 3342336, 10, 721014, 3342336, 11, 786550, 3538944, 7, 852086, 3538944, 8, 917622, 3538944, 9, 983158, 3473408, 7, 1048694, 3473408, 8, 1114230, 2949120, 12, 1179766, 3342336, 7, 1245302, 3342336, 8, 1310838, 3342336, 9, 1376374, 3276800, 7, 1441910, 2949120, 13, 1507446, 2949120, 14, 1572982, 3145728, 7, 1638518, 3145728, 8, 1704054, 3145728, 9, 1769590, 3080192, 8, 1835126, 3080192, 9, 1900662, 3080192, 7, 1966198, 3080192, 8, 2031734, 2949120, 18, 2097270, 2949120, 7, 2162806, 2949120, 8, 2228342, 2949120, 9, 2293878, 2949120, 7, 2359414, 2883584, 7, 2424950, 2883584, 8, 2490486, 2883584, 7, 2556022, 2883584, 8, 2621558, 2883584, 9, 119, 3407872, 7, 65655, 3407872, 8, 131191, 3407872, 9, 196727, 3538944, 7, 262263, 3538944, 8, 327799, 3538944, 9, 393335, 3538944, 9, 458871, 3538944, 8, 524407, 3538944, 9, 589943, 3211264, 11, 655479, 3473408, 8, 721015, 3473408, 9, 786551, 3407872, 7, 852087, 3407872, 8, 917623, 3407872, 9, 983159, 3538944, 7, 1048695, 3538944, 8, 1114231, 3014656, 12, 1179767, 3211264, 7, 1245303, 3211264, 8, 1310839, 3211264, 9, 1376375, 3342336, 7, 1441911, 2818048, 13, 1507447, 2818048, 14, 1572983, 3014656, 7, 1638519, 3014656, 8, 1704055, 3014656, 9, 1769591, 3145728, 8, 1835127, 3145728, 9, 1900663, 3145728, 7, 1966199, 3604480, 17, 2031735, 3604480, 18, 2097271, 2818048, 7, 2162807, 2818048, 8, 2228343, 2818048, 9, 2293879, 2818048, 7, 2359415, 2818048, 8, 2424951, 2818048, 9, 2490487, 2818048, 7, 2556023, 2818048, 8, 2621559, 2818048, 9, 120, 3473408, 7, 65656, 3473408, 8, 131192, 3473408, 9, 196728, 3407872, 7, 262264, 3407872, 8, 327800, 3407872, 9, 393336, 3473408, 7, 458872, 3473408, 8, 524408, 3473408, 9, 589944, 3276800, 11, 655480, 2949120, 10, 721016, 2949120, 11, 786552, 3473408, 7, 852088, 3473408, 8, 917624, 3473408, 9, 983160, 3473408, 7, 1048696, 3473408, 8, 1114232, 2883584, 12, 1179768, 3276800, 7, 1245304, 3276800, 8, 1310840, 3276800, 9, 1376376, 3276800, 7, 1441912, 3407872, 13, 1507448, 3407872, 14, 1572984, 3080192, 7, 1638520, 3080192, 8, 1704056, 3080192, 9, 1769592, 3080192, 8, 1835128, 3080192, 9, 1900664, 3080192, 7, 1966200, 3670016, 17, 2031736, 3670016, 18, 2097272, 2883584, 7, 2162808, 2883584, 8, 2228344, 2883584, 9, 2293880, 2883584, 7, 2359416, 2883584, 8, 2424952, 2883584, 9, 2490488, 2883584, 7, 2556024, 2883584, 8, 2621560, 2883584, 9, 121, 3538944, 7, 65657, 3538944, 8, 131193, 3538944, 9, 196729, 3473408, 7, 262265, 3473408, 8, 327801, 3473408, 9, 393337, 3538944, 7, 458873, 3538944, 8, 524409, 3538944, 9, 589945, 3342336, 11, 655481, 2949120, 11, 721017, 2949120, 11, 786553, 3538944, 7, 852089, 3538944, 8, 917625, 3538944, 9, 983161, 3538944, 7, 1048697, 3538944, 8, 1114233, 2949120, 12, 1179769, 3342336, 7, 1245305, 3342336, 8, 1310841, 3342336, 9, 1376377, 3342336, 7, 1441913, 3473408, 13, 1507449, 3473408, 14, 1572985, 3145728, 7, 1638521, 3145728, 8, 1704057, 3145728, 9, 1769593, 3145728, 8, 1835129, 3145728, 9, 1900665, 3145728, 7, 1966201, 3735552, 17, 2031737, 3735552, 18, 2097273, 2949120, 7, 2162809, 2949120, 8, 2228345, 2949120, 9, 2293881, 2949120, 7, 2359417, 2949120, 8, 2424953, 2949120, 9, 2490489, 2949120, 7, 2556025, 2949120, 8, 2621561, 2949120, 9, 122, 3407872, 7, 65658, 3407872, 8, 131194, 3407872, 9, 196730, 3538944, 7, 262266, 3538944, 8, 327802, 3538944, 9, 393338, 3407872, 7, 458874, 3407872, 8, 524410, 3407872, 9, 589946, 3407872, 7, 655482, 2949120, 11, 721018, 2949120, 11, 786554, 3407872, 7, 852090, 3407872, 8, 917626, 3407872, 9, 983162, 3407872, 7, 1048698, 3407872, 8, 1114234, 3014656, 12, 1179770, 3211264, 7, 1245306, 3211264, 8, 1310842, 3211264, 9, 1376378, 3342336, 7, 1441914, 3538944, 13, 1507450, 3538944, 14, 1572986, 3211264, 16, 1638522, 3211264, 17, 1704058, 2949120, 15, 1769594, 3014656, 8, 1835130, 3014656, 9, 1900666, 3014656, 7, 1966202, 3014656, 8, 2031738, 3014656, 18, 2097274, 2818048, 7, 2162810, 2818048, 8, 2228346, 2818048, 7, 2293882, 2818048, 8, 2359418, 2818048, 7, 2424954, 2818048, 8, 2490490, 2818048, 9, 2556026, 2818048, 8, 2621562, 2818048, 9, 123, 3473408, 7, 65659, 3473408, 8, 131195, 3473408, 9, 196731, 3407872, 7, 262267, 3407872, 8, 327803, 3407872, 9, 393339, 3407872, 7, 458875, 3407872, 8, 524411, 3407872, 9, 589947, 3473408, 7, 655483, 3145728, 10, 721019, 2949120, 11, 786555, 3473408, 7, 852091, 3473408, 8, 917627, 3473408, 9, 983163, 3473408, 7, 1048699, 3473408, 8, 1114235, 3080192, 12, 1179771, 3276800, 7, 1245307, 3276800, 8, 1310843, 3276800, 9, 1376379, 3211264, 7, 1441915, 3604480, 13, 1507451, 3604480, 14, 1572987, 3276800, 16, 1638523, 3276800, 17, 1704059, 2949120, 15, 1769595, 3080192, 8, 1835131, 3080192, 9, 1900667, 3080192, 7, 1966203, 3080192, 8, 2031739, 3080192, 18, 2097275, 2883584, 7, 2162811, 2883584, 8, 2228347, 2883584, 7, 2293883, 2883584, 8, 2359419, 2883584, 7, 2424955, 2883584, 8, 2490491, 2883584, 9, 2556027, 2883584, 8, 2621563, 2883584, 9, 124, 3538944, 7, 65660, 3538944, 8, 131196, 3538944, 9, 196732, 3473408, 7, 262268, 3473408, 8, 327804, 3473408, 9, 393340, 3473408, 7, 458876, 3473408, 8, 524412, 3473408, 9, 589948, 3538944, 7, 655484, 3211264, 10, 721020, 2949120, 11, 786556, 3538944, 7, 852092, 3538944, 8, 917628, 3538944, 9, 983164, 3538944, 7, 1048700, 3538944, 8, 1114236, 3145728, 12, 1179772, 3342336, 7, 1245308, 3342336, 8, 1310844, 3342336, 9, 1376380, 3276800, 7, 1441916, 3670016, 13, 1507452, 3670016, 14, 1572988, 3342336, 16, 1638524, 3342336, 17, 1704060, 2949120, 15, 1769596, 3145728, 8, 1835132, 3145728, 9, 1900668, 3145728, 7, 1966204, 3145728, 8, 2031740, 3145728, 18, 2097276, 2949120, 7, 2162812, 2949120, 8, 2228348, 2949120, 7, 2293884, 2949120, 8, 2359420, 2949120, 7, 2424956, 2949120, 8, 2490492, 2949120, 9, 2556028, 2949120, 8, 2621564, 2949120, 9, 125, 3407872, 7, 65661, 3407872, 8, 131197, 3407872, 9, 196733, 3538944, 7, 262269, 3538944, 8, 327805, 3538944, 9, 393341, 3538944, 7, 458877, 3538944, 8, 524413, 3538944, 9, 589949, 3407872, 7, 655485, 3014656, 10, 721021, 3014656, 11, 786557, 3407872, 7, 852093, 3407872, 8, 917629, 3407872, 9, 983165, 3407872, 7, 1048701, 3407872, 8, 1114237, 3211264, 12, 1179773, 3211264, 7, 1245309, 3211264, 8, 1310845, 3211264, 9, 1376381, 3342336, 7, 1441917, 3735552, 13, 1507453, 3735552, 14, 1572989, 3014656, 7, 1638525, 3014656, 8, 1704061, 3014656, 9, 1769597, 3014656, 8, 1835133, 3014656, 9, 1900669, 3014656, 7, 1966205, 3014656, 8, 2031741, 3211264, 18, 2097277, 2818048, 7, 2162813, 2818048, 8, 2228349, 2818048, 7, 2293885, 2818048, 8, 2359421, 2949120, 7, 2424957, 2949120, 8, 2490493, 2949120, 9, 2556029, 2818048, 8, 2621565, 2818048, 9, 126, 3407872, 7, 65662, 3407872, 8, 131198, 3407872, 9, 196734, 3407872, 7, 262270, 3407872, 8, 327806, 3407872, 9, 393342, 3407872, 7, 458878, 3407872, 8, 524414, 3407872, 9, 589950, 3473408, 7, 655486, 3080192, 10, 721022, 3080192, 11, 786558, 3473408, 7, 852094, 3473408, 8, 917630, 3473408, 9, 983166, 3473408, 7, 1048702, 3473408, 8, 1114238, 3276800, 12, 1179774, 3276800, 7, 1245310, 3276800, 8, 1310846, 3276800, 9, 1376382, 3211264, 7, 1441918, 2883584, 13, 1507454, 2883584, 14, 1572990, 3080192, 7, 1638526, 3080192, 8, 1704062, 3080192, 9, 1769598, 3080192, 8, 1835134, 3080192, 9, 1900670, 3080192, 7, 1966206, 3080192, 8, 2031742, 3276800, 18, 2097278, 2883584, 7, 2162814, 2883584, 8, 2228350, 2883584, 7, 2293886, 2883584, 8, 2359422, 2883584, 9, 2424958, 2883584, 8, 2490494, 2818048, 7, 2556030, 2818048, 8, 2621566, 2818048, 9, 127, 3473408, 7, 65663, 3473408, 8, 131199, 3473408, 9, 196735, 3473408, 7, 262271, 3473408, 8, 327807, 3473408, 9, 393343, 3473408, 7, 458879, 3473408, 8, 524415, 3473408, 9, 589951, 3538944, 7, 655487, 3145728, 10, 721023, 3145728, 11, 786559, 3538944, 7, 852095, 3538944, 8, 917631, 3538944, 9, 983167, 3538944, 7, 1048703, 3538944, 8, 1114239, 3342336, 12, 1179775, 3342336, 7, 1245311, 3342336, 8, 1310847, 3342336, 9, 1376383, 3276800, 7, 1441919, 2949120, 13, 1507455, 2949120, 14, 1572991, 3145728, 7, 1638527, 3145728, 8, 1704063, 3145728, 9, 1769599, 3145728, 8, 1835135, 3145728, 9, 1900671, 3145728, 7, 1966207, 3145728, 8, 2031743, 3342336, 18, 2097279, 2949120, 7, 2162815, 2949120, 8, 2228351, 2949120, 7, 2293887, 2949120, 8, 2359423, 2949120, 9, 2424959, 2883584, 8, 2490495, 2883584, 7, 2556031, 2883584, 8, 2621567, 2883584, 9, 128, 3407872, 7, 65664, 3538944, 7, 131200, 3538944, 8, 196736, 3538944, 9, 262272, 3538944, 8, 327808, 3538944, 9, 393344, 3473408, 7, 458880, 3473408, 8, 524416, 3473408, 9, 589952, 3538944, 7, 655488, 3538944, 8, 721024, 3538944, 9, 786560, 3538944, 7, 852096, 3538944, 8, 917632, 3538944, 9, 983168, 3538944, 7, 1048704, 3538944, 8, 1114240, 3211264, 12, 1179776, 3211264, 7, 1245312, 3211264, 8, 1310848, 3211264, 9, 1376384, 3342336, 7, 1441920, 2949120, 13, 1507456, 2949120, 14, 1572992, 3145728, 7, 1638528, 3145728, 8, 1704064, 3145728, 9, 1769600, 3145728, 8, 1835136, 3145728, 9, 1900672, 3145728, 7, 1966208, 3145728, 8, 2031744, 3342336, 18, 2097280, 2883584, 7, 2162816, 2883584, 8, 2228352, 2949120, 9, 2293888, 2949120, 7, 2359424, 2949120, 7, 2424960, 2949120, 8, 2490496, 2949120, 7, 2556032, 2949120, 8, 2621568, 2949120, 9, 129, 3473408, 7, 65665, 3473408, 8, 131201, 3473408, 9, 196737, 3407872, 7, 262273, 3407872, 8, 327809, 3407872, 9, 393345, 3538944, 7, 458881, 3538944, 8, 524417, 3538944, 9, 589953, 3407872, 7, 655489, 3407872, 8, 721025, 3407872, 9, 786561, 3407872, 7, 852097, 3407872, 8, 917633, 3407872, 9, 983169, 3407872, 7, 1048705, 3407872, 8, 1114241, 3276800, 12, 1179777, 3276800, 7, 1245313, 3276800, 8, 1310849, 3276800, 9, 1376385, 3211264, 7, 1441921, 3604480, 13, 1507457, 3604480, 14, 1572993, 3014656, 7, 1638529, 3014656, 8, 1704065, 3014656, 9, 1769601, 3014656, 8, 1835137, 3014656, 9, 1900673, 3014656, 7, 1966209, 3014656, 8, 2031745, 3342336, 18, 2097281, 2949120, 7, 2162817, 2949120, 8, 2228353, 2949120, 9, 2293889, 2818048, 7, 2359425, 2818048, 7, 2424961, 2818048, 8, 2490497, 2818048, 7, 2556033, 2818048, 8, 2621569, 2818048, 9, 130, 3538944, 7, 65666, 3538944, 8, 131202, 3538944, 9, 196738, 3473408, 7, 262274, 3473408, 8, 327810, 3473408, 9, 393346, 3407872, 7, 458882, 3407872, 8, 524418, 3407872, 9, 589954, 3473408, 7, 655490, 3473408, 8, 721026, 3473408, 9, 786562, 3473408, 7, 852098, 3473408, 8, 917634, 3473408, 9, 983170, 3473408, 7, 1048706, 3473408, 8, 1114242, 3342336, 12, 1179778, 3342336, 7, 1245314, 3342336, 8, 1310850, 3342336, 9, 1376386, 3276800, 7, 1441922, 3670016, 13, 1507458, 3670016, 14, 1572994, 3080192, 7, 1638530, 3080192, 8, 1704066, 3080192, 9, 1769602, 3080192, 8, 1835138, 3080192, 9, 1900674, 3080192, 7, 1966210, 3080192, 8, 2031746, 3407872, 18, 2097282, 2818048, 7, 2162818, 2818048, 8, 2228354, 2818048, 9, 2293890, 2883584, 7, 2359426, 2883584, 7, 2424962, 2883584, 8, 2490498, 2883584, 7, 2556034, 2883584, 8, 2621570, 2883584, 9, 131, 3407872, 7, 65667, 3407872, 8, 131203, 3407872, 9, 196739, 3538944, 7, 262275, 3538944, 8, 327811, 3538944, 9, 393347, 3473408, 7, 458883, 3473408, 8, 524419, 3473408, 9, 589955, 3538944, 7, 655491, 3538944, 8, 721027, 3538944, 9, 786563, 3538944, 7, 852099, 3538944, 8, 917635, 3538944, 9, 983171, 3538944, 7, 1048707, 3538944, 8, 1114243, 3407872, 12, 1179779, 3211264, 7, 1245315, 3211264, 8, 1310851, 3211264, 9, 1376387, 3342336, 7, 1441923, 3735552, 13, 1507459, 3735552, 14, 1572995, 3145728, 7, 1638531, 3145728, 8, 1704067, 3145728, 9, 1769603, 3145728, 8, 1835139, 3145728, 9, 1900675, 3145728, 7, 1966211, 3145728, 8, 2031747, 3473408, 18, 2097283, 2883584, 7, 2162819, 2883584, 8, 2228355, 2883584, 9, 2293891, 2949120, 7, 2359427, 2949120, 7, 2424963, 2949120, 8, 2490499, 2949120, 7, 2556035, 2949120, 8, 2621571, 2949120, 9, 132, 3473408, 7, 65668, 3473408, 8, 131204, 3473408, 9, 196740, 3407872, 7, 262276, 3407872, 8, 327812, 3407872, 9, 393348, 3538944, 7, 458884, 3538944, 8, 524420, 3538944, 9, 589956, 3407872, 7, 655492, 3407872, 8, 721028, 3407872, 9, 786564, 3407872, 7, 852100, 3407872, 8, 917636, 3407872, 9, 983172, 3407872, 7, 1048708, 3407872, 8, 1114244, 3473408, 12, 1179780, 3276800, 7, 1245316, 3276800, 8, 1310852, 3276800, 9, 1376388, 3211264, 7, 1441924, 2818048, 13, 1507460, 2818048, 14, 1572996, 3014656, 7, 1638532, 3014656, 8, 1704068, 2949120, 16, 1769604, 2949120, 17, 1835140, 3014656, 9, 1900676, 3014656, 7, 1966212, 3014656, 8, 2031748, 3538944, 18, 2097284, 2949120, 7, 2162820, 2949120, 8, 2228356, 2949120, 9, 2293892, 2818048, 7, 2359428, 2818048, 7, 2424964, 2818048, 8, 2490500, 2818048, 7, 2556036, 2818048, 8, 2621572, 2818048, 9, 133, 3538944, 7, 65669, 3538944, 8, 131205, 3538944, 9, 196741, 3473408, 7, 262277, 3473408, 8, 327813, 3473408, 9, 393349, 3407872, 7, 458885, 3407872, 8, 524421, 3407872, 9, 589957, 3473408, 7, 655493, 3473408, 8, 721029, 3473408, 9, 786565, 3473408, 7, 852101, 3473408, 8, 917637, 3473408, 9, 983173, 3473408, 7, 1048709, 3473408, 8, 1114245, 3538944, 12, 1179781, 3342336, 7, 1245317, 3342336, 8, 1310853, 3342336, 9, 1376389, 3276800, 7, 1441925, 2883584, 13, 1507461, 2883584, 14, 1572997, 3080192, 7, 1638533, 3080192, 8, 1704069, 3014656, 16, 1769605, 3014656, 17, 1835141, 3080192, 9, 1900677, 3080192, 7, 1966213, 3604480, 17, 2031749, 3604480, 18, 2097285, 2818048, 7, 2162821, 2818048, 8, 2228357, 2818048, 9, 2293893, 2883584, 7, 2359429, 2883584, 7, 2424965, 2883584, 8, 2490501, 2883584, 7, 2556037, 2883584, 8, 2621573, 2883584, 9, 134, 3407872, 7, 65670, 3407872, 8, 131206, 3407872, 9, 196742, 3538944, 7, 262278, 3538944, 8, 327814, 3538944, 9, 393350, 3473408, 7, 458886, 3473408, 8, 524422, 3473408, 9, 589958, 3538944, 7, 655494, 3538944, 8, 721030, 3538944, 9, 786566, 3538944, 7, 852102, 3538944, 8, 917638, 3538944, 9, 983174, 3538944, 7, 1048710, 3538944, 8, 1114246, 3604480, 12, 1179782, 3211264, 7, 1245318, 3211264, 8, 1310854, 3211264, 9, 1376390, 3342336, 7, 1441926, 2949120, 13, 1507462, 2949120, 14, 1572998, 3145728, 7, 1638534, 3145728, 8, 1704070, 3080192, 16, 1769606, 3080192, 17, 1835142, 3145728, 9, 1900678, 3145728, 7, 1966214, 3670016, 17, 2031750, 3670016, 18, 2097286, 2883584, 7, 2162822, 2883584, 8, 2228358, 2883584, 9, 2293894, 2949120, 7, 2359430, 2949120, 7, 2424966, 2949120, 8, 2490502, 2949120, 7, 2556038, 2949120, 8, 2621574, 2949120, 9, 135, 3473408, 7, 65671, 3473408, 8, 131207, 3473408, 9, 196743, 3407872, 7, 262279, 3407872, 8, 327815, 3407872, 9, 393351, 3538944, 7, 458887, 3538944, 8, 524423, 3538944, 9, 589959, 3407872, 7, 655495, 3407872, 8, 721031, 3407872, 9, 786567, 3407872, 7, 852103, 3407872, 8, 917639, 3407872, 9, 983175, 3407872, 7, 1048711, 3407872, 8, 1114247, 3670016, 12, 1179783, 3276800, 7, 1245319, 3276800, 8, 1310855, 3276800, 9, 1376391, 3211264, 7, 1441927, 2818048, 13, 1507463, 2818048, 14, 1572999, 3014656, 7, 1638535, 3014656, 8, 1704071, 3145728, 16, 1769607, 3145728, 17, 1835143, 3014656, 9, 1900679, 3014656, 7, 1966215, 3735552, 17, 2031751, 3735552, 18, 2097287, 2949120, 7, 2162823, 2949120, 8, 2228359, 2949120, 9, 2293895, 2818048, 7, 2359431, 2818048, 7, 2424967, 2818048, 8, 2490503, 2818048, 7, 2556039, 2818048, 8, 2621575, 2818048, 9, 136, 3538944, 7, 65672, 3538944, 8, 131208, 3538944, 9, 196744, 3473408, 7, 262280, 3473408, 8, 327816, 3473408, 9, 393352, 3407872, 9, 458888, 3407872, 8, 524424, 3407872, 9, 589960, 3407872, 7, 655496, 3407872, 8, 721032, 3407872, 9, 786568, 3473408, 7, 852104, 3473408, 8, 917640, 3473408, 9, 983176, 3473408, 7, 1048712, 3473408, 8, 1114248, 3735552, 12, 1179784, 3342336, 7, 1245320, 3342336, 8, 1310856, 3342336, 9, 1376392, 3276800, 7, 1441928, 2883584, 13, 1507464, 2883584, 14, 1573000, 3080192, 7, 1638536, 3080192, 8, 1704072, 3080192, 9, 1769608, 3080192, 8, 1835144, 3080192, 9, 1900680, 3080192, 7, 1966216, 3080192, 8, 2031752, 2949120, 18, 2097288, 2818048, 7, 2162824, 2818048, 8, 2228360, 2818048, 9, 2293896, 2883584, 7, 2359432, 2883584, 7, 2424968, 2883584, 8, 2490504, 2883584, 7, 2556040, 2883584, 8, 2621576, 2883584, 9, 137, 3407872, 7, 65673, 3407872, 8, 131209, 3407872, 9, 196745, 3538944, 7, 262281, 3538944, 8, 327817, 3538944, 9, 393353, 3473408, 9, 458889, 3473408, 8, 524425, 3473408, 9, 589961, 3473408, 7, 655497, 3473408, 8, 721033, 3473408, 9, 786569, 3407872, 7, 852105, 3407872, 8, 917641, 3407872, 9, 983177, 3538944, 7, 1048713, 3538944, 8, 1114249, 2883584, 12, 1179785, 3211264, 7, 1245321, 3211264, 8, 1310857, 3211264, 9, 1376393, 3342336, 7, 1441929, 3211264, 13, 1507465, 3211264, 14, 1573001, 3145728, 7, 1638537, 3145728, 8, 1704073, 3145728, 9, 1769609, 3145728, 8, 1835145, 3145728, 9, 1900681, 3145728, 7, 1966217, 3145728, 8, 2031753, 3014656, 18, 2097289, 2883584, 7, 2162825, 2949120, 9, 2228361, 2949120, 9, 2293897, 2949120, 7, 2359433, 2949120, 7, 2424969, 2949120, 8, 2490505, 2949120, 7, 2556041, 2949120, 8, 2621577, 2949120, 9, 138, 3473408, 7, 65674, 3473408, 8, 131210, 3473408, 9, 196746, 3407872, 7, 262282, 3407872, 8, 327818, 3407872, 9, 393354, 3538944, 9, 458890, 3538944, 8, 524426, 3538944, 9, 589962, 3538944, 7, 655498, 3538944, 8, 721034, 3538944, 9, 786570, 3473408, 7, 852106, 3473408, 8, 917642, 3211264, 10, 983178, 3211264, 11, 1048714, 3407872, 8, 1114250, 2949120, 12, 1179786, 3276800, 7, 1245322, 3276800, 8, 1310858, 3276800, 9, 1376394, 3211264, 7, 1441930, 3276800, 13, 1507466, 3276800, 14, 1573002, 3014656, 7, 1638538, 3014656, 8, 1704074, 3014656, 9, 1769610, 3014656, 8, 1835146, 3014656, 9, 1900682, 3014656, 7, 1966218, 3014656, 8, 2031754, 3080192, 18, 2097290, 2949120, 7, 2162826, 2949120, 8, 2228362, 2949120, 9, 2293898, 2818048, 8, 2359434, 2818048, 7, 2424970, 2818048, 8, 2490506, 2818048, 7, 2556042, 2818048, 8, 2621578, 2818048, 9, 139, 3538944, 7, 65675, 3538944, 8, 131211, 3538944, 9, 196747, 3473408, 7, 262283, 3473408, 8, 327819, 3473408, 9, 393355, 3407872, 7, 458891, 3407872, 8, 524427, 3407872, 9, 589963, 3407872, 7, 655499, 3407872, 8, 721035, 3407872, 9, 786571, 3538944, 7, 852107, 3538944, 8, 917643, 3276800, 10, 983179, 3276800, 11, 1048715, 3473408, 8, 1114251, 3014656, 12, 1179787, 3342336, 7, 1245323, 3342336, 8, 1310859, 3342336, 9, 1376395, 3276800, 7, 1441931, 3342336, 13, 1507467, 3342336, 14, 1573003, 3080192, 7, 1638539, 3080192, 8, 1704075, 3080192, 9, 1769611, 3080192, 8, 1835147, 3080192, 9, 1900683, 3080192, 7, 1966219, 3080192, 8, 2031755, 3145728, 18, 2097291, 2818048, 7, 2162827, 2818048, 8, 2228363, 2818048, 9, 2293899, 2818048, 9, 2359435, 2883584, 7, 2424971, 2883584, 8, 2490507, 2883584, 7, 2556043, 2883584, 8, 2621579, 2883584, 9, 140, 3407872, 7, 65676, 3407872, 8, 131212, 3407872, 9, 196748, 3538944, 7, 262284, 3538944, 8, 327820, 3538944, 9, 393356, 3473408, 7, 458892, 3473408, 8, 524428, 3473408, 9, 589964, 3473408, 7, 655500, 3473408, 8, 721036, 3473408, 9, 786572, 3407872, 7, 852108, 3407872, 8, 917644, 3342336, 10, 983180, 3342336, 11, 1048716, 3538944, 8, 1114252, 3080192, 12, 1179788, 3211264, 7, 1245324, 3211264, 8, 1310860, 3211264, 9, 1376396, 3342336, 7, 1441932, 2818048, 13, 1507468, 2818048, 14, 1573004, 3014656, 7, 1638540, 3014656, 8, 1704076, 3014656, 9, 1769612, 3145728, 8, 1835148, 3145728, 9, 1900684, 3145728, 7, 1966220, 3145728, 8, 2031756, 3211264, 18, 2097292, 2883584, 7, 2162828, 2883584, 8, 2228364, 2883584, 9, 2293900, 2883584, 9, 2359436, 2949120, 7, 2424972, 2949120, 8, 2490508, 2949120, 7, 2556044, 2949120, 8, 2621580, 2949120, 9, 141, 3473408, 7, 65677, 3473408, 8, 131213, 3473408, 9, 196749, 3407872, 7, 262285, 3407872, 8, 327821, 3407872, 9, 393357, 3538944, 7, 458893, 3538944, 8, 524429, 3538944, 9, 589965, 3538944, 7, 655501, 3538944, 8, 721037, 3538944, 9, 786573, 3473408, 7, 852109, 3473408, 8, 917645, 3473408, 9, 983181, 3407872, 7, 1048717, 3407872, 8, 1114253, 3604480, 12, 1179789, 3276800, 7, 1245325, 3276800, 8, 1310861, 3276800, 9, 1376397, 3211264, 7, 1441933, 2883584, 13, 1507469, 2883584, 14, 1573005, 3080192, 7, 1638541, 3080192, 8, 1704077, 3080192, 9, 1769613, 3014656, 8, 1835149, 3014656, 9, 1900685, 3014656, 7, 1966221, 3014656, 8, 2031757, 3276800, 18, 2097293, 2949120, 7, 2162829, 2949120, 8, 2228365, 2949120, 9, 2293901, 2949120, 9, 2359437, 2818048, 7, 2424973, 2818048, 8, 2490509, 2818048, 7, 2556045, 2818048, 8, 2621581, 2818048, 9, 142, 3538944, 7, 65678, 3538944, 8, 131214, 3538944, 9, 196750, 3473408, 7, 262286, 3473408, 8, 327822, 3473408, 9, 393358, 3407872, 7, 458894, 3407872, 8, 524430, 3407872, 9, 589966, 3407872, 7, 655502, 3407872, 8, 721038, 3407872, 9, 786574, 3538944, 7, 852110, 3538944, 8, 917646, 3538944, 9, 983182, 3473408, 7, 1048718, 3473408, 8, 1114254, 3670016, 12, 1179790, 3342336, 7, 1245326, 3342336, 8, 1310862, 3342336, 9, 1376398, 3276800, 7, 1441934, 2949120, 13, 1507470, 2949120, 14, 1573006, 3145728, 7, 1638542, 3145728, 8, 1704078, 3211264, 16, 1769614, 3211264, 17, 1835150, 3080192, 9, 1900686, 3080192, 7, 1966222, 3080192, 8, 2031758, 3342336, 18, 2097294, 2949120, 9, 2162830, 2949120, 9, 2228366, 2949120, 9, 2293902, 2949120, 9, 2359438, 2883584, 7, 2424974, 2883584, 8, 2490510, 2883584, 7, 2556046, 2883584, 8, 2621582, 2883584, 9, 143, 3407872, 7, 65679, 3407872, 8, 131215, 3407872, 9, 196751, 3538944, 7, 262287, 3538944, 8, 327823, 3538944, 9, 393359, 3473408, 7, 458895, 3473408, 8, 524431, 3473408, 9, 589967, 3473408, 7, 655503, 3211264, 10, 721039, 3211264, 11, 786575, 3407872, 7, 852111, 3407872, 8, 917647, 3407872, 9, 983183, 3538944, 7, 1048719, 3538944, 8, 1114255, 3735552, 12, 1179791, 3211264, 7, 1245327, 3211264, 8, 1310863, 3211264, 9, 1376399, 3342336, 7, 1441935, 2818048, 13, 1507471, 2818048, 14, 1573007, 3014656, 7, 1638543, 3014656, 8, 1704079, 3276800, 16, 1769615, 3276800, 17, 1835151, 3145728, 9, 1900687, 3145728, 7, 1966223, 3145728, 8, 2031759, 2818048, 18, 2097295, 2818048, 7, 2162831, 2818048, 8, 2228367, 2818048, 9, 2293903, 2818048, 7, 2359439, 2949120, 7, 2424975, 2949120, 8, 2490511, 2949120, 7, 2556047, 2949120, 8, 2621583, 2949120, 9, 144, 3473408, 7, 65680, 3473408, 8, 131216, 3473408, 9, 196752, 3407872, 7, 262288, 3407872, 8, 327824, 3407872, 9, 393360, 3407872, 9, 458896, 3407872, 8, 524432, 3407872, 9, 589968, 3538944, 7, 655504, 3276800, 10, 721040, 3276800, 11, 786576, 3473408, 7, 852112, 3473408, 8, 917648, 3473408, 9, 983184, 3407872, 7, 1048720, 3407872, 8, 1114256, 2883584, 12, 1179792, 3276800, 7, 1245328, 3276800, 8, 1310864, 3276800, 9, 1376400, 3211264, 7, 1441936, 2883584, 13, 1507472, 2883584, 14, 1573008, 3080192, 7, 1638544, 3080192, 8, 1704080, 3342336, 16, 1769616, 3342336, 17, 1835152, 3014656, 9, 1900688, 3014656, 7, 1966224, 3014656, 8, 2031760, 2883584, 18, 2097296, 2883584, 7, 2162832, 2883584, 8, 2228368, 2883584, 9, 2293904, 2883584, 7, 2359440, 2818048, 7, 2424976, 2818048, 8, 2490512, 2818048, 7, 2556048, 2818048, 8, 2621584, 2818048, 9, 145, 3538944, 7, 65681, 3538944, 8, 131217, 3538944, 9, 196753, 3473408, 7, 262289, 3473408, 8, 327825, 3473408, 9, 393361, 3473408, 9, 458897, 3473408, 8, 524433, 3473408, 9, 589969, 3407872, 7, 655505, 3342336, 10, 721041, 3342336, 11, 786577, 3538944, 7, 852113, 3538944, 8, 917649, 3538944, 9, 983185, 3473408, 7, 1048721, 3473408, 8, 1114257, 2949120, 12, 1179793, 3342336, 7, 1245329, 3342336, 8, 1310865, 3342336, 9, 1376401, 3276800, 7, 1441937, 2949120, 13, 1507473, 2949120, 14, 1573009, 3145728, 7, 1638545, 3145728, 8, 1704081, 3145728, 9, 1769617, 3080192, 8, 1835153, 3080192, 9, 1900689, 3080192, 7, 1966225, 3080192, 8, 2031761, 2949120, 18, 2097297, 2949120, 7, 2162833, 2949120, 8, 2228369, 2949120, 9, 2293905, 2949120, 7, 2359441, 2883584, 7, 2424977, 2883584, 8, 2490513, 2883584, 7, 2556049, 2883584, 8, 2621585, 2883584, 9, 146, 3407872, 7, 65682, 3407872, 8, 131218, 3407872, 9, 196754, 3538944, 7, 262290, 3538944, 8, 327826, 3538944, 9, 393362, 3538944, 9, 458898, 3538944, 8, 524434, 3538944, 9, 589970, 3211264, 11, 655506, 3473408, 8, 721042, 3473408, 9, 786578, 3407872, 7, 852114, 3407872, 8, 917650, 3407872, 9, 983186, 3538944, 7, 1048722, 3538944, 8, 1114258, 3014656, 12, 1179794, 3211264, 7, 1245330, 3211264, 8, 1310866, 3211264, 9, 1376402, 3342336, 7, 1441938, 2818048, 13, 1507474, 2818048, 14, 1573010, 3014656, 7, 1638546, 3014656, 8, 1704082, 3014656, 9, 1769618, 3145728, 8, 1835154, 3145728, 9, 1900690, 3145728, 7, 1966226, 3145728, 8, 2031762, 3014656, 18, 2097298, 2818048, 7, 2162834, 2818048, 8, 2228370, 2818048, 9, 2293906, 2818048, 7, 2359442, 2818048, 8, 2424978, 2818048, 9, 2490514, 2818048, 7, 2556050, 2818048, 8, 2621586, 2818048, 9, 147, 3473408, 7, 65683, 3473408, 8, 131219, 3473408, 9, 196755, 3407872, 7, 262291, 3407872, 8, 327827, 3407872, 9, 393363, 3473408, 7, 458899, 3473408, 8, 524435, 3473408, 9, 589971, 3276800, 11, 655507, 2949120, 10, 721043, 2949120, 11, 786579, 3473408, 7, 852115, 3473408, 8, 917651, 3473408, 9, 983187, 3473408, 7, 1048723, 3473408, 8, 1114259, 2883584, 12, 1179795, 3276800, 7, 1245331, 3276800, 8, 1310867, 3276800, 9, 1376403, 3276800, 7, 1441939, 3407872, 13, 1507475, 3407872, 14, 1573011, 3080192, 7, 1638547, 3080192, 8, 1704083, 3014656, 16, 1769619, 3080192, 8, 1835155, 3080192, 9, 1900691, 3080192, 7, 1966227, 3604480, 17, 2031763, 3604480, 18, 2097299, 2883584, 7, 2162835, 2883584, 8, 2228371, 2883584, 9, 2293907, 2883584, 7, 2359443, 2883584, 8, 2424979, 2883584, 9, 2490515, 2883584, 7, 2556051, 2883584, 8, 2621587, 2883584, 9, 148, 3407872, 8, 65684, 3407872, 9, 131220, 3407872, 9, 196756, 3407872, 8, 262292, 3407872, 9, 327828, 3538944, 9, 393364, 3473408, 7, 458900, 3473408, 8, 524436, 3473408, 9, 589972, 3342336, 11, 655508, 3538944, 8, 721044, 3538944, 9, 786580, 3538944, 7, 852116, 3538944, 8, 917652, 3538944, 9, 983188, 3538944, 7, 1048724, 3538944, 8, 1114260, 3604480, 12, 1179796, 3211264, 7, 1245332, 3211264, 8, 1310868, 3211264, 9, 1376404, 3342336, 7, 1441940, 2949120, 13, 1507476, 3473408, 14, 1573012, 3145728, 7, 1638548, 3145728, 8, 1704084, 3080192, 16, 1769620, 3080192, 17, 1835156, 3145728, 9, 1900692, 3145728, 7, 1966228, 3670016, 17, 2031764, 3670016, 18, 2097300, 2883584, 7, 2162836, 2883584, 8, 2228372, 2883584, 9, 2293908, 2949120, 7, 2359444, 2949120, 7, 2424980, 2949120, 8, 2490516, 2949120, 7, 2556052, 2949120, 8, 2621588, 2949120, 9, 149, 3473408, 8, 65685, 3473408, 9, 131221, 3473408, 9, 196757, 3473408, 8, 262293, 3473408, 9, 327829, 3407872, 9, 393365, 3538944, 7, 458901, 3538944, 8, 524437, 3538944, 9, 589973, 3407872, 7, 655509, 3407872, 8, 721045, 3407872, 9, 786581, 3407872, 7, 852117, 3407872, 8, 917653, 3407872, 9, 983189, 3407872, 7, 1048725, 3407872, 8, 1114261, 3670016, 12, 1179797, 3276800, 7, 1245333, 3276800, 8, 1310869, 3276800, 9, 1376405, 3211264, 7, 1441941, 2818048, 13, 1507477, 3538944, 14, 1573013, 3014656, 7, 1638549, 3014656, 8, 1704085, 3145728, 16, 1769621, 3145728, 17, 1835157, 3014656, 9, 1900693, 3014656, 7, 1966229, 3735552, 17, 2031765, 3735552, 18, 2097301, 2949120, 7, 2162837, 2949120, 8, 2228373, 2949120, 9, 2293909, 2818048, 7, 2359445, 2818048, 7, 2424981, 2818048, 8, 2490517, 2818048, 7, 2556053, 2818048, 8, 2621589, 2818048, 9, 150, 3538944, 8, 65686, 3538944, 9, 131222, 3538944, 9, 196758, 3538944, 8, 262294, 3538944, 9, 327830, 3473408, 9, 393366, 3407872, 9, 458902, 3407872, 8, 524438, 3407872, 9, 589974, 3407872, 7, 655510, 3407872, 8, 721046, 3407872, 9, 786582, 3473408, 7, 852118, 3473408, 8, 917654, 3473408, 9, 983190, 3473408, 7, 1048726, 3473408, 8, 1114262, 3735552, 12, 1179798, 3342336, 7, 1245334, 3342336, 8, 1310870, 3342336, 9, 1376406, 3276800, 7, 1441942, 2883584, 13, 1507478, 2883584, 14, 1573014, 3080192, 7, 1638550, 3080192, 8, 1704086, 3080192, 9, 1769622, 3080192, 8, 1835158, 3080192, 9, 1900694, 3080192, 7, 1966230, 3080192, 8, 2031766, 2949120, 18, 2097302, 2818048, 7, 2162838, 2818048, 8, 2228374, 2818048, 9, 2293910, 2883584, 7, 2359446, 2883584, 7, 2424982, 2883584, 8, 2490518, 2883584, 7, 2556054, 2883584, 8, 2621590, 2883584, 9, 151, 3407872, 8, 65687, 3407872, 7, 131223, 3407872, 8, 196759, 3407872, 9, 262295, 3407872, 9, 327831, 3407872, 9, 393367, 3473408, 9, 458903, 3473408, 8, 524439, 3473408, 9, 589975, 3473408, 7, 655511, 3473408, 8, 721047, 3473408, 9, 786583, 3407872, 7, 852119, 3407872, 8, 917655, 3407872, 9, 983191, 3538944, 7, 1048727, 3538944, 8, 1114263, 2883584, 12, 1179799, 3211264, 7, 1245335, 3211264, 8, 1310871, 3211264, 9, 1376407, 3342336, 7, 1441943, 3211264, 13, 1507479, 3211264, 14, 1573015, 3145728, 7, 1638551, 3145728, 8, 1704087, 3145728, 9, 1769623, 3145728, 8, 1835159, 3145728, 9, 1900695, 3145728, 7, 1966231, 3145728, 8, 2031767, 3014656, 18, 2097303, 2883584, 7, 2162839, 2949120, 9, 2228375, 2949120, 9, 2293911, 2949120, 7, 2359447, 2949120, 7, 2424983, 2949120, 8, 2490519, 2949120, 7, 2556055, 2949120, 8, 2621591, 2949120, 9, 152, 3473408, 8, 65688, 3473408, 7, 131224, 3473408, 8, 196760, 3473408, 9, 262296, 3473408, 9, 327832, 3473408, 9, 393368, 3538944, 9, 458904, 3538944, 8, 524440, 3538944, 9, 589976, 3538944, 7, 655512, 3538944, 8, 721048, 3538944, 9, 786584, 3473408, 7, 852120, 3473408, 8, 917656, 3211264, 10, 983192, 3211264, 11, 1048728, 3407872, 8, 1114264, 2949120, 12, 1179800, 3276800, 7, 1245336, 3276800, 8, 1310872, 3276800, 9, 1376408, 3211264, 7, 1441944, 3276800, 13, 1507480, 3276800, 14, 1573016, 3014656, 7, 1638552, 3014656, 8, 1704088, 3014656, 9, 1769624, 3014656, 8, 1835160, 3014656, 9, 1900696, 3014656, 7, 1966232, 3014656, 8, 2031768, 3080192, 18, 2097304, 2949120, 7, 2162840, 2949120, 8, 2228376, 2949120, 9, 2293912, 2818048, 8, 2359448, 2818048, 7, 2424984, 2818048, 8, 2490520, 2818048, 7, 2556056, 2818048, 8, 2621592, 2818048, 9, 153, 3538944, 8, 65689, 3538944, 7, 131225, 3538944, 8, 196761, 3538944, 9, 262297, 3538944, 9, 327833, 3538944, 9, 393369, 3407872, 7, 458905, 3407872, 8, 524441, 3407872, 9, 589977, 3407872, 7, 655513, 3407872, 8, 721049, 3407872, 9, 786585, 3538944, 7, 852121, 3538944, 8, 917657, 3276800, 10, 983193, 3276800, 11, 1048729, 3473408, 8, 1114265, 3014656, 12, 1179801, 3342336, 7, 1245337, 3342336, 8, 1310873, 3342336, 9, 1376409, 3276800, 7, 1441945, 3342336, 13, 1507481, 3342336, 14, 1573017, 3080192, 7, 1638553, 3080192, 8, 1704089, 3080192, 9, 1769625, 3080192, 8, 1835161, 3080192, 9, 1900697, 3080192, 7, 1966233, 3080192, 8, 2031769, 3145728, 18, 2097305, 2818048, 7, 2162841, 2818048, 8, 2228377, 2818048, 9, 2293913, 2818048, 9, 2359449, 2883584, 7, 2424985, 2883584, 8, 2490521, 2883584, 7, 2556057, 2883584, 8, 2621593, 2883584, 9, 154, 3407872, 8, 65690, 3407872, 7, 131226, 3407872, 8, 196762, 3407872, 9, 262298, 3407872, 9, 327834, 3473408, 9, 393370, 3473408, 7, 458906, 3473408, 8, 524442, 3473408, 9, 589978, 3473408, 7, 655514, 3473408, 8, 721050, 3473408, 9, 786586, 3407872, 7, 852122, 3407872, 8, 917658, 3342336, 10, 983194, 3342336, 11, 1048730, 3538944, 8, 1114266, 3080192, 12, 1179802, 3211264, 7, 1245338, 3211264, 8, 1310874, 3211264, 9, 1376410, 3342336, 7, 1441946, 2818048, 13, 1507482, 2818048, 14, 1573018, 3014656, 7, 1638554, 3014656, 8, 1704090, 3014656, 9, 1769626, 3145728, 8, 1835162, 3145728, 9, 1900698, 3145728, 7, 1966234, 3145728, 8, 2031770, 3211264, 18, 2097306, 2883584, 7, 2162842, 2883584, 8, 2228378, 2883584, 9, 2293914, 2883584, 9, 2359450, 2949120, 7, 2424986, 2949120, 8, 2490522, 2949120, 7, 2556058, 2949120, 8, 2621594, 2949120, 9, 155, 3473408, 8, 65691, 3473408, 7, 131227, 3473408, 8, 196763, 3473408, 9, 262299, 3473408, 9, 327835, 3473408, 9, 393371, 3538944, 7, 458907, 3538944, 8, 524443, 3538944, 9, 589979, 3538944, 7, 655515, 3538944, 8, 721051, 3538944, 9, 786587, 3473408, 7, 852123, 3473408, 8, 917659, 3473408, 9, 983195, 3407872, 7, 1048731, 3407872, 8, 1114267, 3604480, 12, 1179803, 3276800, 7, 1245339, 3276800, 8, 1310875, 3276800, 9, 1376411, 3211264, 7, 1441947, 2883584, 13, 1507483, 2883584, 14, 1573019, 3080192, 7, 1638555, 3080192, 8, 1704091, 3080192, 9, 1769627, 3014656, 8, 1835163, 3014656, 9, 1900699, 3014656, 7, 1966235, 3014656, 8, 2031771, 3276800, 18, 2097307, 2949120, 7, 2162843, 2949120, 8, 2228379, 2949120, 9, 2293915, 2949120, 9, 2359451, 2818048, 7, 2424987, 2818048, 8, 2490523, 2818048, 7, 2556059, 2818048, 8, 2621595, 2818048, 9, 156, 3538944, 8, 65692, 3538944, 7, 131228, 3538944, 8, 196764, 3538944, 9, 262300, 3407872, 8, 327836, 3407872, 9, 393372, 3407872, 7, 458908, 3407872, 8, 524444, 3407872, 9, 589980, 3407872, 7, 655516, 3407872, 8, 721052, 3407872, 9, 786588, 3538944, 7, 852124, 3538944, 8, 917660, 3538944, 9, 983196, 3473408, 7, 1048732, 3473408, 8, 1114268, 3670016, 12, 1179804, 3342336, 7, 1245340, 3342336, 8, 1310876, 3342336, 9, 1376412, 3276800, 7, 1441948, 2949120, 13, 1507484, 2949120, 14, 1573020, 3145728, 7, 1638556, 3145728, 8, 1704092, 3211264, 16, 1769628, 3211264, 17, 1835164, 3080192, 9, 1900700, 3080192, 7, 1966236, 3080192, 8, 2031772, 3342336, 18, 2097308, 2949120, 9, 2162844, 2949120, 9, 2228380, 2949120, 9, 2293916, 2949120, 9, 2359452, 2883584, 7, 2424988, 2883584, 8, 2490524, 2883584, 7, 2556060, 2883584, 8, 2621596, 2883584, 9, 157, 3407872, 8, 65693, 3407872, 7, 131229, 3407872, 8, 196765, 3407872, 9, 262301, 3407872, 7, 327837, 3407872, 8, 393373, 3407872, 9, 458909, 3473408, 8, 524445, 3473408, 9, 589981, 3473408, 7, 655517, 3211264, 10, 721053, 3211264, 11, 786589, 3407872, 7, 852125, 3407872, 8, 917661, 3407872, 9, 983197, 3538944, 7, 1048733, 3538944, 8, 1114269, 3735552, 12, 1179805, 3211264, 7, 1245341, 3211264, 8, 1310877, 3211264, 9, 1376413, 3342336, 7, 1441949, 2818048, 13, 1507485, 2818048, 14, 1573021, 3014656, 7, 1638557, 3014656, 8, 1704093, 3276800, 16, 1769629, 3276800, 17, 1835165, 3145728, 9, 1900701, 3145728, 7, 1966237, 3145728, 8, 2031773, 2818048, 18, 2097309, 2818048, 7, 2162845, 2818048, 8, 2228381, 2818048, 9, 2293917, 2818048, 7, 2359453, 2949120, 7, 2424989, 2949120, 8, 2490525, 2949120, 7, 2556061, 2949120, 8, 2621597, 2949120, 9, 158, 3473408, 8, 65694, 3473408, 7, 131230, 3473408, 8, 196766, 3473408, 9, 262302, 3473408, 7, 327838, 3473408, 8, 393374, 3473408, 9, 458910, 3407872, 8, 524446, 3407872, 9, 589982, 3538944, 7, 655518, 3276800, 10, 721054, 3276800, 11, 786590, 3473408, 7, 852126, 3473408, 8, 917662, 3473408, 9, 983198, 3407872, 7, 1048734, 3407872, 8, 1114270, 2883584, 12, 1179806, 3276800, 7, 1245342, 3276800, 8, 1310878, 3276800, 9, 1376414, 3211264, 7, 1441950, 2883584, 13, 1507486, 2883584, 14, 1573022, 3080192, 7, 1638558, 3080192, 8, 1704094, 3342336, 16, 1769630, 3342336, 17, 1835166, 3014656, 9, 1900702, 3014656, 7, 1966238, 3014656, 8, 2031774, 2883584, 18, 2097310, 2883584, 7, 2162846, 2883584, 8, 2228382, 2883584, 9, 2293918, 2883584, 7, 2359454, 2818048, 7, 2424990, 2818048, 8, 2490526, 2818048, 7, 2556062, 2818048, 8, 2621598, 2818048, 9, 159, 3538944, 8, 65695, 3538944, 7, 131231, 3538944, 8, 196767, 3538944, 9, 262303, 3538944, 7, 327839, 3538944, 8, 393375, 3538944, 9, 458911, 3473408, 8, 524447, 3473408, 9, 589983, 3407872, 7, 655519, 3342336, 10, 721055, 3342336, 11, 786591, 3538944, 7, 852127, 3538944, 8, 917663, 3538944, 9, 983199, 3473408, 7, 1048735, 3473408, 8, 1114271, 2949120, 12, 1179807, 3342336, 7, 1245343, 3342336, 8, 1310879, 3342336, 9, 1376415, 3276800, 7, 1441951, 2949120, 13, 1507487, 2949120, 14, 1573023, 3145728, 7, 1638559, 3145728, 8, 1704095, 3145728, 9, 1769631, 3080192, 8, 1835167, 3080192, 9, 1900703, 3080192, 7, 1966239, 3080192, 8, 2031775, 2949120, 18, 2097311, 2949120, 7, 2162847, 2949120, 8, 2228383, 2949120, 9, 2293919, 2949120, 7, 2359455, 2883584, 7, 2424991, 2883584, 8, 2490527, 2883584, 7, 2556063, 2883584, 8, 2621599, 2883584, 9, 160, 3407872, 7, 65696, 3407872, 7, 131232, 3407872, 8, 196768, 3407872, 9, 262304, 3407872, 7, 327840, 3407872, 8, 393376, 3407872, 9, 458912, 3473408, 8, 524448, 3407872, 9, 589984, 3538944, 7, 655520, 3538944, 8, 721056, 3538944, 9, 786592, 3473408, 7, 852128, 3473408, 8, 917664, 3473408, 9, 983200, 3407872, 7, 1048736, 3407872, 8, 1114272, 3080192, 12, 1179808, 3276800, 7, 1245344, 3276800, 8, 1310880, 3276800, 9, 1376416, 3211264, 7, 1441952, 2883584, 13, 1507488, 2883584, 14, 1573024, 3080192, 7, 1638560, 3080192, 8, 1704096, 3080192, 9, 1769632, 3014656, 8, 1835168, 3014656, 9, 1900704, 3080192, 9, 1966240, 3080192, 9, 2031776, 3080192, 18, 2097312, 2883584, 7, 2162848, 2883584, 8, 2228384, 2883584, 9, 2293920, 2883584, 7, 2359456, 2818048, 7, 2424992, 2818048, 8, 2490528, 2818048, 7, 2556064, 2818048, 8, 2621600, 2818048, 9, 161, 3473408, 7, 65697, 3473408, 7, 131233, 3473408, 8, 196769, 3473408, 9, 262305, 3473408, 7, 327841, 3473408, 8, 393377, 3473408, 9, 458913, 3538944, 8, 524449, 3538944, 9, 589985, 3407872, 7, 655521, 3407872, 8, 721057, 3407872, 9, 786593, 3538944, 7, 852129, 3538944, 8, 917665, 3538944, 9, 983201, 3473408, 7, 1048737, 3473408, 8, 1114273, 3145728, 12, 1179809, 3342336, 7, 1245345, 3342336, 8, 1310881, 3342336, 9, 1376417, 3276800, 7, 1441953, 2818048, 13, 1507489, 2818048, 14, 1573025, 3145728, 7, 1638561, 3145728, 8, 1704097, 3145728, 9, 1769633, 3080192, 8, 1835169, 3080192, 9, 1900705, 3080192, 9, 1966241, 3080192, 9, 2031777, 3145728, 18, 2097313, 2949120, 7, 2162849, 2949120, 8, 2228385, 2949120, 9, 2293921, 2949120, 7, 2359457, 2883584, 7, 2424993, 2883584, 8, 2490529, 2883584, 7, 2556065, 2883584, 8, 2621601, 2883584, 9, 162, 3538944, 7, 65698, 3538944, 7, 131234, 3538944, 8, 196770, 3538944, 9, 262306, 3538944, 7, 327842, 3538944, 8, 393378, 3538944, 9, 458914, 3407872, 8, 524450, 3407872, 9, 589986, 3473408, 7, 655522, 3473408, 8, 721058, 3473408, 9, 786594, 3407872, 7, 852130, 3407872, 8, 917666, 3407872, 9, 983202, 3538944, 7, 1048738, 3538944, 8, 1114274, 3211264, 12, 1179810, 3211264, 7, 1245346, 3211264, 8, 1310882, 3211264, 9, 1376418, 3342336, 7, 1441954, 2883584, 13, 1507490, 2883584, 14, 1573026, 3014656, 7, 1638562, 3014656, 8, 1704098, 3014656, 9, 1769634, 3145728, 8, 1835170, 3145728, 9, 1900706, 3080192, 9, 1966242, 3080192, 9, 2031778, 3211264, 18, 2097314, 2818048, 7, 2162850, 2818048, 8, 2228386, 2818048, 9, 2293922, 2818048, 7, 2359458, 2949120, 7, 2424994, 2949120, 8, 2490530, 2949120, 7, 2556066, 2949120, 8, 2621602, 2949120, 9, 163, 3407872, 7, 65699, 3407872, 7, 131235, 3407872, 8, 196771, 3407872, 9, 262307, 3407872, 7, 327843, 3407872, 8, 393379, 3407872, 9, 458915, 3473408, 8, 524451, 3473408, 9, 589987, 3538944, 7, 655523, 3538944, 8, 721059, 3538944, 9, 786595, 3473408, 7, 852131, 3473408, 8, 917667, 3473408, 9, 983203, 3407872, 7, 1048739, 3407872, 8, 1114275, 3276800, 12, 1179811, 3276800, 7, 1245347, 3276800, 8, 1310883, 3276800, 9, 1376419, 3211264, 7, 1441955, 2949120, 13, 1507491, 2949120, 14, 1573027, 3080192, 7, 1638563, 3080192, 8, 1704099, 3080192, 9, 1769635, 3014656, 8, 1835171, 3014656, 9, 1900707, 3080192, 9, 1966243, 3080192, 9, 2031779, 3276800, 18, 2097315, 2883584, 7, 2162851, 2883584, 8, 2228387, 2883584, 9, 2293923, 2883584, 7, 2359459, 2818048, 7, 2424995, 2818048, 8, 2490531, 2818048, 7, 2556067, 2818048, 8, 2621603, 2818048, 9, 164, 3473408, 7, 65700, 3473408, 7, 131236, 3473408, 8, 196772, 3473408, 9, 262308, 3473408, 7, 327844, 3473408, 8, 393380, 3473408, 9, 458916, 3538944, 8, 524452, 3538944, 9, 589988, 3407872, 8, 655524, 3407872, 9, 721060, 3407872, 8, 786596, 3407872, 9, 852132, 3538944, 8, 917668, 3538944, 9, 983204, 3473408, 7, 1048740, 3473408, 8, 1114276, 3342336, 12, 1179812, 3342336, 7, 1245348, 3342336, 8, 1310884, 3342336, 9, 1376420, 3276800, 7, 1441956, 2818048, 13, 1507492, 2818048, 14, 1573028, 3145728, 7, 1638564, 3145728, 8, 1704100, 3145728, 9, 1769636, 3080192, 8, 1835172, 3080192, 9, 1900708, 3080192, 9, 1966244, 3080192, 9, 2031780, 3342336, 18, 2097316, 2949120, 7, 2162852, 2949120, 8, 2228388, 2949120, 9, 2293924, 2949120, 7, 2359460, 2883584, 7, 2424996, 2883584, 8, 2490532, 2883584, 7, 2556068, 2883584, 8, 2621604, 2883584, 9, 165, 3538944, 7, 65701, 3538944, 7, 131237, 3538944, 8, 196773, 3538944, 9, 262309, 3538944, 7, 327845, 3538944, 8, 393381, 3538944, 9, 458917, 3407872, 8, 524453, 3407872, 9, 589989, 3473408, 8, 655525, 3473408, 9, 721061, 3473408, 8, 786597, 3473408, 9, 852133, 3407872, 8, 917669, 3407872, 9, 983205, 3538944, 7, 1048741, 3538944, 8, 1114277, 3407872, 12, 1179813, 3211264, 7, 1245349, 3211264, 8, 1310885, 3211264, 9, 1376421, 3342336, 7, 1441957, 2883584, 13, 1507493, 2883584, 14, 1573029, 3014656, 7, 1638565, 3014656, 8, 1704101, 3014656, 9, 1769637, 3145728, 8, 1835173, 3145728, 9, 1900709, 3080192, 9, 1966245, 3080192, 9, 2031781, 3407872, 18, 2097317, 2818048, 7, 2162853, 2818048, 8, 2228389, 2818048, 9, 2293925, 2818048, 7, 2359461, 2949120, 7, 2424997, 2949120, 8, 2490533, 2949120, 7, 2556069, 2949120, 8, 2621605, 2949120, 9, 166, 3407872, 7, 65702, 3407872, 7, 131238, 3407872, 8, 196774, 3407872, 9, 262310, 3407872, 8, 327846, 3407872, 9, 393382, 3473408, 7, 458918, 3473408, 8, 524454, 3473408, 9, 589990, 3538944, 8, 655526, 3538944, 9, 721062, 3538944, 8, 786598, 3538944, 9, 852134, 3473408, 8, 917670, 3473408, 9, 983206, 3407872, 7, 1048742, 3407872, 8, 1114278, 3473408, 12, 1179814, 3276800, 7, 1245350, 3276800, 8, 1310886, 3276800, 9, 1376422, 3211264, 7, 1441958, 2949120, 13, 1507494, 3407872, 14, 1573030, 3080192, 7, 1638566, 3080192, 8, 1704102, 3080192, 9, 1769638, 3014656, 8, 1835174, 3014656, 9, 1900710, 3080192, 9, 1966246, 3080192, 9, 2031782, 3473408, 18, 2097318, 2883584, 7, 2162854, 2883584, 8, 2228390, 2883584, 9, 2293926, 2883584, 7, 2359462, 2818048, 7, 2424998, 2818048, 8, 2490534, 2818048, 7, 2556070, 2818048, 8, 2621606, 2818048, 9, 167, 3473408, 7, 65703, 3473408, 7, 131239, 3473408, 8, 196775, 3473408, 9, 262311, 3473408, 8, 327847, 3473408, 9, 393383, 3538944, 7, 458919, 3538944, 8, 524455, 3538944, 9, 589991, 3473408, 7, 655527, 3473408, 8, 721063, 3473408, 9, 786599, 3538944, 7, 852135, 3538944, 8, 917671, 3538944, 9, 983207, 3473408, 7, 1048743, 3473408, 8, 1114279, 3538944, 12, 1179815, 3342336, 7, 1245351, 3342336, 8, 1310887, 3342336, 9, 1376423, 3276800, 7, 1441959, 3473408, 13, 1507495, 3473408, 14, 1573031, 3145728, 7, 1638567, 3145728, 8, 1704103, 3145728, 9, 1769639, 3080192, 8, 1835175, 3080192, 9, 1900711, 3080192, 9, 1966247, 3080192, 9, 2031783, 3538944, 18, 2097319, 2949120, 7, 2162855, 2949120, 8, 2228391, 2949120, 9, 2293927, 2949120, 7, 2359463, 2883584, 7, 2424999, 2883584, 8, 2490535, 2883584, 7, 2556071, 2883584, 8, 2621607, 2883584, 9, 168, 3538944, 7, 65704, 3538944, 7, 131240, 3538944, 8, 196776, 3538944, 9, 262312, 3407872, 9, 327848, 3538944, 9, 393384, 3407872, 7, 458920, 3407872, 8, 524456, 3407872, 9, 589992, 3538944, 7, 655528, 3538944, 8, 721064, 3538944, 9, 786600, 3407872, 7, 852136, 3407872, 8, 917672, 3407872, 9, 983208, 3538944, 7, 1048744, 3538944, 8, 1114280, 3604480, 12, 1179816, 3211264, 7, 1245352, 3211264, 8, 1310888, 3211264, 9, 1376424, 3342336, 7, 1441960, 3538944, 13, 1507496, 3538944, 14, 1573032, 3211264, 16, 1638568, 3211264, 17, 1704104, 3014656, 9, 1769640, 3145728, 8, 1835176, 3145728, 9, 1900712, 3080192, 9, 1966248, 3604480, 17, 2031784, 3604480, 18, 2097320, 2818048, 7, 2162856, 2818048, 8, 2228392, 2818048, 9, 2293928, 2818048, 7, 2359464, 2949120, 7, 2425000, 2949120, 8, 2490536, 2949120, 7, 2556072, 2949120, 8, 2621608, 2949120, 9, 169, 3407872, 7, 65705, 3407872, 7, 131241, 3407872, 8, 196777, 3407872, 9, 262313, 3473408, 9, 327849, 3538944, 10, 393385, 3407872, 7, 458921, 3407872, 8, 524457, 3407872, 9, 589993, 3407872, 7, 655529, 3407872, 8, 721065, 3407872, 9, 786601, 3473408, 7, 852137, 3473408, 8, 917673, 3473408, 9, 983209, 3407872, 7, 1048745, 3407872, 8, 1114281, 3670016, 12, 1179817, 3211264, 7, 1245353, 3211264, 8, 1310889, 3211264, 9, 1376425, 3211264, 7, 1441961, 3604480, 13, 1507497, 3604480, 14, 1573033, 3276800, 16, 1638569, 3276800, 17, 1704105, 3014656, 9, 1769641, 3014656, 8, 1835177, 3014656, 9, 1900713, 3080192, 9, 1966249, 3670016, 17, 2031785, 3670016, 18, 2097321, 2818048, 7, 2162857, 2818048, 8, 2228393, 2818048, 9, 2293929, 2818048, 7, 2359465, 2818048, 7, 2425001, 2818048, 8, 2490537, 2818048, 7, 2556073, 2818048, 8, 2621609, 2818048, 9, 170, 3473408, 7, 65706, 3473408, 7, 131242, 3473408, 8, 196778, 3473408, 9, 262314, 3538944, 9, 327850, 3538944, 10, 393386, 3473408, 7, 458922, 3473408, 8, 524458, 3473408, 9, 589994, 3473408, 7, 655530, 3473408, 8, 721066, 3473408, 9, 786602, 3538944, 7, 852138, 3538944, 8, 917674, 3538944, 9, 983210, 3473408, 7, 1048746, 3473408, 8, 1114282, 3735552, 12, 1179818, 3276800, 7, 1245354, 3276800, 8, 1310890, 3276800, 9, 1376426, 3276800, 7, 1441962, 3670016, 13, 1507498, 3670016, 14, 1573034, 3342336, 16, 1638570, 3342336, 17, 1704106, 3080192, 9, 1769642, 3080192, 8, 1835178, 3080192, 9, 1900714, 3080192, 9, 1966250, 3735552, 17, 2031786, 3735552, 18, 2097322, 2883584, 7, 2162858, 2883584, 8, 2228394, 2883584, 9, 2293930, 2883584, 7, 2359466, 2883584, 7, 2425002, 2883584, 8, 2490538, 2883584, 7, 2556074, 2883584, 8, 2621610, 2883584, 9, 171, 3538944, 7, 65707, 3538944, 7, 131243, 3538944, 8, 196779, 3538944, 9, 262315, 3407872, 9, 327851, 3538944, 10, 393387, 3538944, 7, 458923, 3538944, 8, 524459, 3538944, 9, 589995, 3538944, 7, 655531, 3538944, 8, 721067, 3538944, 9, 786603, 3538944, 7, 852139, 3538944, 8, 917675, 3538944, 9, 983211, 3538944, 7, 1048747, 3538944, 8, 1114283, 3342336, 12, 1179819, 3342336, 7, 1245355, 3342336, 8, 1310891, 3342336, 9, 1376427, 3342336, 7, 1441963, 3735552, 13, 1507499, 3735552, 14, 1573035, 3145728, 7, 1638571, 3145728, 8, 1704107, 3145728, 9, 1769643, 3145728, 8, 1835179, 3145728, 9, 1900715, 3080192, 9, 1966251, 3080192, 9, 2031787, 2949120, 18, 2097323, 2949120, 7, 2162859, 2949120, 8, 2228395, 2949120, 9, 2293931, 2949120, 7, 2359467, 2949120, 7, 2425003, 2949120, 8, 2490539, 2949120, 7, 2556075, 2949120, 8, 2621611, 2949120, 9, 172, 3407872, 7, 65708, 3407872, 7, 131244, 3407872, 8, 196780, 3407872, 9, 262316, 3473408, 9, 327852, 3407872, 9, 393388, 3538944, 7, 458924, 3538944, 8, 524460, 3538944, 9, 589996, 3407872, 7, 655532, 3407872, 8, 721068, 3407872, 9, 786604, 3407872, 7, 852140, 3407872, 8, 917676, 3407872, 9, 983212, 3407872, 7, 1048748, 3407872, 8, 1114284, 2883584, 12, 1179820, 3276800, 7, 1245356, 3276800, 8, 1310892, 3276800, 9, 1376428, 3211264, 7, 1441964, 3211264, 13, 1507500, 3211264, 14, 1573036, 3211264, 16, 1638572, 3211264, 17, 1704108, 3014656, 9, 1769644, 3014656, 8, 1835180, 3014656, 9, 1900716, 3014656, 7, 1966252, 3014656, 8, 2031788, 3211264, 18, 2097324, 2949120, 7, 2162860, 2949120, 8, 2228396, 2949120, 9, 2293932, 2818048, 7, 2359468, 2818048, 7, 2425004, 2818048, 8, 2490540, 2818048, 7, 2556076, 2818048, 8, 2621612, 2818048, 9, 173, 3473408, 7, 65709, 3473408, 7, 131245, 3473408, 8, 196781, 3473408, 9, 262317, 3538944, 9, 327853, 3473408, 9, 393389, 3407872, 7, 458925, 3407872, 8, 524461, 3407872, 9, 589997, 3473408, 7, 655533, 3473408, 8, 721069, 3473408, 9, 786605, 3473408, 7, 852141, 3473408, 8, 917677, 3473408, 9, 983213, 3473408, 7, 1048749, 3473408, 8, 1114285, 2949120, 12, 1179821, 3342336, 7, 1245357, 3342336, 8, 1310893, 3342336, 9, 1376429, 3276800, 7, 1441965, 3276800, 13, 1507501, 3276800, 14, 1573037, 3276800, 16, 1638573, 3276800, 17, 1704109, 3080192, 9, 1769645, 3080192, 8, 1835181, 3080192, 9, 1900717, 3080192, 7, 1966253, 3080192, 8, 2031789, 3342336, 18, 2097325, 2818048, 7, 2162861, 2818048, 8, 2228397, 2818048, 9, 2293933, 2883584, 7, 2359469, 2883584, 7, 2425005, 2883584, 8, 2490541, 2883584, 7, 2556077, 2883584, 8, 2621613, 2883584, 9, 174, 3407872, 7, 65710, 3538944, 7, 131246, 3538944, 8, 196782, 3538944, 9, 262318, 3538944, 8, 327854, 3538944, 9, 393390, 3473408, 7, 458926, 3473408, 8, 524462, 3473408, 9, 589998, 3538944, 7, 655534, 3538944, 8, 721070, 3211264, 10, 786606, 3211264, 11, 852142, 3538944, 8, 917678, 3538944, 9, 983214, 3538944, 7, 1048750, 3538944, 8, 1114286, 3014656, 12, 1179822, 3211264, 7, 1245358, 3211264, 8, 1310894, 3211264, 9, 1376430, 3342336, 7, 1441966, 3342336, 13, 1507502, 3342336, 14, 1573038, 3342336, 16, 1638574, 3342336, 17, 1704110, 3145728, 9, 1769646, 3145728, 8, 1835182, 3145728, 9, 1900718, 3145728, 7, 1966254, 3145728, 8, 2031790, 3342336, 18, 2097326, 2883584, 7, 2162862, 2883584, 8, 2228398, 2883584, 9, 2293934, 2949120, 7, 2359470, 2949120, 7, 2425006, 2949120, 8, 2490542, 2949120, 7, 2556078, 2949120, 8, 2621614, 2949120, 9, 175, 3473408, 7, 65711, 3407872, 7, 131247, 3407872, 8, 196783, 3407872, 9, 262319, 3407872, 8, 327855, 3407872, 9, 393391, 3538944, 7, 458927, 3538944, 8, 524463, 3538944, 9, 589999, 3407872, 7, 655535, 3407872, 8, 721071, 3276800, 10, 786607, 3276800, 11, 852143, 3407872, 8, 917679, 3407872, 9, 983215, 3407872, 7, 1048751, 3407872, 8, 1114287, 3080192, 12, 1179823, 3276800, 7, 1245359, 3276800, 8, 1310895, 3276800, 9, 1376431, 3211264, 7, 1441967, 2818048, 13, 1507503, 2818048, 14, 1573039, 3014656, 7, 1638575, 3014656, 8, 1704111, 3014656, 9, 1769647, 3014656, 8, 1835183, 3014656, 9, 1900719, 3014656, 7, 1966255, 3014656, 8, 2031791, 3342336, 18, 2097327, 2949120, 7, 2162863, 2949120, 8, 2228399, 2949120, 9, 2293935, 2818048, 7, 2359471, 2818048, 7, 2425007, 2818048, 8, 2490543, 2818048, 7, 2556079, 2818048, 8, 2621615, 2818048, 9, 176, 3538944, 7, 65712, 3473408, 7, 131248, 3473408, 8, 196784, 3473408, 9, 262320, 3473408, 8, 327856, 3473408, 9, 393392, 3407872, 7, 458928, 3407872, 8, 524464, 3407872, 9, 590000, 3473408, 7, 655536, 3473408, 8, 721072, 3342336, 10, 786608, 3342336, 11, 852144, 3473408, 8, 917680, 3473408, 9, 983216, 3473408, 7, 1048752, 3473408, 8, 1114288, 3145728, 12, 1179824, 3342336, 7, 1245360, 3342336, 8, 1310896, 3342336, 9, 1376432, 3276800, 7, 1441968, 2883584, 13, 1507504, 2883584, 14, 1573040, 3080192, 7, 1638576, 3080192, 8, 1704112, 3080192, 9, 1769648, 3080192, 8, 1835184, 3080192, 9, 1900720, 3080192, 7, 1966256, 3080192, 8, 2031792, 3342336, 18, 2097328, 2818048, 7, 2162864, 2818048, 8, 2228400, 2818048, 9, 2293936, 2883584, 7, 2359472, 2883584, 7, 2425008, 2883584, 8, 2490544, 2883584, 7, 2556080, 2883584, 8, 2621616, 2883584, 9, 177, 3407872, 7, 65713, 3538944, 7, 131249, 3538944, 8, 196785, 3538944, 9, 262321, 3538944, 8, 327857, 3538944, 9, 393393, 3473408, 7, 458929, 3473408, 8, 524465, 3473408, 9, 590001, 3538944, 7, 655537, 3538944, 8, 721073, 3538944, 9, 786609, 3538944, 7, 852145, 3538944, 8, 917681, 3538944, 9, 983217, 3538944, 7, 1048753, 3538944, 8, 1114289, 3211264, 12, 1179825, 3211264, 7, 1245361, 3211264, 8, 1310897, 3211264, 9, 1376433, 3342336, 7, 1441969, 2949120, 13, 1507505, 2949120, 14, 1573041, 3145728, 7, 1638577, 3145728, 8, 1704113, 3145728, 9, 1769649, 3145728, 8, 1835185, 3145728, 9, 1900721, 3145728, 7, 1966257, 3145728, 8, 2031793, 3342336, 18, 2097329, 2883584, 7, 2162865, 2883584, 8, 2228401, 2949120, 9, 2293937, 2949120, 7, 2359473, 2949120, 7, 2425009, 2949120, 8, 2490545, 2949120, 7, 2556081, 2949120, 8, 2621617, 2949120, 9, 178, 3473408, 7, 65714, 3473408, 8, 131250, 3473408, 9, 196786, 3407872, 7, 262322, 3407872, 8, 327858, 3407872, 9, 393394, 3538944, 7, 458930, 3538944, 8, 524466, 3538944, 9, 590002, 3407872, 7, 655538, 3407872, 8, 721074, 3407872, 9, 786610, 3407872, 7, 852146, 3407872, 8, 917682, 3407872, 9, 983218, 3407872, 7, 1048754, 3407872, 8, 1114290, 3276800, 12, 1179826, 3276800, 7, 1245362, 3276800, 8, 1310898, 3276800, 9, 1376434, 3211264, 7, 1441970, 3604480, 13, 1507506, 3604480, 14, 1573042, 3014656, 7, 1638578, 3014656, 8, 1704114, 3014656, 9, 1769650, 3014656, 8, 1835186, 3014656, 9, 1900722, 3014656, 7, 1966258, 3014656, 8, 2031794, 3342336, 18, 2097330, 2949120, 7, 2162866, 2949120, 8, 2228402, 2949120, 9, 2293938, 2818048, 7, 2359474, 2818048, 7, 2425010, 2818048, 8, 2490546, 2818048, 7, 2556082, 2818048, 8, 2621618, 2818048, 9, 179, 3538944, 7, 65715, 3538944, 8, 131251, 3538944, 9, 196787, 3473408, 7, 262323, 3473408, 8, 327859, 3473408, 9, 393395, 3407872, 7, 458931, 3407872, 8, 524467, 3407872, 9, 590003, 3473408, 7, 655539, 3473408, 8, 721075, 3473408, 9, 786611, 3473408, 7, 852147, 3473408, 8, 917683, 3473408, 9, 983219, 3473408, 7, 1048755, 3473408, 8, 1114291, 3342336, 12, 1179827, 3342336, 7, 1245363, 3342336, 8, 1310899, 3342336, 9, 1376435, 3276800, 7, 1441971, 3670016, 13, 1507507, 3670016, 14, 1573043, 3080192, 7, 1638579, 3080192, 8, 1704115, 3080192, 9, 1769651, 3080192, 8, 1835187, 3080192, 9, 1900723, 3080192, 7, 1966259, 3080192, 8, 2031795, 3407872, 18, 2097331, 2818048, 7, 2162867, 2818048, 8, 2228403, 2818048, 9, 2293939, 2883584, 7, 2359475, 2883584, 7, 2425011, 2883584, 8, 2490547, 2883584, 7, 2556083, 2883584, 8, 2621619, 2883584, 9, 180, 3407872, 7, 65716, 3407872, 8, 131252, 3407872, 9, 196788, 3538944, 7, 262324, 3538944, 8, 327860, 3538944, 9, 393396, 3473408, 7, 458932, 3473408, 8, 524468, 3473408, 9, 590004, 3538944, 7, 655540, 3538944, 8, 721076, 3538944, 9, 786612, 3538944, 7, 852148, 3538944, 8, 917684, 3538944, 9, 983220, 3538944, 7, 1048756, 3538944, 8, 1114292, 3407872, 12, 1179828, 3211264, 7, 1245364, 3211264, 8, 1310900, 3211264, 9, 1376436, 3342336, 7, 1441972, 3735552, 13, 1507508, 3735552, 14, 1573044, 3145728, 7, 1638580, 3145728, 8, 1704116, 3145728, 9, 1769652, 3145728, 8, 1835188, 3145728, 9, 1900724, 3145728, 7, 1966260, 3145728, 8, 2031796, 3473408, 18, 2097332, 2883584, 7, 2162868, 2883584, 8, 2228404, 2883584, 9, 2293940, 2949120, 7, 2359476, 2949120, 7, 2425012, 2949120, 8, 2490548, 2949120, 7, 2556084, 2949120, 8, 2621620, 2949120, 9, 181, 3473408, 7, 65717, 3473408, 8, 131253, 3473408, 9, 196789, 3407872, 7, 262325, 3407872, 8, 327861, 3407872, 9, 393397, 3538944, 7, 458933, 3538944, 8, 524469, 3538944, 9, 590005, 3407872, 7, 655541, 3407872, 8, 721077, 3407872, 9, 786613, 3407872, 7, 852149, 3407872, 8, 917685, 3407872, 9, 983221, 3407872, 7, 1048757, 3407872, 8, 1114293, 3473408, 12, 1179829, 3276800, 7, 1245365, 3276800, 8, 1310901, 3276800, 9, 1376437, 3211264, 7, 1441973, 2818048, 13, 1507509, 2818048, 14, 1573045, 3014656, 7, 1638581, 3014656, 8, 1704117, 2949120, 16, 1769653, 2949120, 17, 1835189, 3014656, 9, 1900725, 3014656, 7, 1966261, 3014656, 8, 2031797, 3538944, 18, 2097333, 2949120, 7, 2162869, 2949120, 8, 2228405, 2949120, 9, 2293941, 2818048, 7, 2359477, 2818048, 7, 2425013, 2818048, 8, 2490549, 2818048, 7, 2556085, 2818048, 8, 2621621, 2818048, 9, 182, 3538944, 7, 65718, 3538944, 8, 131254, 3538944, 9, 196790, 3473408, 7, 262326, 3473408, 8, 327862, 3473408, 9, 393398, 3407872, 7, 458934, 3407872, 8, 524470, 3407872, 9, 590006, 3473408, 7, 655542, 3473408, 8, 721078, 3473408, 9, 786614, 3473408, 7, 852150, 3473408, 8, 917686, 3473408, 9, 983222, 3473408, 7, 1048758, 3473408, 8, 1114294, 3538944, 12, 1179830, 3342336, 7, 1245366, 3342336, 8, 1310902, 3342336, 9, 1376438, 3276800, 7, 1441974, 2883584, 13, 1507510, 2883584, 14, 1573046, 3080192, 7, 1638582, 3080192, 8, 1704118, 3014656, 16, 1769654, 3014656, 17, 1835190, 3080192, 9, 1900726, 3080192, 7, 1966262, 3604480, 17, 2031798, 3604480, 18, 2097334, 2818048, 7, 2162870, 2818048, 8, 2228406, 2818048, 9, 2293942, 2883584, 7, 2359478, 2883584, 7, 2425014, 2883584, 8, 2490550, 2883584, 7, 2556086, 2883584, 8, 2621622, 2883584, 9, 183, 3407872, 7, 65719, 3407872, 8, 131255, 3407872, 9, 196791, 3538944, 7, 262327, 3538944, 8, 327863, 3538944, 9, 393399, 3473408, 7, 458935, 3473408, 8, 524471, 3473408, 9, 590007, 3538944, 7, 655543, 3538944, 8, 721079, 3538944, 9, 786615, 3538944, 7, 852151, 3538944, 8, 917687, 3538944, 9, 983223, 3538944, 7, 1048759, 3538944, 8, 1114295, 3604480, 12, 1179831, 3211264, 7, 1245367, 3211264, 8, 1310903, 3211264, 9, 1376439, 3342336, 7, 1441975, 2949120, 13, 1507511, 2949120, 14, 1573047, 3145728, 7, 1638583, 3145728, 8, 1704119, 3080192, 16, 1769655, 3080192, 17, 1835191, 3145728, 9, 1900727, 3145728, 7, 1966263, 3670016, 17, 2031799, 3670016, 18, 2097335, 2883584, 7, 2162871, 2883584, 8, 2228407, 2883584, 9, 2293943, 2949120, 7, 2359479, 2949120, 7, 2425015, 2949120, 8, 2490551, 2949120, 7, 2556087, 2949120, 8, 2621623, 2949120, 9, 184, 3473408, 7, 65720, 3473408, 8, 131256, 3473408, 9, 196792, 3407872, 7, 262328, 3407872, 8, 327864, 3407872, 9, 393400, 3538944, 7, 458936, 3538944, 8, 524472, 3538944, 9, 590008, 3407872, 7, 655544, 3407872, 8, 721080, 3407872, 9, 786616, 3407872, 7, 852152, 3407872, 8, 917688, 3407872, 9, 983224, 3407872, 7, 1048760, 3407872, 8, 1114296, 3670016, 12, 1179832, 3276800, 7, 1245368, 3276800, 8, 1310904, 3276800, 9, 1376440, 3211264, 7, 1441976, 2818048, 13, 1507512, 2818048, 14, 1573048, 3014656, 7, 1638584, 3014656, 8, 1704120, 3145728, 16, 1769656, 3145728, 17, 1835192, 3014656, 9, 1900728, 3014656, 7, 1966264, 3735552, 17, 2031800, 3735552, 18, 2097336, 2949120, 7, 2162872, 2949120, 8, 2228408, 2949120, 9, 2293944, 2818048, 7, 2359480, 2818048, 7, 2425016, 2818048, 8, 2490552, 2818048, 7, 2556088, 2818048, 8, 2621624, 2818048, 9, 185, 3538944, 7, 65721, 3538944, 8, 131257, 3538944, 9, 196793, 3473408, 7, 262329, 3473408, 8, 327865, 3473408, 9, 393401, 3407872, 9, 458937, 3407872, 8, 524473, 3407872, 9, 590009, 3407872, 7, 655545, 3407872, 8, 721081, 3407872, 9, 786617, 3473408, 7, 852153, 3473408, 8, 917689, 3473408, 9, 983225, 3473408, 7, 1048761, 3473408, 8, 1114297, 3735552, 12, 1179833, 3342336, 7, 1245369, 3342336, 8, 1310905, 3342336, 9, 1376441, 3276800, 7, 1441977, 2883584, 13, 1507513, 2883584, 14, 1573049, 3080192, 7, 1638585, 3080192, 8, 1704121, 3080192, 9, 1769657, 3080192, 8, 1835193, 3080192, 9, 1900729, 3080192, 7, 1966265, 3080192, 8, 2031801, 2949120, 18, 2097337, 2818048, 7, 2162873, 2818048, 8, 2228409, 2818048, 9, 2293945, 2883584, 7, 2359481, 2883584, 7, 2425017, 2883584, 8, 2490553, 2883584, 7, 2556089, 2883584, 8, 2621625, 2883584, 9, 186, 3407872, 7, 65722, 3407872, 8, 131258, 3407872, 9, 196794, 3538944, 7, 262330, 3538944, 8, 327866, 3538944, 9, 393402, 3473408, 9, 458938, 3473408, 8, 524474, 3473408, 9, 590010, 3473408, 7, 655546, 3473408, 8, 721082, 3473408, 9, 786618, 3407872, 7, 852154, 3407872, 8, 917690, 3407872, 9, 983226, 3538944, 7, 1048762, 3538944, 8, 1114298, 2883584, 12, 1179834, 3211264, 7, 1245370, 3211264, 8, 1310906, 3211264, 9, 1376442, 3342336, 7, 1441978, 3211264, 13, 1507514, 3211264, 14, 1573050, 3145728, 7, 1638586, 3145728, 8, 1704122, 3145728, 9, 1769658, 3145728, 8, 1835194, 3145728, 9, 1900730, 3145728, 7, 1966266, 3145728, 8, 2031802, 3014656, 18, 2097338, 2883584, 7, 2162874, 2949120, 9, 2228410, 2949120, 9, 2293946, 2949120, 7, 2359482, 2949120, 7, 2425018, 2949120, 8, 2490554, 2949120, 7, 2556090, 2949120, 8, 2621626, 2949120, 9, 187, 3473408, 7, 65723, 3473408, 8, 131259, 3473408, 9, 196795, 3407872, 7, 262331, 3407872, 8, 327867, 3407872, 9, 393403, 3538944, 9, 458939, 3538944, 8, 524475, 3538944, 9, 590011, 3538944, 7, 655547, 3538944, 8, 721083, 3538944, 9, 786619, 3473408, 7, 852155, 3473408, 8, 917691, 3211264, 10, 983227, 3211264, 11, 1048763, 3407872, 8, 1114299, 2949120, 12, 1179835, 3276800, 7, 1245371, 3276800, 8, 1310907, 3276800, 9, 1376443, 3211264, 7, 1441979, 3276800, 13, 1507515, 3276800, 14, 1573051, 3014656, 7, 1638587, 3014656, 8, 1704123, 3014656, 9, 1769659, 3014656, 8, 1835195, 3014656, 9, 1900731, 3014656, 7, 1966267, 3014656, 8, 2031803, 3080192, 18, 2097339, 2949120, 7, 2162875, 2949120, 8, 2228411, 2949120, 9, 2293947, 2818048, 8, 2359483, 2818048, 7, 2425019, 2818048, 8, 2490555, 2818048, 7, 2556091, 2818048, 8, 2621627, 2818048, 9, 188, 3538944, 7, 65724, 3538944, 8, 131260, 3538944, 9, 196796, 3473408, 7, 262332, 3473408, 8, 327868, 3473408, 9, 393404, 3407872, 7, 458940, 3407872, 8, 524476, 3407872, 9, 590012, 3407872, 7, 655548, 3407872, 8, 721084, 3407872, 9, 786620, 3538944, 7, 852156, 3538944, 8, 917692, 3276800, 10, 983228, 3276800, 11, 1048764, 3473408, 8, 1114300, 3014656, 12, 1179836, 3342336, 7, 1245372, 3342336, 8, 1310908, 3342336, 9, 1376444, 3276800, 7, 1441980, 3342336, 13, 1507516, 3342336, 14, 1573052, 3080192, 7, 1638588, 3080192, 8, 1704124, 3080192, 9, 1769660, 3080192, 8, 1835196, 3080192, 9, 1900732, 3080192, 7, 1966268, 3080192, 8, 2031804, 3145728, 18, 2097340, 2818048, 7, 2162876, 2818048, 8, 2228412, 2818048, 9, 2293948, 2818048, 9, 2359484, 2883584, 7, 2425020, 2883584, 8, 2490556, 2883584, 7, 2556092, 2883584, 8, 2621628, 2883584, 9, 189, 3407872, 7, 65725, 3407872, 8, 131261, 3407872, 9, 196797, 3538944, 7, 262333, 3538944, 8, 327869, 3538944, 9, 393405, 3473408, 7, 458941, 3473408, 8, 524477, 3473408, 9, 590013, 3473408, 7, 655549, 3473408, 8, 721085, 3473408, 9, 786621, 3407872, 7, 852157, 3407872, 8, 917693, 3342336, 10, 983229, 3342336, 11, 1048765, 3538944, 8, 1114301, 3080192, 12, 1179837, 3211264, 7, 1245373, 3211264, 8, 1310909, 3211264, 9, 1376445, 3342336, 7, 1441981, 2818048, 13, 1507517, 2818048, 14, 1573053, 3014656, 7, 1638589, 3014656, 8, 1704125, 3014656, 9, 1769661, 3145728, 8, 1835197, 3145728, 9, 1900733, 3145728, 7, 1966269, 3145728, 8, 2031805, 3211264, 18, 2097341, 2883584, 7, 2162877, 2883584, 8, 2228413, 2883584, 9, 2293949, 2883584, 9, 2359485, 2949120, 7, 2425021, 2949120, 8, 2490557, 2949120, 7, 2556093, 2949120, 8, 2621629, 2949120, 9, 190, 3473408, 7, 65726, 3473408, 8, 131262, 3473408, 9, 196798, 3407872, 7, 262334, 3407872, 8, 327870, 3407872, 9, 393406, 3538944, 7, 458942, 3538944, 8, 524478, 3538944, 9, 590014, 3538944, 7, 655550, 3538944, 8, 721086, 3538944, 9, 786622, 3473408, 7, 852158, 3473408, 8, 917694, 3473408, 9, 983230, 3407872, 7, 1048766, 3407872, 8, 1114302, 3604480, 12, 1179838, 3276800, 7, 1245374, 3276800, 8, 1310910, 3276800, 9, 1376446, 3211264, 7, 1441982, 2883584, 13, 1507518, 2883584, 14, 1573054, 3080192, 7, 1638590, 3080192, 8, 1704126, 3080192, 9, 1769662, 3014656, 8, 1835198, 3014656, 9, 1900734, 3014656, 7, 1966270, 3014656, 8, 2031806, 3276800, 18, 2097342, 2949120, 7, 2162878, 2949120, 8, 2228414, 2949120, 9, 2293950, 2949120, 9, 2359486, 2818048, 7, 2425022, 2818048, 8, 2490558, 2818048, 7, 2556094, 2818048, 8, 2621630, 2818048, 9, 191, 3538944, 7, 65727, 3538944, 8, 131263, 3538944, 9, 196799, 3473408, 7, 262335, 3473408, 8, 327871, 3473408, 9, 393407, 3407872, 7, 458943, 3407872, 8, 524479, 3407872, 9, 590015, 3407872, 7, 655551, 3407872, 8, 721087, 3407872, 9, 786623, 3538944, 7, 852159, 3538944, 8, 917695, 3538944, 9, 983231, 3473408, 7, 1048767, 3473408, 8, 1114303, 3670016, 12, 1179839, 3342336, 7, 1245375, 3342336, 8, 1310911, 3342336, 9, 1376447, 3276800, 7, 1441983, 2949120, 13, 1507519, 2949120, 14, 1573055, 3145728, 7, 1638591, 3145728, 8, 1704127, 3211264, 16, 1769663, 3211264, 17, 1835199, 3080192, 9, 1900735, 3080192, 7, 1966271, 3080192, 8, 2031807, 3342336, 18, 2097343, 2949120, 9, 2162879, 2949120, 9, 2228415, 2949120, 9, 2293951, 2949120, 9, 2359487, 2883584, 7, 2425023, 2883584, 8, 2490559, 2883584, 7, 2556095, 2883584, 8, 2621631, 2883584, 9, 192, 3407872, 7, 65728, 3407872, 8, 131264, 3407872, 9, 196800, 3538944, 7, 262336, 3538944, 8, 327872, 3538944, 9, 393408, 3473408, 7, 458944, 3473408, 8, 524480, 3473408, 9, 590016, 3473408, 7, 655552, 3211264, 10, 721088, 3211264, 11, 786624, 3407872, 7, 852160, 3407872, 8, 917696, 3407872, 9, 983232, 3538944, 7, 1048768, 3538944, 8, 1114304, 3735552, 12, 1179840, 3211264, 7, 1245376, 3211264, 8, 1310912, 3211264, 9, 1376448, 3342336, 7, 1441984, 2818048, 13, 1507520, 2818048, 14, 1573056, 3014656, 7, 1638592, 3014656, 8, 1704128, 3276800, 16, 1769664, 3276800, 17, 1835200, 3145728, 9, 1900736, 3145728, 7, 1966272, 3145728, 8, 2031808, 2818048, 18, 2097344, 2818048, 7, 2162880, 2818048, 8, 2228416, 2818048, 9, 2293952, 2818048, 7, 2359488, 2949120, 7, 2425024, 2949120, 8, 2490560, 2949120, 7, 2556096, 2949120, 8, 2621632, 2949120, 9, 193, 3473408, 7, 65729, 3473408, 8, 131265, 3473408, 9, 196801, 3407872, 7, 262337, 3407872, 8, 327873, 3407872, 9, 393409, 3407872, 9, 458945, 3407872, 8, 524481, 3407872, 9, 590017, 3538944, 7, 655553, 3276800, 10, 721089, 3276800, 11, 786625, 3473408, 7, 852161, 3473408, 8, 917697, 3473408, 9, 983233, 3407872, 7, 1048769, 3407872, 8, 1114305, 2883584, 12, 1179841, 3276800, 7, 1245377, 3276800, 8, 1310913, 3276800, 9, 1376449, 3211264, 7, 1441985, 2883584, 13, 1507521, 2883584, 14, 1573057, 3080192, 7, 1638593, 3080192, 8, 1704129, 3342336, 16, 1769665, 3342336, 17, 1835201, 3014656, 9, 1900737, 3014656, 7, 1966273, 3014656, 8, 2031809, 2883584, 18, 2097345, 2883584, 7, 2162881, 2883584, 8, 2228417, 2883584, 9, 2293953, 2883584, 7, 2359489, 2818048, 7, 2425025, 2818048, 8, 2490561, 2818048, 7, 2556097, 2818048, 8, 2621633, 2818048, 9, 194, 3538944, 7, 65730, 3538944, 8, 131266, 3538944, 9, 196802, 3473408, 7, 262338, 3473408, 8, 327874, 3473408, 9, 393410, 3473408, 9, 458946, 3473408, 8, 524482, 3473408, 9, 590018, 3407872, 7, 655554, 3342336, 10, 721090, 3342336, 11, 786626, 3538944, 7, 852162, 3538944, 8, 917698, 3538944, 9, 983234, 3473408, 7, 1048770, 3473408, 8, 1114306, 2949120, 12, 1179842, 3342336, 7, 1245378, 3342336, 8, 1310914, 3342336, 9, 1376450, 3276800, 7, 1441986, 2949120, 13, 1507522, 2949120, 14, 1573058, 3145728, 7, 1638594, 3145728, 8, 1704130, 3145728, 9, 1769666, 3080192, 8, 1835202, 3080192, 9, 1900738, 3080192, 7, 1966274, 3080192, 8, 2031810, 2949120, 18, 2097346, 2949120, 7, 2162882, 2949120, 8, 2228418, 2949120, 9, 2293954, 2949120, 7, 2359490, 2883584, 7, 2425026, 2883584, 8, 2490562, 2883584, 7, 2556098, 2883584, 8, 2621634, 2883584, 9, 195, 3407872, 7, 65731, 3407872, 8, 131267, 3407872, 9, 196803, 3538944, 7, 262339, 3538944, 8, 327875, 3538944, 9, 393411, 3538944, 9, 458947, 3538944, 8, 524483, 3538944, 9, 590019, 3211264, 11, 655555, 3473408, 8, 721091, 3473408, 9, 786627, 3407872, 7, 852163, 3407872, 8, 917699, 3407872, 9, 983235, 3538944, 7, 1048771, 3538944, 8, 1114307, 3014656, 12, 1179843, 3211264, 7, 1245379, 3211264, 8, 1310915, 3211264, 9, 1376451, 3342336, 7, 1441987, 2818048, 13, 1507523, 2818048, 14, 1573059, 3014656, 7, 1638595, 3014656, 8, 1704131, 3014656, 9, 1769667, 3145728, 8, 1835203, 3145728, 9, 1900739, 3145728, 7, 1966275, 3604480, 17, 2031811, 3604480, 18, 2097347, 2818048, 7, 2162883, 2818048, 8, 2228419, 2818048, 9, 2293955, 2818048, 7, 2359491, 2818048, 8, 2425027, 2818048, 9, 2490563, 2818048, 7, 2556099, 2818048, 8, 2621635, 2818048, 9, 196, 3473408, 7, 65732, 3473408, 8, 131268, 3473408, 9, 196804, 3407872, 7, 262340, 3407872, 8, 327876, 3407872, 9, 393412, 3473408, 7, 458948, 3473408, 8, 524484, 3473408, 9, 590020, 3276800, 11, 655556, 2949120, 10, 721092, 2949120, 11, 786628, 3473408, 7, 852164, 3473408, 8, 917700, 3473408, 9, 983236, 3473408, 7, 1048772, 3473408, 8, 1114308, 2883584, 12, 1179844, 3276800, 7, 1245380, 3276800, 8, 1310916, 3276800, 9, 1376452, 3276800, 7, 1441988, 3407872, 13, 1507524, 3407872, 14, 1573060, 3080192, 7, 1638596, 3080192, 8, 1704132, 3080192, 9, 1769668, 3080192, 8, 1835204, 3080192, 9, 1900740, 3080192, 7, 1966276, 3670016, 17, 2031812, 3670016, 18, 2097348, 2883584, 7, 2162884, 2883584, 8, 2228420, 2883584, 9, 2293956, 2883584, 7, 2359492, 2883584, 8, 2425028, 2883584, 9, 2490564, 2883584, 7, 2556100, 2883584, 8, 2621636, 2883584, 9, 197, 3538944, 7, 65733, 3538944, 8, 131269, 3538944, 9, 196805, 3473408, 7, 262341, 3473408, 8, 327877, 3473408, 9, 393413, 3538944, 7, 458949, 3538944, 8, 524485, 3538944, 9, 590021, 3342336, 11, 655557, 2949120, 11, 721093, 2949120, 11, 786629, 3538944, 7, 852165, 3538944, 8, 917701, 3538944, 9, 983237, 3538944, 7, 1048773, 3538944, 8, 1114309, 2949120, 12, 1179845, 3342336, 7, 1245381, 3342336, 8, 1310917, 3342336, 9, 1376453, 3342336, 7, 1441989, 3473408, 13, 1507525, 3473408, 14, 1573061, 3145728, 7, 1638597, 3145728, 8, 1704133, 3145728, 9, 1769669, 3145728, 8, 1835205, 3145728, 9, 1900741, 3145728, 7, 1966277, 3735552, 17, 2031813, 3735552, 18, 2097349, 2949120, 7, 2162885, 2949120, 8, 2228421, 2949120, 9, 2293957, 2949120, 7, 2359493, 2949120, 8, 2425029, 2949120, 9, 2490565, 2949120, 7, 2556101, 2949120, 8, 2621637, 2949120, 9, 198, 3407872, 7, 65734, 3407872, 8, 131270, 3407872, 9, 196806, 3538944, 7, 262342, 3538944, 8, 327878, 3538944, 9, 393414, 3407872, 7, 458950, 3407872, 8, 524486, 3407872, 9, 590022, 3407872, 7, 655558, 2949120, 11, 721094, 2949120, 11, 786630, 3407872, 7, 852166, 3407872, 8, 917702, 3407872, 9, 983238, 3407872, 7, 1048774, 3407872, 8, 1114310, 3014656, 12, 1179846, 3211264, 7, 1245382, 3211264, 8, 1310918, 3211264, 9, 1376454, 3342336, 7, 1441990, 3538944, 13, 1507526, 3538944, 14, 1573062, 3211264, 16, 1638598, 3211264, 17, 1704134, 2949120, 15, 1769670, 3014656, 8, 1835206, 3014656, 9, 1900742, 3014656, 7, 1966278, 3014656, 8, 2031814, 3014656, 18, 2097350, 2818048, 7, 2162886, 2818048, 8, 2228422, 2818048, 7, 2293958, 2818048, 8, 2359494, 2818048, 7, 2425030, 2818048, 8, 2490566, 2818048, 9, 2556102, 2818048, 8, 2621638, 2818048, 9, 199, 3473408, 7, 65735, 3473408, 8, 131271, 3473408, 9, 196807, 3407872, 7, 262343, 3407872, 8, 327879, 3407872, 9, 393415, 3407872, 7, 458951, 3407872, 8, 524487, 3407872, 9, 590023, 3473408, 7, 655559, 3145728, 10, 721095, 2949120, 11, 786631, 3473408, 7, 852167, 3473408, 8, 917703, 3473408, 9, 983239, 3473408, 7, 1048775, 3473408, 8, 1114311, 3080192, 12, 1179847, 3276800, 7, 1245383, 3276800, 8, 1310919, 3276800, 9, 1376455, 3211264, 7, 1441991, 2949120, 13, 1507527, 3211264, 14, 1573063, 3276800, 16, 1638599, 3276800, 17, 1704135, 2949120, 15, 1769671, 3080192, 8, 1835207, 3080192, 9, 1900743, 3080192, 7, 1966279, 3080192, 8, 2031815, 3080192, 18, 2097351, 2883584, 7, 2162887, 2883584, 8, 2228423, 2883584, 7, 2293959, 2883584, 8, 2359495, 2883584, 7, 2425031, 2883584, 8, 2490567, 2883584, 9, 2556103, 2883584, 8, 2621639, 2883584, 9, 200, 3538944, 7, 65736, 3538944, 8, 131272, 3538944, 9, 196808, 3473408, 7, 262344, 3473408, 8, 327880, 3473408, 9, 393416, 3473408, 7, 458952, 3473408, 8, 524488, 3473408, 9, 590024, 3538944, 7, 655560, 3211264, 10, 721096, 2949120, 11, 786632, 3538944, 7, 852168, 3538944, 8, 917704, 3538944, 9, 983240, 3538944, 7, 1048776, 3538944, 8, 1114312, 3145728, 12, 1179848, 3342336, 7, 1245384, 3342336, 8, 1310920, 3342336, 9, 1376456, 3276800, 7, 1441992, 2949120, 13, 1507528, 3211264, 14, 1573064, 3342336, 16, 1638600, 3342336, 17, 1704136, 2949120, 15, 1769672, 3145728, 8, 1835208, 3145728, 9, 1900744, 3145728, 7, 1966280, 3145728, 8, 2031816, 3145728, 18, 2097352, 2949120, 7, 2162888, 2949120, 8, 2228424, 2949120, 7, 2293960, 2949120, 8, 2359496, 2949120, 7, 2425032, 2949120, 8, 2490568, 2949120, 9, 2556104, 2949120, 8, 2621640, 2949120, 9)

[node name="plank" type="Sprite2D" parent="."]
position = Vector2(3103, 165)
scale = Vector2(1.23333, 1.18421)
texture = ExtResource("4_ehobp")
region_enabled = true
region_rect = Rect2(15, 251, 45, 25)

[node name="grass" type="Sprite2D" parent="."]
position = Vector2(2939, 333)
scale = Vector2(1.23333, 1.18421)
texture = ExtResource("4_ehobp")
region_enabled = true
region_rect = Rect2(64, 72, 38, 11)

[node name="grass2" type="Sprite2D" parent="."]
position = Vector2(23, 138)
scale = Vector2(1.23333, 1.18421)
texture = ExtResource("4_ehobp")
region_enabled = true
region_rect = Rect2(63, 75, 18, 8)

[node name="grass3" type="Sprite2D" parent="."]
position = Vector2(54, 136)
scale = Vector2(1.23333, 1.18421)
texture = ExtResource("4_ehobp")
flip_h = true
region_enabled = true
region_rect = Rect2(64, 72, 38, 11)

[node name="Player" type="CharacterBody2D" parent="." groups=["Player"]]
position = Vector2(27, 123)
collision_layer = 32
script = ExtResource("4_l5m5t")

[node name="CollisionShape2D" type="CollisionShape2D" parent="Player"]
position = Vector2(-3, 9.5)
shape = SubResource("RectangleShape2D_6rsfr")

[node name="Collision-fly" type="CollisionShape2D" parent="Player"]
position = Vector2(-3, 9.5)
shape = SubResource("RectangleShape2D_v4h71")

[node name="Texture" type="Sprite2D" parent="Player"]
texture = ExtResource("5_toxdn")
hframes = 4

[node name="AnimationPlayer" type="AnimationPlayer" parent="Player"]
libraries = {
"": SubResource("AnimationLibrary_la3eo")
}

[node name="Camera2D" type="Camera2D" parent="Player"]
position = Vector2(-2, 9)
zoom = Vector2(2, 2)
process_callback = 0
limit_left = 0
limit_top = 0
limit_right = 3135
limit_bottom = 650
drag_horizontal_enabled = true
drag_vertical_enabled = true

[node name="Poop-position" type="Marker2D" parent="Player"]
position = Vector2(-4, 13)

[node name="Dust" type="GPUParticles2D" parent="Player"]
show_behind_parent = true
position = Vector2(-8, 13)
emitting = false
amount = 16
process_material = SubResource("ParticleProcessMaterial_fewah")
texture = ExtResource("9_0rqtk")
lifetime = 0.2
speed_scale = 0.1

[node name="Fly" type="AudioStreamPlayer2D" parent="Player"]
stream = ExtResource("10_nixei")

[node name="Heal" type="AudioStreamPlayer2D" parent="Player"]
stream = ExtResource("11_jyhvo")

[node name="Coin" type="AudioStreamPlayer2D" parent="Player"]
stream = ExtResource("12_f6fcy")

[node name="Poop-baloon" type="AudioStreamPlayer2D" parent="Player"]

[node name="Poop" type="AudioStreamPlayer2D" parent="Player"]
stream = ExtResource("13_mtpvu")

[node name="Timer_attack" type="Timer" parent="Player"]
wait_time = 0.3

[node name="Direction" type="Marker2D" parent="Player"]
position = Vector2(0, 10)

[node name="ActionableFinder" type="Area2D" parent="Player/Direction"]
collision_layer = 0
collision_mask = 16

[node name="CollisionShape2D" type="CollisionShape2D" parent="Player/Direction/ActionableFinder"]
position = Vector2(14, -3)
shape = SubResource("CircleShape2D_xuuus")

[node name="PlatformTimer" type="Timer" parent="."]
wait_time = 0.15

[node name="CrowTimer" type="Timer" parent="."]
wait_time = 0.15

[node name="deathfloor" type="Area2D" parent="."]
position = Vector2(1623, 653)
scale = Vector2(70, 0.28)
collision_layer = 0
collision_mask = 34
script = ExtResource("5_s186n")

[node name="Tile14" type="Sprite2D" parent="deathfloor"]
texture = ExtResource("6_5ck32")

[node name="CollisionShape2D" type="CollisionShape2D" parent="deathfloor"]
shape = SubResource("RectangleShape2D_muc8h")
debug_color = Color(0.960784, 0, 0, 0.419608)

[node name="gameOver" type="AudioStreamPlayer2D" parent="deathfloor"]
stream = ExtResource("7_lej7j")
volume_db = 8.0

[node name="BgAudio" type="AudioStreamPlayer2D" parent="."]
volume_db = 1.0

[node name="Bg" type="AudioStreamPlayer" parent="."]
stream = ExtResource("17_y8oql")
volume_db = 3.0

[node name="efeito" type="Node2D" parent="."]

[node name="ChuvaForte" type="GPUParticles2D" parent="efeito"]
position = Vector2(2753, 342)
amount = 100
process_material = SubResource("ParticleProcessMaterial_2riw1")
texture = ExtResource("19_0e5mp")

[node name="ChuvaForte2" type="GPUParticles2D" parent="efeito"]
position = Vector2(2312, 346)
amount = 100
process_material = SubResource("ParticleProcessMaterial_2riw1")
texture = ExtResource("19_0e5mp")

[node name="ChuvaFraca" type="GPUParticles2D" parent="efeito"]
position = Vector2(158, 340)
amount = 60
process_material = SubResource("ParticleProcessMaterial_7pxby")
texture = ExtResource("19_0e5mp")

[node name="ChuvaFraca3" type="GPUParticles2D" parent="efeito"]
position = Vector2(529, 338)
amount = 60
process_material = SubResource("ParticleProcessMaterial_7pxby")
texture = ExtResource("19_0e5mp")

[node name="ChuvaFraca2" type="GPUParticles2D" parent="efeito"]
position = Vector2(947, 332)
amount = 60
process_material = SubResource("ParticleProcessMaterial_7pxby")
texture = ExtResource("19_0e5mp")

[node name="ChuvaMedia" type="GPUParticles2D" parent="efeito"]
position = Vector2(1409, 330)
amount = 100
process_material = SubResource("ParticleProcessMaterial_78ulc")
texture = ExtResource("19_0e5mp")

[node name="ChuvaMedia2" type="GPUParticles2D" parent="efeito"]
position = Vector2(1929, 344)
amount = 100
process_material = SubResource("ParticleProcessMaterial_78ulc")
texture = ExtResource("19_0e5mp")

[node name="Teto" type="RigidBody2D" parent="efeito"]
position = Vector2(0, 3)
gravity_scale = 0.0
sleeping = true
lock_rotation = true
freeze = true

[node name="CollisionShape2D" type="CollisionShape2D" parent="efeito/Teto"]
position = Vector2(1572.5, -8.5)
shape = SubResource("RectangleShape2D_abb04")

[node name="KillBirdsWall" type="Area2D" parent="."]
position = Vector2(3292, 237)
collision_layer = 0
collision_mask = 4

[node name="CollisionShape2D" type="CollisionShape2D" parent="KillBirdsWall"]
position = Vector2(-84, 83.5)
shape = SubResource("RectangleShape2D_ik0iu")

[node name="ColorRect" type="ColorRect" parent="."]
texture_filter = 1
material = SubResource("ShaderMaterial_aif7o")
offset_left = -28.0
offset_top = -1.0
offset_right = 3403.0
offset_bottom = 664.0
color = Color(0, 0, 0, 0)
script = ExtResource("20_l6nvm")

[node name="Cloud2" type="GPUParticles2D" parent="."]
position = Vector2(552, -33)
amount = 30
process_material = SubResource("ParticleProcessMaterial_352vk")
texture = ExtResource("23_bwkiv")
lifetime = 5.0

[node name="Cloud3" type="GPUParticles2D" parent="."]
visible = false
position = Vector2(1181, -9)
amount = 30
process_material = SubResource("ParticleProcessMaterial_352vk")
texture = ExtResource("23_bwkiv")
lifetime = 5.0

[node name="Storm" parent="." instance=ExtResource("22_ahv13")]
visible = false
position = Vector2(2664, 67)

[node name="Storm2" parent="." instance=ExtResource("22_ahv13")]
visible = false
position = Vector2(2097, 28)

[node name="BossCutScene" type="AnimationPlayer" parent="."]
libraries = {
"": SubResource("AnimationLibrary_mdch8")
}

[node name="Portal" type="Area2D" parent="BossCutScene"]
visible = false
position = Vector2(37, 14)
rotation = -1.5708
scale = Vector2(2, 2)
collision_mask = 32

[node name="CollisionShape2D" type="CollisionShape2D" parent="BossCutScene/Portal"]
position = Vector2(0, 4)
shape = SubResource("CapsuleShape2D_8uhbr")

[node name="Sprite2D" type="Sprite2D" parent="BossCutScene/Portal"]
texture = ExtResource("25_6w6m1")
hframes = 8
vframes = 3

[node name="AnimationPlayer" type="AnimationPlayer" parent="BossCutScene/Portal"]
autoplay = "idle"
libraries = {
"": SubResource("AnimationLibrary_b8agh")
}

[node name="Ballon" type="NinePatchRect" parent="BossCutScene"]
visible = false
offset_left = 95.0
offset_top = 42.0
offset_right = 251.0
offset_bottom = 104.0
scale = Vector2(1.3, 1.3)
texture = ExtResource("25_gfsnp")
region_rect = Rect2(0, 0, 20, 22)
patch_margin_left = 7
patch_margin_top = 7
patch_margin_right = 7
patch_margin_bottom = 10

[node name="BallonBoss" type="NinePatchRect" parent="BossCutScene"]
visible = false
offset_left = 66.0
offset_top = 22.0
offset_right = 226.0
offset_bottom = 84.0
scale = Vector2(1.3, 1.3)
texture = ExtResource("26_g3boc")
region_rect = Rect2(144, 64, 48, 16)
patch_margin_left = 4
patch_margin_top = 12
patch_margin_right = 4
patch_margin_bottom = 12

[node name="RichTextLabel" type="RichTextLabel" parent="BossCutScene"]
offset_left = 109.0
offset_top = 48.0
offset_right = 288.0
offset_bottom = 118.0
theme_override_colors/default_color = Color(0.27451, 0.14902, 0.27451, 1)
text = "Oh!     O que temos aqui? HA HA HA

Um pombinho?!?"
visible_characters = 0
visible_ratio = 0.0

[node name="Exclamation" type="AnimatedSprite2D" parent="BossCutScene"]
visible = false
position = Vector2(92, 116)
scale = Vector2(0.8, 0.8)
sprite_frames = SubResource("SpriteFrames_n5vql")
autoplay = "default"

[node name="Corvissius" type="CharacterBody2D" parent="BossCutScene"]
visible = false
modulate = Color(1, 1, 1, 0)
position = Vector2(40, 3)
scale = Vector2(1.6, 1.6)

[node name="CollisionShape2D" type="CollisionShape2D" parent="BossCutScene/Corvissius"]
visible = false
shape = SubResource("CapsuleShape2D_x4l77")

[node name="AnimationPlayer" type="AnimationPlayer" parent="BossCutScene/Corvissius"]
libraries = {
"": SubResource("AnimationLibrary_wjwsd")
}

[node name="Smoking" type="Sprite2D" parent="BossCutScene/Corvissius"]
visible = false
texture = ExtResource("29_0qnps")
hframes = 4
region_enabled = true
region_rect = Rect2(0, 97, 89, 30)

[node name="Laught" type="Sprite2D" parent="BossCutScene/Corvissius"]
visible = false
texture = ExtResource("29_0qnps")
hframes = 4
region_enabled = true
region_rect = Rect2(5, 133, 91, 26)

[node name="Walk" type="Sprite2D" parent="BossCutScene/Corvissius"]
visible = false
texture = ExtResource("29_0qnps")
hframes = 5
region_enabled = true
region_rect = Rect2(3, 1, 120, 26)

[node name="Crow" type="Sprite2D" parent="BossCutScene/Corvissius"]
visible = false
texture = ExtResource("29_0qnps")
flip_h = true
hframes = 4
region_enabled = true
region_rect = Rect2(244, 109, 70, 6)

[node name="Jump" type="Sprite2D" parent="BossCutScene/Corvissius"]
visible = false
texture = ExtResource("29_0qnps")
hframes = 3
region_enabled = true
region_rect = Rect2(2, 32, 70, 21)

[node name="Jump2" type="Sprite2D" parent="BossCutScene/Corvissius"]
visible = false
texture = ExtResource("29_0qnps")
hframes = 4
region_enabled = true
region_rect = Rect2(75, 27, 112, 26)

[node name="CrowGigante" type="CharacterBody2D" parent="BossCutScene"]
modulate = Color(1, 1, 1, 0)
position = Vector2(608, 229)
scale = Vector2(3, 3)
collision_layer = 4
collision_mask = 0
script = ExtResource("33_ql0pw")
move_speed = 140.0

[node name="AnimationPlayer" type="AnimationPlayer" parent="BossCutScene/CrowGigante"]
root_node = NodePath("../CollisionShape2D")
libraries = {
"": SubResource("AnimationLibrary_f48d5")
}

[node name="CollisionShape2D" type="CollisionShape2D" parent="BossCutScene/CrowGigante"]
shape = SubResource("CircleShape2D_3u6i5")

[node name="Sprite2D" type="Sprite2D" parent="BossCutScene/CrowGigante"]
texture = ExtResource("34_2iw1i")
hframes = 4
vframes = 4
frame = 11

[node name="Caw" type="Sprite2D" parent="BossCutScene"]
visible = false
position = Vector2(223, 51)
texture = ExtResource("34_2iw1i")
hframes = 4
vframes = 4
frame = 15

[node name="Caw2" type="Sprite2D" parent="BossCutScene"]
visible = false
modulate = Color(1, 1, 1, 0)
position = Vector2(220, 205)
texture = ExtResource("34_2iw1i")
hframes = 4
vframes = 4
frame = 15

[node name="Caw3" type="Sprite2D" parent="BossCutScene"]
visible = false
modulate = Color(1, 1, 1, 0)
position = Vector2(115, 101)
texture = ExtResource("34_2iw1i")
hframes = 4
vframes = 4
frame = 15

[node name="duvida" type="AnimatedSprite2D" parent="BossCutScene"]
visible = false
position = Vector2(139, 131)
sprite_frames = SubResource("SpriteFrames_nnxxk")
autoplay = "default"

[node name="GPUParticles2D" type="GPUParticles2D" parent="BossCutScene"]
position = Vector2(176, 168)
emitting = false
amount = 30
process_material = SubResource("ParticleProcessMaterial_j52qd")
texture = ExtResource("23_bwkiv")
lifetime = 0.7
one_shot = true

[node name="Node2D" type="Node2D" parent="BossCutScene"]

[node name="Crow" type="CharacterBody2D" parent="BossCutScene/Node2D"]
position = Vector2(34, -16)
collision_layer = 4
collision_mask = 0
script = ExtResource("33_ql0pw")
move_speed = 140.0

[node name="AnimationPlayer" type="AnimationPlayer" parent="BossCutScene/Node2D/Crow"]
root_node = NodePath("../CollisionShape2D")
libraries = {
"": SubResource("AnimationLibrary_bhn6j")
}

[node name="CollisionShape2D" type="CollisionShape2D" parent="BossCutScene/Node2D/Crow"]
shape = SubResource("CircleShape2D_4fway")

[node name="Sprite2D" type="Sprite2D" parent="BossCutScene/Node2D/Crow"]
texture = ExtResource("34_2iw1i")
hframes = 4
vframes = 4
frame = 11

[node name="DetectionArea" type="Area2D" parent="BossCutScene/Node2D/Crow"]
collision_layer = 0
collision_mask = 32

[node name="CollisionShape2D" type="CollisionShape2D" parent="BossCutScene/Node2D/Crow/DetectionArea"]
shape = SubResource("CircleShape2D_8s1yb")

[node name="Craw" type="Sprite2D" parent="BossCutScene/Node2D/Crow"]
modulate = Color(1, 1, 1, 0)
position = Vector2(33, -18)
texture = ExtResource("34_2iw1i")
hframes = 4
vframes = 4
frame = 15

[node name="AudioStreamPlayer" type="AudioStreamPlayer" parent="BossCutScene/Node2D/Crow"]
stream = ExtResource("27_0t7cb")

[node name="Crow2" type="CharacterBody2D" parent="BossCutScene/Node2D"]
visible = false
position = Vector2(281, -15)
collision_layer = 4
collision_mask = 0
script = ExtResource("33_ql0pw")
move_speed = 140.0

[node name="AnimationPlayer" type="AnimationPlayer" parent="BossCutScene/Node2D/Crow2"]
root_node = NodePath("../CollisionShape2D")
libraries = {
"": SubResource("AnimationLibrary_bhn6j")
}

[node name="CollisionShape2D" type="CollisionShape2D" parent="BossCutScene/Node2D/Crow2"]
shape = SubResource("CircleShape2D_4fway")

[node name="Sprite2D" type="Sprite2D" parent="BossCutScene/Node2D/Crow2"]
texture = ExtResource("34_2iw1i")
hframes = 4
vframes = 4
frame = 11

[node name="DetectionArea" type="Area2D" parent="BossCutScene/Node2D/Crow2"]
collision_layer = 0
collision_mask = 32

[node name="CollisionShape2D" type="CollisionShape2D" parent="BossCutScene/Node2D/Crow2/DetectionArea"]
shape = SubResource("CircleShape2D_8s1yb")

[node name="Craw" type="Sprite2D" parent="BossCutScene/Node2D/Crow2"]
modulate = Color(1, 1, 1, 0)
position = Vector2(33, -18)
texture = ExtResource("34_2iw1i")
hframes = 4
vframes = 4
frame = 15

[node name="AudioStreamPlayer" type="AudioStreamPlayer" parent="BossCutScene/Node2D/Crow2"]

[node name="Crow3" type="CharacterBody2D" parent="BossCutScene/Node2D"]
visible = false
position = Vector2(246, 366)
collision_layer = 4
collision_mask = 0
script = ExtResource("33_ql0pw")
move_speed = 140.0

[node name="AnimationPlayer" type="AnimationPlayer" parent="BossCutScene/Node2D/Crow3"]
root_node = NodePath("../CollisionShape2D")
libraries = {
"": SubResource("AnimationLibrary_bhn6j")
}

[node name="CollisionShape2D" type="CollisionShape2D" parent="BossCutScene/Node2D/Crow3"]
shape = SubResource("CircleShape2D_4fway")

[node name="Sprite2D" type="Sprite2D" parent="BossCutScene/Node2D/Crow3"]
texture = ExtResource("34_2iw1i")
flip_h = true
hframes = 4
vframes = 4
frame = 11

[node name="DetectionArea" type="Area2D" parent="BossCutScene/Node2D/Crow3"]
collision_layer = 0
collision_mask = 32

[node name="CollisionShape2D" type="CollisionShape2D" parent="BossCutScene/Node2D/Crow3/DetectionArea"]
shape = SubResource("CircleShape2D_8s1yb")

[node name="Craw" type="Sprite2D" parent="BossCutScene/Node2D/Crow3"]
modulate = Color(1, 1, 1, 0)
position = Vector2(33, -18)
texture = ExtResource("34_2iw1i")
hframes = 4
vframes = 4
frame = 15

[node name="AudioStreamPlayer" type="AudioStreamPlayer" parent="BossCutScene/Node2D/Crow3"]

[node name="donecut" type="Area2D" parent="."]
position = Vector2(3083, 168)
collision_layer = 0
collision_mask = 32

[node name="CollisionShape2D" type="CollisionShape2D" parent="donecut"]
position = Vector2(18, -79.5)
shape = SubResource("RectangleShape2D_m5a3s")

[node name="DoneCutScene" type="AnimationPlayer" parent="."]
libraries = {
"": SubResource("AnimationLibrary_ovasl")
}

[node name="Corvissius" type="CharacterBody2D" parent="DoneCutScene"]
position = Vector2(3108, 152)
scale = Vector2(2, 2)

[node name="CollisionShape2D" type="CollisionShape2D" parent="DoneCutScene/Corvissius"]
shape = SubResource("CapsuleShape2D_nb8ow")

[node name="AnimationPlayer" type="AnimationPlayer" parent="DoneCutScene/Corvissius"]
autoplay = "smoking"
libraries = {
"": SubResource("AnimationLibrary_vb7n3")
}

[node name="Smoking" type="Sprite2D" parent="DoneCutScene/Corvissius"]
texture = ExtResource("29_0qnps")
flip_h = true
hframes = 4
region_enabled = true
region_rect = Rect2(0, 97, 89, 30)

[node name="Laught" type="Sprite2D" parent="DoneCutScene/Corvissius"]
visible = false
texture = ExtResource("29_0qnps")
flip_h = true
hframes = 4
region_enabled = true
region_rect = Rect2(5, 133, 91, 26)

[node name="Walk" type="Sprite2D" parent="DoneCutScene/Corvissius"]
visible = false
texture = ExtResource("29_0qnps")
flip_h = true
hframes = 5
region_enabled = true
region_rect = Rect2(3, 1, 120, 26)

[node name="Crow" type="Sprite2D" parent="DoneCutScene/Corvissius"]
visible = false
texture = ExtResource("29_0qnps")
flip_h = true
hframes = 4
region_enabled = true
region_rect = Rect2(244, 109, 70, 6)

[node name="Jump" type="Sprite2D" parent="DoneCutScene/Corvissius"]
visible = false
texture = ExtResource("29_0qnps")
flip_h = true
hframes = 3
region_enabled = true
region_rect = Rect2(2, 32, 70, 21)

[node name="Jump2" type="Sprite2D" parent="DoneCutScene/Corvissius"]
visible = false
texture = ExtResource("29_0qnps")
flip_h = true
hframes = 4
region_enabled = true
region_rect = Rect2(75, 27, 112, 26)

[node name="BallonBoss" type="NinePatchRect" parent="DoneCutScene"]
modulate = Color(1, 1, 1, 0)
offset_left = 2895.0
offset_top = 36.0
offset_right = 3034.0
offset_bottom = 84.0002
scale = Vector2(1.3, 1.3)
texture = ExtResource("45_8jv61")
region_rect = Rect2(1, 65, 46, 14)
patch_margin_left = 4
patch_margin_top = 12
patch_margin_right = 4
patch_margin_bottom = 12

[node name="RichTextLabel" type="RichTextLabel" parent="DoneCutScene"]
offset_left = 2901.0
offset_top = 41.0
offset_right = 3068.0
offset_bottom = 93.0001
theme_override_colors/default_color = Color(0, 0, 0, 1)
text = "E não é que você sabe voar? HAHAHA"
fit_content = true
scroll_active = false
visible_characters = 0
visible_ratio = 0.0

[node name="Flash" type="AnimatedSprite2D" parent="DoneCutScene"]
visible = false
position = Vector2(3041, 142)
scale = Vector2(0.5, 0.5)
sprite_frames = SubResource("SpriteFrames_o0g2j")

[node name="AudioStreamPlayer" type="AudioStreamPlayer" parent="DoneCutScene"]

[connection signal="animation_finished" from="Player/AnimationPlayer" to="Player" method="_on_animation_player_animation_finished" flags=18]
[connection signal="timeout" from="Player/Timer_attack" to="Player" method="_on_timer_attack_timeout" flags=18]
[connection signal="timeout" from="PlatformTimer" to="." method="_on_platform_timer_timeout"]
[connection signal="timeout" from="CrowTimer" to="." method="_on_crow_timer_timeout"]
[connection signal="body_entered" from="deathfloor" to="deathfloor" method="_on_body_entered" flags=18]
[connection signal="body_entered" from="KillBirdsWall" to="." method="_on_kill_birds_wall_body_entered"]
[connection signal="animation_finished" from="BossCutScene" to="." method="_on_boss_cut_scene_animation_finished"]
[connection signal="body_entered" from="BossCutScene/Node2D/Crow/DetectionArea" to="BossCutScene/Node2D/Crow" method="_on_detection_area_body_entered" flags=18]
[connection signal="body_entered" from="BossCutScene/Node2D/Crow2/DetectionArea" to="BossCutScene/Node2D/Crow2" method="_on_detection_area_body_entered" flags=18]
[connection signal="body_entered" from="BossCutScene/Node2D/Crow3/DetectionArea" to="BossCutScene/Node2D/Crow3" method="_on_detection_area_body_entered" flags=18]
[connection signal="body_entered" from="donecut" to="." method="_on_donecut_body_entered"]
